/** @file boiler_direct_test.cpp
*/

/**
 *    Copyright (C) 2008 10gen Inc.
 *
 *    This program is free software: you can redistribute it and/or  modify
 *    it under the terms of the GNU Affero General Public License, version 3,
 *    as published by the Free Software Foundation.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the GNU Affero General Public License in all respects
 *    for all of the code used other than as permitted herein. If you modify
 *    file(s) with this exception, you may extend this exception to your
 *    version of the file(s), but you are not obligated to do so. If you do not
 *    wish to do so, delete this exception statement from your version. If you
 *    delete this exception statement from all source files in the program,
 *    then also delete it in the license file.
 */

#include "mongo/pch.h"

#include "mongo/db/db.h"
#include "mongo/db/instance.h"
#include "mongo/db/json.h"
#include "mongo/db/lasterror.h"
#include "mongo/dbtests/dbtests.h"

// NOTE: The queries within this file are automatically generated from the NLTK grammer
//       defined in QA-352.  Changes to the infrastructure should be made in the boiler
//       plate code; otherwise they may be overwritten.
namespace GeneratedTests {

    static const std::string& kNameSpace = "qry.QA401";

    // helper
    std::string getNextId() {
        static int id = 0;
        stringstream s;
        s << id++;
        return s.str();
    }

    // Base client helper
    struct ClientBase {
        ClientBase() { mongo::lastError.reset(new LastError()); }
        virtual ~ClientBase() { }

    protected:
        static bool error() {
            return !_client.getPrevError().getField( "err" ).isNull();
        }
        static DBDirectClient _client;
    };
    DBDirectClient ClientBase::_client;

    // Runner for generated queries
    template <typename Q>
    struct GeneratedQueryRunner : ClientBase {
        virtual void run(){
            auto_ptr<DBClientCursor> cursor = _client.query(kNameSpace, Q::getQuery(), 0);
            ASSERT(!error());

            int docCount = 0;
            BSONObj result;
            while (cursor->more()) {
                ++docCount;
                result = cursor->next().getOwned();
            }
            LOG(0) << "\t result count: " << docCount;
        }
    };

    // Dataset used by generated queries
    struct InsertDocuments : ClientBase {
        virtual void run() {
            _client.dropCollection(kNameSpace);
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]},\"d\":{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',314159265001]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.','You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,-90],\"locLegacy\":[180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":[null,{\"c\":'You can do anything, but not everything.'},1]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Usted debe ser el cambio que deseas ver en el mundo.',\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[{\"c\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}},null]},\"b\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null,'You can do anything, but not everything.'],{\"_id\":314159265014},{\"arrayField\":[{\"arrayField\":[[[314159265011]]]},{\"d\":''}]},{\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"a\":{\"c\":{\"locHaystack\":[-25,90.0]}}},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"$date\": \"2013-09-29T19:00:00.000-0500\"},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"arrayField\":[false]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[''],{\"locHaystack\":{ 'lng': -33.3, 'lat': 0.0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',null],\"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":{ 'lng': 0, 'lat': 89.9}},\"arrayField\":[{\"locLegacy\":[179.9,-90.0],\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]}}]},\"arrayField\":['You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":-3.14159265000,\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"},\"d\":{\"b\":{\"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"_id\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":[314159265004,{\"a\":'You must be the change you wish to see in the world. anything',\"c\":{\"arrayField\":[[{\"d\":'You can do anything, but not everything.'},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,25]}},false],'','',{\"c\":{\"locHaystack\":{ 'lng': -179.9, 'lat': -25},\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'}}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":[null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,25],\"locHaystack\":{ 'lng': -180, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]},\"locLegacy\":[180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[180,89.9]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',[0],314159265009]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"locHaystack\":{ 'lng': 180, 'lat': 0.0},\"a\":{}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,0,'You can do anything, but not everything.'],\"arrayField\":[],\"_id\":{\"arrayField\":[0.0,1,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[null],\"c\":{\"a\":'You miss 100 percent of the shots you never take. anything'}},\"locHaystack\":[33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You miss 100 percent of the shots you never take. anything',\"b\":null,\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]}},\"locLegacy\":[-25,0],\"arrayField\":[-3.14159265359]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":[[{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},1,{\"arrayField\":['','Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']},{\"arrayField\":[{\"c\":null}],\"locHaystack\":[-179.9,90.0]}]},null,null,{\"locLegacy\":[0.0,-25]},0.00000000049406564841,{\"_id\":true,\"locHaystack\":{ 'lng': -25, 'lat': -89.9},\"a\":[{\"arrayField\":[0,[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},'You can do anything, but not everything.']],\"locHaystack\":[-180,0.0]}],\"arrayField\":[{\"a\":[0,{\"arrayField\":[{\"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"locLegacy\":[-180,33.3]}]},'','Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,89.9]},\"c\":{\"arrayField\":['',1],\"a\":{\"locHaystack\":{ 'lng': 0, 'lat': -25}}}}]]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"d\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"},\"locHaystack\":{ 'lng': 179.9, 'lat': -89.9},\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'],\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}},\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],\"b\":{\"arrayField\":[]},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},'',{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}},'You can do anything, but not everything.']}],{\"arrayField\":[314159265007,'',314159265019,{\"arrayField\":[0,{\"b\":{\"arrayField\":[{\"locLegacy\":[179.9,-89.9],\"arrayField\":[null,{\"locLegacy\":[180.0,-90]}],\"b\":'You can do anything, but not everything.'},{},{},{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',null],\"arrayField\":[]}]}}]},'The richest man is not he who has the most, but he who needs the least. anything']},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265017}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[[{\"locHaystack\":[25,90.0]}]],{\"locLegacy\":[180,-90],\"arrayField\":[{\"locLegacy\":[180.0,-90],\"arrayField\":[false,{},null,false,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}},{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},{\"locHaystack\":{ 'lng': -33.3, 'lat': -33.3}},[{\"arrayField\":[null,null,'You can do anything, but not everything.',{\"$date\": \"9999-12-31T23:59:59.000-0500\"},['',{\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"a\":[{\"locHaystack\":[179.9,90]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0]}},'Echa de menos el 100 por ciento de los tiros que nunca toma.'],{\"locHaystack\":{ 'lng': -180.0, 'lat': -90}}],\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}],'You can do anything, but not everything.',{\"arrayField\":[[],false,'']},{\"arrayField\":[null]}],\"locHaystack\":{ 'lng': -33.3, 'lat': 90},\"d\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},true]},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]},\"b\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265018]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90]}},'You can do anything, but not everything.',314159265006]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},-3.14159265359],\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265006}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['You can do anything, but not everything.'],{\"a\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},[{\"d\":314159265001,\"a\":false}],'You can do anything, but not everything.']},{\"arrayField\":['']},{\"arrayField\":[[{\"c\":{\"arrayField\":[314159265017,{\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}]}},[false],{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"arrayField\":['You can do anything, but not everything.']},[{\"b\":''},1797693134862315799999,{\"locLegacy\":[33.3,33.3]},true],{\"arrayField\":[{\"locHaystack\":[0,-33.3]}]}],'']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]},\"arrayField\":[314159265002,{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}}]},{\"_id\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]},1,{\"locHaystack\":[33.3,90],\"locLegacy\":[-180,-33.3],\"locHaystack\":{ 'lng': -180, 'lat': -89.9},\"c\":314159265006}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"b\":'',\"a\":{\"d\":{\"locHaystack\":[180,90.0]},\"arrayField\":[{}]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',null,314159265005,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"d\":{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}},\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"c\":{\"arrayField\":[{\"c\":{\"locHaystack\":{ 'lng': -180, 'lat': -90.0}}},{\"arrayField\":['You can do anything, but not everything.',0]}]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265009}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]}},'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[{},false]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":['You miss 100 percent of the shots you never take. anything','You can do anything, but not everything.'],\"arrayField\":[314159265014]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"a\":true},\"locLegacy\":[0,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"$date\": \"2000-01-01T01:00:00.000-0500\"}],\"arrayField\":[{\"arrayField\":[null],\"locHaystack\":{ 'lng': 0.0, 'lat': -89.9},\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}]},{\"locLegacy\":[-180,-89.9]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":1,\"a\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,0.0],\"a\":{\"arrayField\":[{\"arrayField\":[{\"c\":1}]},[{\"locHaystack\":[0.0,90.0],\"arrayField\":[false],\"b\":{\"c\":314159265019}},{\"arrayField\":[{\"arrayField\":[{\"a\":{\"arrayField\":[['I quit therapy because my analyst was trying to help me behind my back. anything',''],{\"d\":{\"c\":{\"c\":{\"c\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"_id\":null}},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90]}}},314159265016]},\"arrayField\":[{},{\"arrayField\":[1,{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}]},null]}]},{\"arrayField\":[{\"arrayField\":[[314159265009,{\"arrayField\":[null,'You can do anything, but not everything.']},{\"a\":[{\"arrayField\":[{},{\"arrayField\":[{\"locHaystack\":[0.0,0]},'You miss 100 percent of the shots you never take. anything']},{\"arrayField\":[{\"locHaystack\":{ 'lng': 0.0, 'lat': 33.3}},'You miss 100 percent of the shots you never take. anything']},'']},[1],[{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.',\"a\":314159265004},{\"arrayField\":['You must be the change you wish to see in the world. anything']}],314159265003,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]}]]}]},[-3.14159265000],null,{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}]}],{\"$date\": \"2008-02-29T12:01:00.000-0500\"},[{\"c\":'Usted debe ser el cambio que deseas ver en el mundo.',\"b\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"},\"locLegacy\":[33.3,89.9]},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"b\":'You can do anything, but not everything.'},{\"arrayField\":[[{\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]},{},{\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},{\"c\":{\"arrayField\":[1,{\"arrayField\":[1,{\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]},0.00002225073858072014,314159265002,true]}}],[1,true],[{\"arrayField\":[true,'Usted debe ser el cambio que deseas ver en el mundo.',{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything','You must be the change you wish to see in the world. anything']},''],\"arrayField\":[['',[{\"locHaystack\":{ 'lng': 33.3, 'lat': 25}}],314159265009,{},[{\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]},\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"arrayField\":[{\"c\":{\"locHaystack\":[0.0,0.0]}}]},0,[314159265002,{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]}},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'],{\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}],'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',1,'',314159265006,'']}],{\"arrayField\":[{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]},\"a\":'You can do anything, but not everything.'},\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}]},{\"arrayField\":[''],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]},\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"locHaystack\":{ 'lng': 180, 'lat': 25},\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}},{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"arrayField\":['']},['']]},'You must be the change you wish to see in the world. anything',{\"locLegacy\":[-33.3,0],\"c\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}},{\"c\":{\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"a\":['You can do anything, but not everything.','To the man who only has a hammer, everything he encounters begins to look like a nail. anything']},\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"b\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},{\"arrayField\":[{\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90]}},\"d\":[''],\"arrayField\":['']},{\"locLegacy\":[33.3,-33.3]}]},{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}],false,{\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]},\"arrayField\":[{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'],\"locHaystack\":{ 'lng': -180.0, 'lat': 90}},-3.14159265359,1,{\"locHaystack\":{ 'lng': -33.3, 'lat': 89.9}},{\"$date\": \"2013-09-29T19:00:00.000-0500\"},3.14159265359,{\"locLegacy\":[-180,89.9]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"d\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":[0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[3.14159265359,{\"d\":'You can do anything, but not everything.'}],\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},1,null],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90]}},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"arrayField\":[{\"locLegacy\":[180.0,0.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":314159265001},[{\"locHaystack\":{ 'lng': -25, 'lat': -90}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":{\"locHaystack\":{ 'lng': -179.9, 'lat': -89.9}}},{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"c\":''},\"arrayField\":[{\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.','']},'',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}]},{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"a\":{\"locHaystack\":{ 'lng': -33.3, 'lat': 25}}},1]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":{ 'lng': 0, 'lat': 90}},314159265004],null],\"arrayField\":['You can do anything, but not everything.',{\"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',1],\"arrayField\":['',[['',[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}],[null,{\"locHaystack\":[-33.3,89.9]},false]]]],{\"arrayField\":['',{\"arrayField\":[{\"arrayField\":[{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.',\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},'The richest man is not he who has the most, but he who needs the least. anything','You can do anything, but not everything.','',{\"b\":{\"arrayField\":[314159265004,314159265009,null,'Usted puede hacer cualquier cosa, pero no todo.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]},\"d\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}],\"b\":1,\"c\":'You can do anything, but not everything.'}},{\"locHaystack\":{ 'lng': 180.0, 'lat': -90.0},\"arrayField\":[{\"locLegacy\":[25,25],\"arrayField\":[[false,314159265001,0.00000000049406564841,'I quit therapy because my analyst was trying to help me behind my back. anything'],{\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]},{\"d\":'You can do anything, but not everything.',\"locLegacy\":[-180.0,-89.9],\"locLegacy\":[0,-90.0]},[{\"arrayField\":[null,314159265000,{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}]]}]},'You can do anything, but not everything.','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']},-3.14159265000]},{\"_id\":'You miss 100 percent of the shots you never take. anything'}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]}},[null,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"arrayField\":[0],\"b\":{\"locHaystack\":{ 'lng': 0, 'lat': -90.0},\"c\":'You must be the change you wish to see in the world. anything'}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":[-180,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[[''],'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',[{\"arrayField\":['You miss 100 percent of the shots you never take. anything']},{\"d\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"},\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'}],'']},'',{\"arrayField\":[],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,89.9]}}]},'Usted puede hacer cualquier cosa, pero no todo.',-3.14159265359]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]},\"_id\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['',{\"a\":{\"arrayField\":[{\"locHaystack\":{ 'lng': 0, 'lat': 90.0}}],\"arrayField\":['You miss 100 percent of the shots you never take. anything',{\"locLegacy\":[-25,89.9]},'You can do anything, but not everything.',{\"d\":{\"d\":{\"arrayField\":[{\"c\":{\"a\":{\"c\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0.0]}}}},''],\"d\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]}}]},\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-25]},\"arrayField\":[true]},\"locHaystack\":[33.3,-33.3]}]},\"locHaystack\":{ 'lng': 25, 'lat': -90.0}},{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]},'',{\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"locLegacy\":[-180.0,33.3]}]}],\"locHaystack\":[33.3,90],\"d\":{\"locHaystack\":{ 'lng': -179.9, 'lat': -89.9}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"locHaystack\":{ 'lng': 0, 'lat': 0},\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null,1]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265004]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[0]},{\"arrayField\":[{\"d\":{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},['']]},\"arrayField\":['','To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}]},1]},[null],{\"arrayField\":[[{\"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}},{},[{\"c\":'You can do anything, but not everything.'}],'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'],{\"locHaystack\":{ 'lng': 25, 'lat': -33.3}}],\"arrayField\":['You can do anything, but not everything.']}],\"arrayField\":[false]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":1,\"d\":{\"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-90.0],\"arrayField\":[{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']},-3.14159265000,{\"arrayField\":[],\"locHaystack\":[180,89.9]},{\"locLegacy\":[0.0,0],\"arrayField\":['You must be the change you wish to see in the world. anything',{\"b\":{\"arrayField\":[]}}],\"d\":{\"arrayField\":['',{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]},true]}},{\"arrayField\":['You can do anything, but not everything.']}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]},\"_id\":314159265011,\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null,'',0.0,{\"arrayField\":[{}]},{\"locHaystack\":[-180.0,-33.3]},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[[null],{\"locHaystack\":{ 'lng': 179.9, 'lat': -90}},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":0.00002225073858072014}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',null,{\"c\":{\"arrayField\":[{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}}]}}],\"arrayField\":[{\"a\":'Usted puede hacer cualquier cosa, pero no todo.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]},\"b\":{\"arrayField\":['',null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.','You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['','The richest man is not he who has the most, but he who needs the least. anything',{\"arrayField\":['',null]}]},'',[0],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],\"c\":null,\"arrayField\":[true]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]},\"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'Usted debe ser el cambio que deseas ver en el mundo.',\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']},[{\"arrayField\":[0.00002225073858072014],\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]},\"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,33.3]}}],{\"locHaystack\":[-179.9,25]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[null,{\"c\":314159265003}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null,'You can do anything, but not everything.',{\"locHaystack\":{ 'lng': 179.9, 'lat': -33.3}}]},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'',\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything','',{\"arrayField\":[{\"arrayField\":[null,314159265007],\"arrayField\":['You can do anything, but not everything.','You can do anything, but not everything.'],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-25]}}]},{\"c\":{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{}]}},'','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"b\":{\"locHaystack\":[-25,90.0]}},\"arrayField\":[''],\"locHaystack\":[-180.0,90.0],\"locLegacy\":[179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"locLegacy\":[-180,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],\"arrayField\":['You can do anything, but not everything.']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 33.3},\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":{ 'lng': 33.3, 'lat': 0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"a\":{\"b\":{\"arrayField\":['']}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]}},false,{\"locHaystack\":[33.3,-33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]},\"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],\"arrayField\":[0,[{\"a\":'You can do anything, but not everything.'},{\"d\":''},{\"locHaystack\":{ 'lng': 25, 'lat': 33.3},\"locLegacy\":[0.0,-25]},314159265001]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[null,{\"locHaystack\":{ 'lng': 25, 'lat': 90},\"arrayField\":[314159265008,{\"arrayField\":[3.14159265359]},'You can do anything, but not everything.',{\"arrayField\":[{\"b\":[{\"b\":'You can do anything, but not everything.'}]},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,0.0]},\"c\":'Usted puede hacer cualquier cosa, pero no todo.',\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'The richest man is not he who has the most, but he who needs the least. anything',\"a\":314159265003}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90]},\"arrayField\":[null,{\"locHaystack\":{ 'lng': 25, 'lat': 90.0},\"d\":314159265008},{\"arrayField\":[null],\"arrayField\":['You can do anything, but not everything.']},false,{\"arrayField\":[null]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]},\"_id\":314159265001},{\"arrayField\":[{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',null,{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0]}}],\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"locHaystack\":{ 'lng': 180.0, 'lat': -25}},{\"locLegacy\":[180.0,-90]},{\"locHaystack\":[180.0,-25]},{\"locHaystack\":[-25,33.3],\"locHaystack\":[-25,-33.3]},'Usted debe ser el cambio que deseas ver en el mundo.']},'You miss 100 percent of the shots you never take. anything',314159265003,'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],\"arrayField\":[[[{\"locHaystack\":{ 'lng': 180, 'lat': -33.3}},314159265008,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],0],''],\"b\":'',\"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]},\"arrayField\":[{\"arrayField\":[{\"locLegacy\":[180,25]},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything','']},{\"arrayField\":[{\"_id\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},314159265000,{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}},{\"$date\": \"2008-02-29T12:01:00.000-0500\"},314159265012,-3.14159265859,'You can do anything, but not everything.']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"d\":{\"locHaystack\":[-33.3,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"c\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,33.3]},\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]},\"arrayField\":[{\"b\":314159265011,\"c\":{\"arrayField\":[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]}},{\"arrayField\":['',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}},{\"b\":0},'You can do anything, but not everything.',{\"arrayField\":[314159265000,null,{},{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]},{\"a\":{\"arrayField\":[1]},\"b\":{\"locHaystack\":[180.0,0]}},{\"a\":{\"arrayField\":[{\"a\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"arrayField\":[[[{\"locLegacy\":[-33.3,90.0]}],{\"a\":{\"d\":''}}]]},{\"b\":''},null]}},'Usted debe ser el cambio que deseas ver en el mundo.']}]},\"a\":''}]}]},true]},[{\"locHaystack\":{ 'lng': -180.0, 'lat': 0},\"arrayField\":[[],{\"locHaystack\":{ 'lng': 33.3, 'lat': -33.3}},[''],'Echa de menos el 100 por ciento de los tiros que nunca toma.','']},{\"d\":314159265012},{\"locHaystack\":[-180,0]},'']]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}}]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":[-180.0,33.3],\"arrayField\":[{\"arrayField\":[['You can do anything, but not everything.','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],[[{\"locLegacy\":[-180.0,90]}]]],\"arrayField\":[true,1,'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']},314159265015]},'Usted debe ser el cambio que deseas ver en el mundo.',{\"arrayField\":['You can do anything, but not everything.']},'You miss 100 percent of the shots you never take. anything']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-179.9,-90.0]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90]}}],\"arrayField\":[{\"b\":''}],\"locLegacy\":[-25,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.',[314159265001,{\"arrayField\":[]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.',\"c\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,89.9]},\"locHaystack\":[180,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted puede hacer cualquier cosa, pero no todo.',\"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-25],\"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',1,{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]}},[1,{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]}},[]]},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']],\"c\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"a\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},\"_id\":{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas','Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265017,null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"d\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,25]},\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]},\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},null],\"arrayField\":['You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]},\"locLegacy\":[180,-90]},'',{\"locLegacy\":[25,25]},[null]]},\"locHaystack\":{ 'lng': 180, 'lat': 90.0},\"a\":{\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"arrayField\":['You can do anything, but not everything.','']},{\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265003}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']},{},{\"arrayField\":['',[{\"a\":''}],null],\"locHaystack\":{ 'lng': -180, 'lat': -33.3}},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']},{\"$date\": \"2013-09-29T19:00:00.000-0500\"},'You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false,{\"$date\": \"2013-09-29T19:00:00.000-0500\"},[null]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,'',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]}}]},314159265003]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]},\"arrayField\":[{\"arrayField\":[{}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-89.9]},\"locHaystack\":{ 'lng': 25, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 89.9},\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.'],\"locHaystack\":{ 'lng': 0.0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false],\"b\":314159265005}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":{ 'lng': -33.3, 'lat': 0.0}},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]}},null],\"arrayField\":[{\"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}},'','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],[314159265015,{\"b\":'Usted puede hacer cualquier cosa, pero no todo.'},[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]],{\"d\":{}},null,1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"d\":null,\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',{},'Usted debe ser el cambio que deseas ver en el mundo.',{\"b\":-314159265359,\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]}},'You can do anything, but not everything.'],\"locHaystack\":[0.0,89.9]}}],\"arrayField\":[{\"arrayField\":[true],\"locHaystack\":{ 'lng': 179.9, 'lat': 0}},'Usted debe ser el cambio que deseas ver en el mundo.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"d\":{\"arrayField\":[{\"arrayField\":[[{},null],null,[[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]],null]}]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[{\"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]},\"a\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"b\":{\"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': -25},\"arrayField\":[{\"arrayField\":[[{\"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"arrayField\":['',null,{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"locHaystack\":[179.9,-90.0]},{\"arrayField\":[null]}]}]]}]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,25]},\"locLegacy\":[-179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]},\"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90]}},{\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.',{\"arrayField\":[{\"locLegacy\":[-180.0,-25]},{\"arrayField\":['You miss 100 percent of the shots you never take. anything','Usted puede hacer cualquier cosa, pero no todo.','You can do anything, but not everything.']}]},[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],[[[{\"arrayField\":['']},'Usted puede hacer cualquier cosa, pero no todo.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}}],1,null]]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":[{\"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[{\"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"d\":'',\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}},{\"arrayField\":[{\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},{\"arrayField\":[null,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']},1,{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]},\"locLegacy\":[-180.0,0.0]},{\"d\":''},{\"arrayField\":[null]},{\"arrayField\":[[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]},\"arrayField\":[]}]},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'],\"c\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":[{},0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[false],'','Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},[314159265000,{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-89.9]},\"_id\":'You can do anything, but not everything.'}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0]},\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},{\"arrayField\":[{\"c\":'You must be the change you wish to see in the world. anything'},{\"arrayField\":['']},['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',null,null],314159265001,{\"arrayField\":[{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}]},{},[1,314159265000],{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']},[1],'Usted puede hacer cualquier cosa, pero no todo.',null]},[{\"d\":{\"locHaystack\":{ 'lng': -179.9, 'lat': -33.3}}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'',\"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[]],\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[0.0],\"locHaystack\":{ 'lng': 0, 'lat': -90.0}},1]}]},false,'',{\"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}},[null,{\"arrayField\":[false],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]},\"arrayField\":[true,'Echa de menos el 100 por ciento de los tiros que nunca toma.']}],{\"arrayField\":[[0]]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265003,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":[{\"arrayField\":[{\"locHaystack\":[-179.9,25],\"locHaystack\":{ 'lng': 0.0, 'lat': 89.9}},{\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-89.9]},\"d\":0}},{\"arrayField\":[{\"b\":0},false,'Echa de menos el 100 por ciento de los tiros que nunca toma.',0]},{\"_id\":false}],\"arrayField\":['You can do anything, but not everything.',{\"c\":[{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0]}}},314159265011]}]},{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}],\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 33.3},\"c\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265004]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":{ 'lng': 33.3, 'lat': -90.0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{\"locHaystack\":{ 'lng': -179.9, 'lat': 33.3}},{\"locHaystack\":[-180.0,-90.0]},['Usted puede hacer cualquier cosa, pero no todo.',0,'You can do anything, but not everything.']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"arrayField\":[{\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},{\"a\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"c\":['']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,'You must be the change you wish to see in the world. anything','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[33.3,33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',{\"locHaystack\":[0.0,-90.0]},{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"arrayField\":['',[{\"locHaystack\":[33.3,-89.9]}],{}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,33.3],\"arrayField\":['You miss 100 percent of the shots you never take. anything','You can do anything, but not everything.',{\"arrayField\":[{\"locLegacy\":[180,-90]}]},0,{\"locHaystack\":{ 'lng': -33.3, 'lat': -25},\"locHaystack\":[25,-89.9]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null,'You miss 100 percent of the shots you never take. anything',0]},314159265012]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":true,\"_id\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"locHaystack\":[-25,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null],\"arrayField\":['','',314159265014,{},{\"locHaystack\":[33.3,-89.9]}]},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You miss 100 percent of the shots you never take. anything',\"locLegacy\":[-179.9,-33.3],\"arrayField\":['You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265007]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': 33.3, 'lat': 25},\"arrayField\":[{\"d\":'You can do anything, but not everything.'},['You can do anything, but not everything.']]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"locHaystack\":{ 'lng': 179.9, 'lat': -89.9}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',true],\"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]},\"arrayField\":[''],\"locHaystack\":[-33.3,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"a\":0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,90],\"arrayField\":['You miss 100 percent of the shots you never take. anything',{\"locHaystack\":{ 'lng': -25, 'lat': 90}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',null,314159265000,314159265010]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265005,{\"a\":null},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}},{\"locHaystack\":{ 'lng': 180.0, 'lat': -90.0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{\"c\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-90],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{},\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"arrayField\":[{\"locLegacy\":[0.0,-90.0],\"c\":''},{\"b\":{\"arrayField\":[]}}]},null],{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',false,null,'You can do anything, but not everything.',{\"_id\":''}]},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-33.3],\"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265015]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['You can do anything, but not everything.']],\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,90.0],\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"locLegacy\":[-179.9,0.0],\"c\":{\"arrayField\":['','When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']},\"locLegacy\":[-180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,90.0],\"locLegacy\":[-25,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[-3.14159265359,true]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":{ 'lng': 25, 'lat': -25},\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]},\"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}],\"arrayField\":[0,{\"_id\":'You must be the change you wish to see in the world. anything'},true,{\"locHaystack\":[0.0,90],\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]},{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything']}],\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":'I quit therapy because my analyst was trying to help me behind my back. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"$date\": \"2013-09-29T19:00:00.000-0500\"},['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],{\"arrayField\":[{\"c\":{\"arrayField\":[null]},\"locHaystack\":[-25,-25]},1797693134862315799999]},{\"locHaystack\":{ 'lng': -180.0, 'lat': 90}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90]}},{\"arrayField\":[314159265014]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}}],\"locHaystack\":{ 'lng': 180.0, 'lat': 0.0},\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"b\":{\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'},\"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},null,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.','']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[]],\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You must be the change you wish to see in the world. anything',\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true],\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{\"$date\": \"9999-12-31T23:59:59.000-0500\"},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"locHaystack\":{ 'lng': 180.0, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,25],\"arrayField\":[[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},true]],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',1797693134862315799999]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265005}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': 180, 'lat': -25}}],\"arrayField\":[{\"arrayField\":[null]},1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[[0.00002225073858072014,1,'You can do anything, but not everything.']],\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],\"arrayField\":[{}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,'',[{\"b\":'Usted puede hacer cualquier cosa, pero no todo.'}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"locHaystack\":[25,89.9]},314159265000]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-179.9,0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.',\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"c\":null,\"locLegacy\":[180.0,89.9]},{\"c\":null}]}]},{\"arrayField\":[{\"d\":''},1,{\"locLegacy\":[-33.3,-89.9],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90.0]}}]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"arrayField\":[{\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},314159265016,{\"arrayField\":[314159265006]}]},null,{\"d\":314159265014},{\"locHaystack\":[-25,-90]},{\"arrayField\":[{\"c\":[1,'Echa de menos el 100 por ciento de los tiros que nunca toma.']},{\"arrayField\":[{\"arrayField\":[true,'I quit therapy because my analyst was trying to help me behind my back. anything',null],\"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},[{\"arrayField\":[{}],\"c\":'You can do anything, but not everything.'}]]}],\"locLegacy\":[0.0,25],\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},{\"arrayField\":[{}]}]},314159265003]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"a\":{\"locHaystack\":{ 'lng': 180.0, 'lat': 25}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,90],\"arrayField\":[{\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]},{\"locHaystack\":{ 'lng': 33.3, 'lat': 0},\"locHaystack\":[179.9,0]}],\"a\":314159265004}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Usted debe ser el cambio que deseas ver en el mundo.',\"locHaystack\":[-180,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 90.0},\"a\":{\"locLegacy\":[-179.9,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,{\"d\":''}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[0,{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}},314159265018,314159265014]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'',\"arrayField\":[1797693134862315799999]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}},1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"b\":{\"arrayField\":['']},\"arrayField\":[{\"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"},\"c\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"d\":{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"locLegacy\":[-180,89.9],\"locHaystack\":[-180.0,25],\"locLegacy\":[-179.9,25]}]},{\"locHaystack\":[25,25],\"a\":null},null,'']},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{\"_id\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]],\"b\":{\"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90]},\"arrayField\":[{\"locLegacy\":[179.9,-25]},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":true,\"locLegacy\":[-25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-33.3,0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0.00000000049406564841,{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"arrayField\":[{\"a\":{\"b\":'You can do anything, but not everything.'}}]}]},{\"locHaystack\":[-180.0,0],\"b\":null},{\"arrayField\":[{\"arrayField\":[]},{\"locHaystack\":{ 'lng': 180, 'lat': 0.0}}]}],'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.','You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":[{\"a\":''}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,-33.3],\"arrayField\":[{\"locLegacy\":[-180.0,-90.0],\"locHaystack\":{ 'lng': 180.0, 'lat': 25}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'You can do anything, but not everything.'}],\"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":['You miss 100 percent of the shots you never take. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}],\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[180,89.9],\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -180.0, 'lat': -90.0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90.0]}},[null,{\"d\":{\"d\":false,\"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}},{\"d\":{\"b\":{\"locHaystack\":{ 'lng': -180.0, 'lat': 90}}}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"},\"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[[[[{\"_id\":3.14159265359}]]],'',{\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]},\"a\":''},'Usted puede hacer cualquier cosa, pero no todo.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]}}]}]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"d\":{\"locHaystack\":[-33.3,-33.3],\"arrayField\":[{\"locLegacy\":[-180.0,0.0]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-25,-33.3],\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]},\"locHaystack\":[33.3,-25],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}},'']}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,0.0],\"b\":'',\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"arrayField\":['You can do anything, but not everything.']}]},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',314159265007]},['You can do anything, but not everything.']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,33.3],\"a\":1797693134862315799999}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,90],\"c\":{\"arrayField\":[{\"arrayField\":[{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}],\"locHaystack\":{ 'lng': 0.0, 'lat': 0.0}},{\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"locHaystack\":[-33.3,89.9]}],\"d\":{\"b\":'',\"arrayField\":['You can do anything, but not everything.',314159265001,[{\"locHaystack\":{ 'lng': -180, 'lat': 0.0}},'',{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]],\"_id\":314159265007,\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},\"a\":['You must be the change you wish to see in the world. anything']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":0,\"c\":314159265017,\"arrayField\":[{\"arrayField\":[null]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]},\"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265015,null,{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},[true],'',{\"arrayField\":[{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90]}}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]}},314159265012,'Usted debe ser el cambio que deseas ver en el mundo.',{\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"locLegacy\":[180,-90.0],\"c\":{\"arrayField\":[null,'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas','You can do anything, but not everything.'],\"arrayField\":[1,{\"arrayField\":['You can do anything, but not everything.']}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"a\":{\"locLegacy\":[-180,0],\"a\":'You miss 100 percent of the shots you never take. anything',\"arrayField\":[0,{\"arrayField\":[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}},{\"c\":{\"arrayField\":[true,'You can do anything, but not everything.','You can do anything, but not everything.'],\"arrayField\":[],\"arrayField\":[null]}},{\"locHaystack\":{ 'lng': 179.9, 'lat': 0}}],\"arrayField\":[0,{\"arrayField\":[['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}},'',{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]]},'You must be the change you wish to see in the world. anything'],\"arrayField\":[314159265016,{\"arrayField\":[{\"a\":'You can do anything, but not everything.'},'',{\"c\":null},0,'Usted puede hacer cualquier cosa, pero no todo.',{\"$date\": \"2000-01-01T01:00:00.000-0500\"},null]}]},'You can do anything, but not everything.'],\"a\":'You can do anything, but not everything.',\"b\":'You must be the change you wish to see in the world. anything'},\"a\":'You can do anything, but not everything.'}]},\"a\":{\"locLegacy\":[0.0,90.0],\"locLegacy\":[180.0,0.0]},\"_id\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[25,90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['',{\"arrayField\":['You can do anything, but not everything.',null,{\"locHaystack\":{ 'lng': -33.3, 'lat': -90},\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.'},{\"arrayField\":[{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',{\"d\":'You must be the change you wish to see in the world. anything'}],\"arrayField\":[null,null,{\"d\":{\"arrayField\":[314159265018]}}]}]}]}],[{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}}}],'',{\"arrayField\":[null,{\"locHaystack\":{ 'lng': 180, 'lat': -90}},{\"d\":'You can do anything, but not everything.'}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":{\"b\":{\"_id\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}}}],\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,-90.0],\"arrayField\":[null,'Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"arrayField\":[{\"locHaystack\":[179.9,-33.3]},true]},''],\"b\":314159265015}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -33.3, 'lat': 25}},{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[314159265008]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-89.9]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'',\"locHaystack\":[25,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265011,[314159265006,{\"locHaystack\":{ 'lng': -180.0, 'lat': -33.3}},{\"arrayField\":[{\"locLegacy\":[0.0,-90.0]},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything','You can do anything, but not everything.',{\"arrayField\":[{\"arrayField\":[0,{}],\"locHaystack\":{ 'lng': -180, 'lat': -90.0}}],\"c\":{\"locHaystack\":{ 'lng': -180, 'lat': 0.0}},\"locLegacy\":[0.0,-25]}]}]],\"loc\":{\"type\":\"Point\",\"coordinates\":[180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[3.14159265359,{\"arrayField\":[0.00002225073858072014,{\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]}}},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']},{\"locHaystack\":[-179.9,0.0]},2225073858072009000.99,'The richest man is not he who has the most, but he who needs the least. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":['You can do anything, but not everything.'],\"d\":{\"c\":{\"arrayField\":['You miss 100 percent of the shots you never take. anything',false,'']}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[314159265004]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},[3.14159265359]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}}]],\"arrayField\":[{\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":[-180.0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,0,{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"locHaystack\":{ 'lng': -33.3, 'lat': -89.9}},'You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"c\":{\"arrayField\":[[{\"_id\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},'You can do anything, but not everything.'],{\"arrayField\":[null,{},{\"$date\": \"2008-02-29T12:01:00.000-0500\"},314159265011]}]},\"locLegacy\":[-180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":1,\"arrayField\":[314159265004,{\"a\":[[314159265006,{\"arrayField\":['You can do anything, but not everything.',{\"locLegacy\":[-33.3,90.0]}]}],'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"_id\":314159265017},0,[{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]},\"locHaystack\":{ 'lng': -180.0, 'lat': 0}}],null,{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}},{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":{ 'lng': 33.3, 'lat': 89.9}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,null,{\"arrayField\":[314159265002]},{\"arrayField\":[314159265012,'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything','','You can do anything, but not everything.']},'',{\"locHaystack\":[-180,-89.9]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":[180.0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-33.3,25]},{\"_id\":{\"arrayField\":[null],\"arrayField\":[{\"locHaystack\":{ 'lng': 33.3, 'lat': 0.0},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-33.3]},\"arrayField\":[{\"d\":{\"_id\":{\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}}}]},{\"arrayField\":[314159265004],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90.0]}}],\"locHaystack\":{ 'lng': -180.0, 'lat': 90}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90.0]}},true,{\"_id\":[false,'I quit therapy because my analyst was trying to help me behind my back. anything',0.0,null,{\"b\":-314159265359,\"arrayField\":[{\"_id\":{}}]},{\"locLegacy\":[-180.0,25]}]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]},\"locLegacy\":[-180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":[180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[0,33.3]},null,null,{\"locHaystack\":{ 'lng': -25, 'lat': -25},\"_id\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}],\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"a\":{\"_id\":-314159265359}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"d\":[[{\"arrayField\":[{\"locHaystack\":[-33.3,90.0]}]},{\"arrayField\":[{\"c\":{\"locHaystack\":{ 'lng': 0, 'lat': -25}}},'You miss 100 percent of the shots you never take. anything']}]]},'You can do anything, but not everything.','You can do anything, but not everything.',1,{\"locLegacy\":[0.0,33.3],\"locHaystack\":{ 'lng': -25, 'lat': -90.0}}],\"arrayField\":[{}],\"d\":{\"arrayField\":[{\"d\":{\"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},\"_id\":'You miss 100 percent of the shots you never take. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}}],\"locHaystack\":[-33.3,89.9]}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"arrayField\":[314159265004,'Echa de menos el 100 por ciento de los tiros que nunca toma.',0,'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}},314159265009,{\"$date\": \"2000-01-01T01:00:00.000-0500\"},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],\"locLegacy\":[-180,-90]},true,[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]],\"locHaystack\":[-180.0,89.9],\"b\":314159265013}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-25,0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":''},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265008]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":[],\"d\":{\"arrayField\":[{\"a\":'You can do anything, but not everything.'},null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']},\"locHaystack\":[0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[['You can do anything, but not everything.']]},\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265018,'Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"locHaystack\":{ 'lng': 0, 'lat': -25}},{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},null],\"locHaystack\":[-25,-90.0],\"arrayField\":[{\"locLegacy\":[0,-33.3]}],\"locHaystack\":{ 'lng': 0.0, 'lat': -33.3}},null,314159265005]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},true,{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]}},\"d\":314159265009},'You can do anything, but not everything.',{\"d\":{\"arrayField\":[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything']},''],\"locHaystack\":{ 'lng': -33.3, 'lat': -90}}},{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[25,33.3]},{\"d\":{\"d\":''}}],\"locLegacy\":[-25,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},null,{\"b\":{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"locLegacy\":[-25,-33.3]}},false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"arrayField\":[false,['To the man who only has a hammer, everything he encounters begins to look like a nail. anything','The richest man is not he who has the most, but he who needs the least. anything'],{\"arrayField\":['You must be the change you wish to see in the world. anything','']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90.0]},\"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',-3.14159265359,{\"arrayField\":[0]}],\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"locHaystack\":[0.0,-89.9],\"_id\":{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.'},\"c\":{\"b\":[{},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}},[{\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},'','',{\"_id\":314159265015,\"b\":314159265001},['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',1],'You miss 100 percent of the shots you never take. anything']]}}},{\"locHaystack\":{ 'lng': -180.0, 'lat': -25}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[0.00000000049406564841],\"arrayField\":[[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}],'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',1,'You must be the change you wish to see in the world. anything'],\"c\":'Usted debe ser el cambio que deseas ver en el mundo.'}],\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0.0]},\"arrayField\":[{\"arrayField\":[[314159265010,'You can do anything, but not everything.'],3.14159265359,true,'You can do anything, but not everything.',{\"arrayField\":[]},'',['']]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"_id\":1,\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']},\"a\":314159265008}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"locHaystack\":[179.9,-33.3]},null],\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"arrayField\":[1,{\"a\":{\"arrayField\":[[{\"locLegacy\":[-33.3,89.9],\"d\":''},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}}},{\"locHaystack\":[179.9,90],\"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90]}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0.0]}}],314159265002]},\"locHaystack\":{ 'lng': -33.3, 'lat': 89.9}},[],{},'Usted puede hacer cualquier cosa, pero no todo.',{\"arrayField\":[314159265013]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002,314159265014]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"d\":''}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}],\"locLegacy\":[-33.3,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{\"locHaystack\":[179.9,-90.0],\"arrayField\":[null]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265012]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"a\":'You can do anything, but not everything.'},\"_id\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0]},\"arrayField\":[{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',['',314159265011]]},'You can do anything, but not everything.','You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"arrayField\":[{\"a\":'You must be the change you wish to see in the world. anything'},null,{\"locHaystack\":[-25,-90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-33.3],\"locHaystack\":{ 'lng': 0.0, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[180,0]}],\"arrayField\":['','Usted debe ser el cambio que deseas ver en el mundo.',{\"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":[[[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}},{\"b\":{\"arrayField\":[[{\"locHaystack\":{ 'lng': -180, 'lat': -25}}]]},\"arrayField\":[{\"b\":{\"locHaystack\":{ 'lng': 180, 'lat': 33.3}}}],\"arrayField\":[['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],{\"c\":{\"locHaystack\":{ 'lng': -33.3, 'lat': -89.9}}},314159265004]}]],'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[314159265004,{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything'],\"arrayField\":[{\"arrayField\":[{\"arrayField\":[]},{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"arrayField\":[1],\"arrayField\":[{\"b\":{\"arrayField\":[{\"arrayField\":[{\"locHaystack\":[-33.3,-90]},{\"locLegacy\":[180.0,89.9]},'You can do anything, but not everything.']},1]}},{\"arrayField\":[0.0,'','You can do anything, but not everything.']},false,[''],{\"b\":{\"locHaystack\":{ 'lng': 33.3, 'lat': 90.0},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}}},{\"$date\": \"2000-01-01T01:00:00.000-0500\"},[{\"c\":''}],'You must be the change you wish to see in the world. anything',{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything','I quit therapy because my analyst was trying to help me behind my back. anything','You can do anything, but not everything.'],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}},true,{\"locLegacy\":[-25,25]},{\"c\":'The richest man is not he who has the most, but he who needs the least. anything'},{\"locHaystack\":{ 'lng': -179.9, 'lat': 33.3}}]},'The richest man is not he who has the most, but he who needs the least. anything']},{\"arrayField\":[0]}],{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]}},1,{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"arrayField\":[{}]}],\"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"locHaystack\":{ 'lng': -180.0, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265018]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted puede hacer cualquier cosa, pero no todo.',\"arrayField\":[{\"c\":''},['']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You miss 100 percent of the shots you never take. anything','The richest man is not he who has the most, but he who needs the least. anything',{\"locHaystack\":[33.3,90],\"locLegacy\":[-180.0,-25]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"arrayField\":['You can do anything, but not everything.',{\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],\"a\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,90],\"locHaystack\":[-180,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":''}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[''],\"arrayField\":[null,314159265017]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -90},\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],\"locLegacy\":[-179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90]},\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything','Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-89.9]},\"arrayField\":[1,{\"arrayField\":[314159265004],\"arrayField\":[false]},{}]},[[null,{\"c\":[{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},'']}]}]]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":false,\"b\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"locHaystack\":[180,33.3],\"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"locHaystack\":[180,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]},\"arrayField\":[{\"arrayField\":[{\"locHaystack\":{ 'lng': -25, 'lat': 0}}]},false,null,'You can do anything, but not everything.']}],'',{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0],\"b\":{\"arrayField\":[{\"d\":{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},0,{\"arrayField\":['']}]}},['Usted puede hacer cualquier cosa, pero no todo.'],'I quit therapy because my analyst was trying to help me behind my back. anything']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You miss 100 percent of the shots you never take. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null,\"arrayField\":[{\"arrayField\":[true,{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]},\"d\":{\"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}}],\"c\":true},{\"locHaystack\":{ 'lng': 25, 'lat': 0},\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-25]}},'You can do anything, but not everything.'],\"locHaystack\":{ 'lng': 180.0, 'lat': 0}},{\"a\":{\"arrayField\":[{\"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'}],\"locLegacy\":[33.3,25],\"locHaystack\":[0,25]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,-33.3],\"locHaystack\":{ 'lng': 0, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":true,\"c\":{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.','',{\"arrayField\":['',{\"locHaystack\":[-33.3,0.0]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90]}}],\"arrayField\":[314159265013]}},'','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything','You can do anything, but not everything.']},314159265011,{\"locHaystack\":[-180,0]},{\"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":{\"locHaystack\":{ 'lng': -180.0, 'lat': -90.0}},\"locHaystack\":[25,90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,33.3]},\"b\":true},[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},[1],{\"d\":0.00002225073858072014},{\"d\":''}],'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"d\":'You can do anything, but not everything.',\"b\":'You miss 100 percent of the shots you never take. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"arrayField\":[0,null,{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0.0]},\"d\":'You can do anything, but not everything.',\"arrayField\":[{\"locLegacy\":[0.0,89.9]},{\"arrayField\":[{\"arrayField\":[{\"locHaystack\":[179.9,-33.3],\"b\":'You can do anything, but not everything.'}]}]}]},null]}]},\"locLegacy\":[33.3,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null,[[{\"_id\":314159265006},{\"c\":'You can do anything, but not everything.',\"locHaystack\":{ 'lng': 180.0, 'lat': -89.9}},{\"_id\":314159265005},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0.0]}}]],''],true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"locHaystack\":[180,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-25]}},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265010]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,33.3],\"arrayField\":[{\"_id\":1},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-25]}}]]}],\"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Usted debe ser el cambio que deseas ver en el mundo.',\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-33.3]},\"arrayField\":[[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},false]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]},\"arrayField\":[]},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}}]},{\"locHaystack\":[179.9,-25]},{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-25]},\"locLegacy\":[25,25]},{\"locHaystack\":[25,-90]}],\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},['',{\"arrayField\":[null],\"a\":'You must be the change you wish to see in the world. anything',\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}],\"arrayField\":['']},'You must be the change you wish to see in the world. anything',null,{\"arrayField\":[{\"d\":[{\"a\":'You can do anything, but not everything.',\"arrayField\":['',314159265012],\"_id\":{\"arrayField\":['']}},[{\"arrayField\":[-314159265359,{\"c\":{\"locLegacy\":[33.3,-90]}}]},{}],'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything','Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything','I quit therapy because my analyst was trying to help me behind my back. anything']},{\"$date\": \"2000-01-01T01:00:00.000-0500\"}],\"locHaystack\":{ 'lng': -180, 'lat': -90}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,89.9]}},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-33.3]},\"locHaystack\":{ 'lng': -33.3, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]},\"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,89.9]},\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265001,{\"arrayField\":['You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}]},{\"c\":'You can do anything, but not everything.'},'You can do anything, but not everything.'],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},314159265010,{\"$date\": \"2000-01-01T01:00:00.000-0500\"},['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',['You can do anything, but not everything.'],[]],{\"arrayField\":[{\"locLegacy\":[-179.9,90.0]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]},\"locHaystack\":[0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,25],\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":'You can do anything, but not everything.'}],\"locHaystack\":[180.0,-90],\"arrayField\":['',{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},314159265003,{\"locLegacy\":[-33.3,-89.9]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0.0]}},''],'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas','The richest man is not he who has the most, but he who needs the least. anything',314159265007],\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"b\":[{\"c\":{\"locHaystack\":[180.0,0],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-25]}}},'You can do anything, but not everything.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":1,\"locHaystack\":[180,0.0],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[314159265009]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":{ 'lng': 25, 'lat': -90}},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[0,25]}}],\"arrayField\":[{\"arrayField\":[['You can do anything, but not everything.',{\"arrayField\":[]}]]},{},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},false]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":true},{\"d\":'You can do anything, but not everything.'},{\"arrayField\":[[null]]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,25],\"_id\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'You can do anything, but not everything.'},[{\"arrayField\":[314159265010],\"arrayField\":[null]},{\"$date\": \"9999-12-31T23:59:59.000-0500\"},'',[314159265017,{\"$date\": \"2008-02-29T12:01:00.000-0500\"},null],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,89.9]}}],[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,89.9]}}],{\"locHaystack\":[33.3,-90.0]},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',{\"c\":'You can do anything, but not everything.'},{\"d\":true}],\"locHaystack\":{ 'lng': -180.0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":''}],\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',314159265008]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['Usted puede hacer cualquier cosa, pero no todo.']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','',{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"a\":{\"_id\":{\"d\":{\"d\":314159265006},\"d\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]},\"b\":'You can do anything, but not everything.'}}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"a\":1,\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[314159265013,314159265014]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[null],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-25],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]},\"locLegacy\":[0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0.00000000049406564841,{\"locLegacy\":[25,-89.9]},{\"arrayField\":[{\"arrayField\":[{\"_id\":{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{},{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]},\"arrayField\":[{\"arrayField\":[{\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"arrayField\":['',{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}],\"locLegacy\":[-33.3,-33.3]},-314159265359,'You can do anything, but not everything.'],\"arrayField\":[314159265004]},{\"arrayField\":['You can do anything, but not everything.',{\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0]},\"b\":'You can do anything, but not everything.',\"locHaystack\":[180.0,-25]}}]}]}},'You can do anything, but not everything.',{\"d\":'You can do anything, but not everything.'},{\"$date\": \"2000-01-01T01:00:00.000-0500\"}],\"locHaystack\":{ 'lng': -33.3, 'lat': 0.0}},1],\"locHaystack\":[33.3,-89.9]},314159265007,'Echa de menos el 100 por ciento de los tiros que nunca toma.',[],0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[true,{\"a\":false},'']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"c\":{\"d\":{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{\"$date\": \"2013-09-29T19:00:00.000-0500\"},null,{\"d\":null},{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"d\":{\"locHaystack\":{ 'lng': 25, 'lat': 0}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":{ 'lng': 180.0, 'lat': 25}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90.0]},\"c\":'You can do anything, but not everything.'},-3.14159265359,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],\"arrayField\":[[{\"d\":{\"locLegacy\":[0,0]}},[{\"a\":'You miss 100 percent of the shots you never take. anything'}],{\"arrayField\":['']},'',{\"locHaystack\":{ 'lng': 179.9, 'lat': 0}}],{\"locHaystack\":[-33.3,25]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}],\"locLegacy\":[180.0,-89.9],\"locHaystack\":[180,-25]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}},\"_id\":0,\"arrayField\":[{},[{\"arrayField\":[0]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":-3.14159265000}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":[-25,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"locLegacy\":[179.9,-90],\"c\":{\"arrayField\":[{\"locLegacy\":[-180.0,90]},null,{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}}],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[{\"a\":{\"c\":{\"b\":1,\"a\":{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}}}},{\"locHaystack\":[0.0,33.3]},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"arrayField\":[{\"locLegacy\":[-33.3,0]},'']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90]},\"arrayField\":[null,'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"locHaystack\":[-180.0,0.0]}],\"arrayField\":[]},0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"_id\":'',\"c\":null},{\"c\":{\"arrayField\":[{}],\"arrayField\":[null]}},true,true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null,\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -25},\"_id\":{\"c\":{\"locLegacy\":[33.3,89.9],\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"locHaystack\":{ 'lng': 179.9, 'lat': -90.0}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-25]},\"a\":{\"locLegacy\":[-180,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[25,33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',{\"d\":'You can do anything, but not everything.'},'',null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},[1],'You must be the change you wish to see in the world. anything','Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[-3.14159265000,'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":314159265016}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.','You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90]},\"locHaystack\":[0,-90],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[314159265006,{\"_id\":{\"_id\":314159265010},\"arrayField\":[{\"a\":'You can do anything, but not everything.'}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[1]},2225073858072009000.99]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,-90],\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false,{\"locLegacy\":[180,0.0],\"locHaystack\":{ 'lng': -25, 'lat': -33.3}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null,\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[false],\"locHaystack\":[-179.9,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,89.9],\"d\":314159265010}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":1,\"b\":{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"arrayField\":[null]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":0,\"arrayField\":[{\"arrayField\":[0,'']},{\"locHaystack\":[25,-33.3],\"c\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,90]}}],\"arrayField\":[-3.14159265000,{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,0.0],\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{\"d\":null,\"c\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"a\":{\"arrayField\":['You can do anything, but not everything.','You miss 100 percent of the shots you never take. anything',[{},{\"arrayField\":['',{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"arrayField\":[{\"locHaystack\":{ 'lng': -180.0, 'lat': 33.3}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]}}]]},\"arrayField\":['You can do anything, but not everything.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': 179.9, 'lat': 33.3}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[179.9,-90.0]},314159265011]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'You miss 100 percent of the shots you never take. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90.0]},\"locHaystack\":{ 'lng': -180, 'lat': 90}},314159265005,314159265003]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]},\"arrayField\":[0,true,'Usted debe ser el cambio que deseas ver en el mundo.',null],\"arrayField\":[{\"arrayField\":[null,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']},{\"c\":[{\"arrayField\":[1]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}}],\"arrayField\":[{}],\"locLegacy\":[33.3,-25]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]},\"locLegacy\":[0,-90],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"a\":'You can do anything, but not everything.',\"arrayField\":[null,{\"c\":314159265001}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'You can do anything, but not everything.',\"b\":{\"locHaystack\":{ 'lng': -25, 'lat': -33.3}}},true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -25, 'lat': -33.3}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-25]}}],\"locHaystack\":[-180.0,-89.9],\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',314159265001]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"c\":3.14159265359}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"arrayField\":[{\"locLegacy\":[-179.9,-89.9]},'You can do anything, but not everything.'],\"arrayField\":[{\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'},{\"locHaystack\":[-25,90.0]},{\"a\":'You can do anything, but not everything.'},'You must be the change you wish to see in the world. anything',{},['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]}}]},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['You must be the change you wish to see in the world. anything']}],\"d\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[179.9,-25],\"arrayField\":[null]},314159265016,'You can do anything, but not everything.',{\"arrayField\":[true,{\"c\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"a\":null},'']}],\"d\":{\"arrayField\":['You can do anything, but not everything.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,[{},{\"d\":'You can do anything, but not everything.'},'']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90]},\"locLegacy\":[-33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',null,{\"arrayField\":[{\"locHaystack\":[-180,-89.9]},'','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"_id\":'You can do anything, but not everything.'}],\"_id\":{\"locHaystack\":{ 'lng': -180.0, 'lat': -89.9}}}],\"arrayField\":[''],\"arrayField\":['',{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":'Usted puede hacer cualquier cosa, pero no todo.',\"locHaystack\":{ 'lng': 179.9, 'lat': 0.0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]},\"a\":314159265013,\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]},\"arrayField\":[1],\"arrayField\":[['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":{},\"b\":{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"locLegacy\":[179.9,90.0]}]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,{\"locLegacy\":[25,-90]},{\"locHaystack\":[25,-25],\"a\":{\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,'',{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]}},true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]},\"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[[{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']]},314159265003],\"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]}],'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"$date\": \"2013-09-29T19:00:00.000-0500\"},314159265001,{\"arrayField\":['You can do anything, but not everything.'],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]}}],null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":[0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,{\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-89.9]}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,[[{\"arrayField\":[{\"_id\":{\"arrayField\":[]},\"c\":'You can do anything, but not everything.'}]}]],'You can do anything, but not everything.',{\"locHaystack\":{ 'lng': 180.0, 'lat': -90},\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":314159265014,\"locHaystack\":{ 'lng': 25, 'lat': -90}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"c\":0.00000000049406564841}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"$date\": \"2013-09-29T19:00:00.000-0500\"},['You can do anything, but not everything.',{\"locLegacy\":[33.3,89.9],\"a\":null,\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}]}],314159265019],\"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0]}},{\"locLegacy\":[-180,-89.9]}]],\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"a\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"locHaystack\":[180,-90.0],\"d\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]},\"arrayField\":['You can do anything, but not everything.',{\"arrayField\":[{\"locLegacy\":[-25,-33.3],\"locLegacy\":[33.3,0.0]},{\"b\":{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"b\":{\"arrayField\":[null,-3.14159265859]},\"arrayField\":[true],\"a\":{\"locLegacy\":[179.9,33.3]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}]}}],\"locLegacy\":[-180.0,89.9]}],\"locHaystack\":[33.3,90],\"d\":3.14159265359,\"d\":{\"_id\":{\"arrayField\":[]}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You must be the change you wish to see in the world. anything',{\"d\":null}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'The richest man is not he who has the most, but he who needs the least. anything',\"locHaystack\":[-180,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]}}],\"arrayField\":[{\"locHaystack\":{ 'lng': 0.0, 'lat': -90},\"locHaystack\":[180.0,90.0],\"locHaystack\":[179.9,-89.9]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"arrayField\":[null,{\"c\":314159265018}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265007,\"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.'],\"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]},\"arrayField\":[{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"_id\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90]}},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,25]}}]},314159265010,false]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"a\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"},\"b\":null}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":[null,null],\"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"arrayField\":[314159265018],\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":[{\"arrayField\":[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',[{\"locLegacy\":[-33.3,0]}],0.00002225073858072014]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"d\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything']},{\"locLegacy\":[-180,-25]},null]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{},\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,33.3],\"d\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":{ 'lng': -25, 'lat': -90.0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,25]}}],\"locHaystack\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"arrayField\":[]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"d\":''}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}" ));
        }
    };

    // Queries generated from NLTK are in the following format:
    // struct GeneratedQueryN {
    //     static BSONObj getQuery() { return query; }
    //     static BSONObj query;
    // };
    // BSONObj GeneratedQueryN::query = fromjson("{a:1}");

struct GeneratedQuery1 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery1::query = fromjson("{\"d\":{\"$size\":0}}");
struct GeneratedQuery2 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery2::query = fromjson("{\"d\":314159265012}");
struct GeneratedQuery3 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery3::query = fromjson("{\"arrayField.a\":{\"$not\":{\"$type\":8}}}");    BSONObj GeneratedQuery3::projection = fromjson("{\"_id.d\":1}");
struct GeneratedQuery4 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery4::query = fromjson("{\"$and\":[{\"a\":{\"$all\":[[{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']},{\"$date\": \"9999-12-31T23:59:59.000-0500\"},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']]}},{\"arrayField\":{\"$size\":NumberLong(0)}},{\"\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'mi'}}]}");    BSONObj GeneratedQuery4::projection = fromjson("{d:1,\"\":1}");
struct GeneratedQuery5 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery5::query = fromjson("{\"$or\":[{\"a\":{\"$regex\":\"/^abc(\\d+)/\"}},{\"arrayField\":{\"$exists\":314159265010}}]}");
struct GeneratedQuery6 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery6::query = fromjson("{\"a\":{\"$mod\":[314159225,0]}}");
struct GeneratedQuery7 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery7::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery7::projection = fromjson("{\"arrayField.$\":1,\"a\":1}");
struct GeneratedQuery8 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery8::query = fromjson("{\"$nor\":[{\"d\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},{\"c._id\":{\"$exists\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}]}");
struct GeneratedQuery9 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery9::query = fromjson("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[0.0,-90.0]}}}}");
struct GeneratedQuery10 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery10::query = fromjson("{\"a\":[{\"locHaystack\":{ 'lng': 180.0, 'lat': 90}},{\"locHaystack\":{ 'lng': -33.3, 'lat': 90}},[3.14159265359,{\"d\":{\"a\":'You can do anything, but not everything.'}}]]}");
struct GeneratedQuery11 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery11::query = fromjson("{\"d\":{\"$mod\":[314159215,314159215]}}");    BSONObj GeneratedQuery11::projection = fromjson("{b:{$slice:100}}");
struct GeneratedQuery12 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery12::query = fromjson("{\"a\":314159265015}");
struct GeneratedQuery13 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery13::query = fromjson("{\"$or\":[{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'si'}},{\"arrayField.b\":{\"$size\":314159275}}]}");    BSONObj GeneratedQuery13::projection = fromjson("{b:1,b:1}");
struct GeneratedQuery14 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery14::query = fromjson("{\"arrayField\":[{\"d\":{\"arrayField\":[{\"_id\":{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything']}},{}],\"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}},\"locHaystack\":{ 'lng': -179.9, 'lat': -33.3}},2225073858072009000.99]}");
struct GeneratedQuery15 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery15::query = fromjson("{\"$nor\":[{\"arrayField\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]},\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"locLegacy\":[-25,-25]}]}}]}");
struct GeneratedQuery16 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery16::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[2,0], [3,4], [2,5], [1,9],[-1,9], [-2,5], [-3,6], [-4,2],[-3,-4], [-2,-8], [-1,-16],[1,-10], [2,-5], [3,-1],[0,0]],[ [0,0],[3,6],[6,1],[0,0] ]]}}}}");
struct GeneratedQuery17 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery17::query = fromjson("{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery18 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery18::query = fromjson("{\"loc\":{\"$nearSphere\":[-179.9,89.9],\"$maxDistance\":314159265015}}");    BSONObj GeneratedQuery18::projection = fromjson("{\"a\":1}");
struct GeneratedQuery19 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery19::query = fromjson("{\"b\":{\"$gte\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}");
struct GeneratedQuery20 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery20::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery21 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery21::query = fromjson("{\"arrayField\":'You can do anything, but not everything.'}");
struct GeneratedQuery22 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery22::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery23 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery23::query = fromjson("{d:{\"$type\":11}}");
struct GeneratedQuery24 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery24::query = fromjson("{\"arrayField\":1}");    BSONObj GeneratedQuery24::projection = fromjson("{\"c\":1}");
struct GeneratedQuery25 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery25::query = fromjson("{\"$or\":[{\"a\":{\"$regex\":\"/\\d?[A-E]\\*/\"}},{\"d\":{\"$lte\":2225073858072009000.99}}]}");
struct GeneratedQuery26 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery26::query = fromjson("{\"c\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery27 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery27::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery28 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery28::query = fromjson("{\"b\":3.14159265359}");    BSONObj GeneratedQuery28::projection = fromjson("{\"c\":1}");
struct GeneratedQuery29 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery29::query = fromjson("{\"arrayField\":{\"$mod\":[314159295,2147483647]}}");    BSONObj GeneratedQuery29::projection = fromjson("{\"a\":{$slice:1}}");
struct GeneratedQuery30 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery30::query = fromjson("{\"d\":{\"$mod\":[314159275,314159255]}}");    BSONObj GeneratedQuery30::projection = fromjson("{\"c\":{$elemMatch:{\"$where\":'function myFunction() { var x = 1 + 2; }'}}}");
struct GeneratedQuery31 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery31::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery32 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery32::query = fromjson("{\"$or\":[{\"a\":{\"$regex\":\"/abc\\def/\"}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery33 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery33::query = fromjson("{\"arrayField\":{\"$all\":[null,[[{\"arrayField\":[false,{\"locHaystack\":{ 'lng': -25, 'lat': 90.0}}]}],[0]]]}}");
struct GeneratedQuery34 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery34::query = fromjson("{\"$or\":[{\"arrayField\":''}]}");
struct GeneratedQuery35 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery35::query = fromjson("{b:0}");
struct GeneratedQuery36 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery36::query = fromjson("{\"arrayField.d\":{\"$elemMatch\":{\"arrayField.d.a.a\":{\"$size\":NumberLong(314159265358979383)},c:'Usted puede hacer cualquier cosa, pero no todo.',\"arrayField.a\":{\"$mod\":[314159225,2147483647],\"$mod\":[314159295,314159235],\"$size\":314159295,\"$mod\":[314159245,314159215],\"$elemMatch\":{\"a\":{\"$lte\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"a.c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}},\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");
struct GeneratedQuery37 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery37::query = fromjson("{c:'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery38 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery38::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery39 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery39::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery40 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery40::query = fromjson("{\"a\":[314159265006,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}},'You can do anything, but not everything.',['Usted puede hacer cualquier cosa, pero no todo.'],'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}");
struct GeneratedQuery41 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery41::query = fromjson("{\"arrayField\":1}");
struct GeneratedQuery42 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery42::query = fromjson("{\"arrayField.a\":{\"$not\":{\"$exists\":1}}}");
struct GeneratedQuery43 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery43::query = fromjson("{\"$and\":[{\"arrayField.c.c\":{\"$gte\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}}]}");
struct GeneratedQuery44 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery44::query = fromjson("{\"arrayField\":{\"$mod\":[314159245,314159215],\"$type\":9}}");
struct GeneratedQuery45 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery45::query = fromjson("{\"arrayField\":-3.14159265859}");    BSONObj GeneratedQuery45::projection = fromjson("{\"d\":1,\"\":1,d:1}");
struct GeneratedQuery46 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery46::query = fromjson("{\"c.b\":'The richest man is not he who has the most, but he who needs the least. anything'}");    BSONObj GeneratedQuery46::projection = fromjson("{\"a\":1,\"d\":{$elemMatch:{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9',d:{\"$gt\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}}}}");
struct GeneratedQuery47 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery47::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery47::projection = fromjson("{d:1}");
struct GeneratedQuery48 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery48::query = fromjson("{\"b\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");    BSONObj GeneratedQuery48::projection = fromjson("{a:1}");
struct GeneratedQuery49 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery49::query = fromjson("{\"a\":{\"$regex\":\"/caseless/i\"}}");
struct GeneratedQuery50 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery50::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery50::projection = fromjson("{\"d.d\":{$elemMatch:{\"b\":1}}}");
struct GeneratedQuery51 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery51::query = fromjson("{\"arrayField\":314159265005}");    BSONObj GeneratedQuery51::projection = fromjson("{\"d\":1}");
struct GeneratedQuery52 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery52::query = fromjson("{\"\":false}");
struct GeneratedQuery53 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery53::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery54 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery54::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}}}");
struct GeneratedQuery55 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery55::query = fromjson("{\"b\":0}");
struct GeneratedQuery56 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery56::query = fromjson("{\"arrayField\":314159265017}");    BSONObj GeneratedQuery56::projection = fromjson("{a:1}");
struct GeneratedQuery57 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery57::query = fromjson("{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}");    BSONObj GeneratedQuery57::projection = fromjson("{b:1}");
struct GeneratedQuery58 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery58::query = fromjson("{_id:{\"arrayField\":[{\"a\":1,\"b\":'You can do anything, but not everything.',\"c\":1,\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]}},{\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},true,0]}]}}");    BSONObj GeneratedQuery58::projection = fromjson("{b:1}");
struct GeneratedQuery59 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery59::query = fromjson("{\"a\":true}");
struct GeneratedQuery60 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery60::query = fromjson("{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'mm'}}");    BSONObj GeneratedQuery60::projection = fromjson("{\"d\":1}");
struct GeneratedQuery61 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery61::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery61::projection = fromjson("{c:1}");
struct GeneratedQuery62 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery62::query = fromjson("{\"d\":{\"$elemMatch\":{\"arrayField\":{\"$elemMatch\":{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},\"arrayField.d\":{\"$mod\":[314159265,314159255]}}}}}}");
struct GeneratedQuery63 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery63::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery64 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery64::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery65 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery65::query = fromjson("{\"b\":0}");
struct GeneratedQuery66 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery66::query = fromjson("{\"arrayField\":314159265009}");    BSONObj GeneratedQuery66::projection = fromjson("{\"_id.b\":{$slice:10}}");
struct GeneratedQuery67 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery67::query = fromjson("{\"_id\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}");
struct GeneratedQuery68 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery68::query = fromjson("{\"$nor\":[{\"arrayField\":1}]}");
struct GeneratedQuery69 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery69::query = fromjson("{d:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");    BSONObj GeneratedQuery69::projection = fromjson("{\"c\":1}");
struct GeneratedQuery70 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery70::query = fromjson("{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery70::projection = fromjson("{\"d\":1,\"b\":1}");
struct GeneratedQuery71 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery71::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery71::projection = fromjson("{\"a\":{$slice:2}}");
struct GeneratedQuery72 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery72::query = fromjson("{\"d\":0}");    BSONObj GeneratedQuery72::projection = fromjson("{\"a\":1}");
struct GeneratedQuery73 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery73::query = fromjson("{\"arrayField._id\":{\"$size\":314159295}}");
struct GeneratedQuery74 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery74::query = fromjson("{\"$nor\":[{\"d\":'Usted puede hacer cualquier cosa, pero no todo.'}]}");    BSONObj GeneratedQuery74::projection = fromjson("{\"a\":1}");
struct GeneratedQuery75 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery75::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery76 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery76::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");    BSONObj GeneratedQuery76::projection = fromjson("{\"d\":1,b:1}");
struct GeneratedQuery77 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery77::query = fromjson("{\"arrayField\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}");
struct GeneratedQuery78 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery78::query = fromjson("{\"b\":{\"$mod\":[314159215,314159285]}}");
struct GeneratedQuery79 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery79::query = fromjson("{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery80 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery80::query = fromjson("{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'mm'}}");
struct GeneratedQuery81 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery81::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");
struct GeneratedQuery82 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery82::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery82::projection = fromjson("{c:1}");
struct GeneratedQuery83 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery83::query = fromjson("{\"$or\":[{\"b\":314159265016},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"loc\":{\"$near\":[33.3,33.3],\"$maxDistance\":314159265018}},{\"a\":{\"$mod\":[314159225,314159295]}}]}");
struct GeneratedQuery84 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery84::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }',a:{\"$in\":[{\"locLegacy\":[-180,90.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0.0]}},['You miss 100 percent of the shots you never take. anything']]}}");
struct GeneratedQuery85 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery85::query = fromjson("{\"_id\":{\"$all\":[{\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}]}}");
struct GeneratedQuery86 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery86::query = fromjson("{\"$nor\":[{\"d\":314159265004},{a:{\"$regex\":\"/^abc/\"}},{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery87 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery87::query = fromjson("{d:[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},{\"locLegacy\":[-25,33.3]}]}");    BSONObj GeneratedQuery87::projection = fromjson("{d:{$elemMatch:{\"$where\":'function myFunction() { var x = 1 + 2; }',\"$where\":'function myFunction() { return this.d != undefined; }',\"arrayField.d\":{\"$all\":['You can do anything, but not everything.']},\"a\":true,\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'ss'}}},\"c.c\":{$elemMatch:{\"_id\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}}}");
struct GeneratedQuery88 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery88::query = fromjson("{d:{\"$ne\":false}}");
struct GeneratedQuery89 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery89::query = fromjson("{\"c\":{\"$mod\":[314159275,314159245]}}");
struct GeneratedQuery90 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery90::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery90::projection = fromjson("{\"c\":1}");
struct GeneratedQuery91 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery91::query = fromjson("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}]}");
struct GeneratedQuery92 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery92::query = fromjson("{\"arrayField._id\":{\"$exists\":true}}");
struct GeneratedQuery93 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery93::query = fromjson("{\"$nor\":[{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[25,25],[-33.3,90.0]]}}}},{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},{\"_id\":{\"$not\":{\"$gte\":2225073858072009000.99}}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180.0,0]}}}}]}");    BSONObj GeneratedQuery93::projection = fromjson("{\"b\":1}");
struct GeneratedQuery94 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery94::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$polygon\":[[25,90.0]],\"$uniqueDocs\":true}}}");
struct GeneratedQuery95 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery95::query = fromjson("{a:314159265019}");
struct GeneratedQuery96 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery96::query = fromjson("{\"arrayField\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery96::projection = fromjson("{d:1}");
struct GeneratedQuery97 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery97::query = fromjson("{\"arrayField.a.a\":{\"$size\":NumberInt(314159205)}}");    BSONObj GeneratedQuery97::projection = fromjson("{\"b\":1,\"d\":1}");
struct GeneratedQuery98 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery98::query = fromjson("{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery99 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery99::query = fromjson("{\"b\":{\"$type\":8}}");
struct GeneratedQuery100 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery100::query = fromjson("{\"$and\":[{\"arrayField\":314159265015},{a:-314159265359},{\"_id\":314159265014},{\"b\":0}]}");
struct GeneratedQuery101 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery101::query = fromjson("{\"$or\":[{\"arrayField.b\":{\"$exists\":314159265010}}]}");
struct GeneratedQuery102 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery102::query = fromjson("{d:true}");
struct GeneratedQuery103 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery103::query = fromjson("{a:314159265007}");    BSONObj GeneratedQuery103::projection = fromjson("{b:1}");
struct GeneratedQuery104 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery104::query = fromjson("{\"d\":{\"$mod\":[314159225,314159295]}}");
struct GeneratedQuery105 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery105::query = fromjson("{c:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery105::projection = fromjson("{\"d\":{$elemMatch:{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'im'}}},a:{$elemMatch:{\"d\":false}}}");
struct GeneratedQuery106 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery106::query = fromjson("{\"\":{\"$not\":{\"$type\":7},\"$mod\":[314159245,314159235]}}");
struct GeneratedQuery107 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery107::query = fromjson("{\"arrayField\":{\"c\":{\"b\":1}}}");    BSONObj GeneratedQuery107::projection = fromjson("{d:1}");
struct GeneratedQuery108 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery108::query = fromjson("{\"arrayField\":{\"$all\":['']}}");    BSONObj GeneratedQuery108::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery109 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery109::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$polygon\":[[-25,89.9]],\"$uniqueDocs\":0}}}");
struct GeneratedQuery110 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery110::query = fromjson("{\"c\":true}");    BSONObj GeneratedQuery110::projection = fromjson("{\"arrayField.$\":1,\"d\":1}");
struct GeneratedQuery111 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery111::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery112 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery112::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery113 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery113::query = fromjson("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"arrayField\":{\"$size\":314159295}}]}");
struct GeneratedQuery114 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery114::query = fromjson("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'s'}}");
struct GeneratedQuery115 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery115::query = fromjson("{b:{\"$lt\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}},\"$type\":11,\"$gte\":[['Echa de menos el 100 por ciento de los tiros que nunca toma.','You can do anything, but not everything.'],{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}}");    BSONObj GeneratedQuery115::projection = fromjson("{c:1,\"b\":1}");
struct GeneratedQuery116 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery116::query = fromjson("{\"a\":false}");
struct GeneratedQuery117 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery117::query = fromjson("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery118 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery118::query = fromjson("{_id:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery118::projection = fromjson("{\"\":1}");
struct GeneratedQuery119 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery119::query = fromjson("{\"$and\":[{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}]}");
struct GeneratedQuery120 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery120::query = fromjson("{c:{\"$gt\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}}");
struct GeneratedQuery121 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery121::query = fromjson("{d:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery121::projection = fromjson("{c:1}");
struct GeneratedQuery122 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery122::query = fromjson("{b:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery123 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery123::query = fromjson("{a:'You can do anything, but not everything.'}");
struct GeneratedQuery124 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery124::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery125 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery125::query = fromjson("{\"$or\":[{\"arrayField\":''},{\"arrayField.c\":{\"$size\":314159295}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery126 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery126::query = fromjson("{\"arrayField\":'Usted puede hacer cualquier cosa, pero no todo.'}");
struct GeneratedQuery127 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery127::query = fromjson("{a:{\"$exists\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]}}");    BSONObj GeneratedQuery127::projection = fromjson("{\"\":1,\"b\":1}");
struct GeneratedQuery128 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery128::query = fromjson("{\"d\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");    BSONObj GeneratedQuery128::projection = fromjson("{\"c\":{$elemMatch:{d:'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}},_id:1}");
struct GeneratedQuery129 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery129::query = fromjson("{\"b\":false}");
struct GeneratedQuery130 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery130::query = fromjson("{_id:{\"$all\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]}}");    BSONObj GeneratedQuery130::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery131 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery131::query = fromjson("{\"$nor\":[{\"a\":1}]}");    BSONObj GeneratedQuery131::projection = fromjson("{c:1}");
struct GeneratedQuery132 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery132::query = fromjson("{\"d\":'Usted puede hacer cualquier cosa, pero no todo.'}");    BSONObj GeneratedQuery132::projection = fromjson("{c:{$slice:1}}");
struct GeneratedQuery133 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery133::query = fromjson("{_id:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery133::projection = fromjson("{\"c\":1}");
struct GeneratedQuery134 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery134::query = fromjson("{\"b\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery135 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery135::query = fromjson("{\"b\":0.00002225073858072014}");
struct GeneratedQuery136 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery136::query = fromjson("{\"a\":{\"$type\":8}}");    BSONObj GeneratedQuery136::projection = fromjson("{\"c\":1}");
struct GeneratedQuery137 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery137::query = fromjson("{\"b\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery137::projection = fromjson("{\"c\":1}");
struct GeneratedQuery138 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery138::query = fromjson("{\"$or\":[{\"b\":'You can do anything, but not everything.'}]}");    BSONObj GeneratedQuery138::projection = fromjson("{\"\":{$elemMatch:{c:''}}}");
struct GeneratedQuery139 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery139::query = fromjson("{\"b\":{\"$exists\":0}}");    BSONObj GeneratedQuery139::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery140 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery140::query = fromjson("{\"$and\":[{\"b\":{\"$nin\":[['']]}},{\"a\":0},{\"arrayField\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0.0]}}}]}");
struct GeneratedQuery141 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery141::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery141::projection = fromjson("{\"d\":1,\"a\":1}");
struct GeneratedQuery142 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery142::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"b\":{\"$exists\":true},_id:{\"$not\":{\"$ne\":'You can do anything, but not everything.'}}}");
struct GeneratedQuery143 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery143::query = fromjson("{\"$or\":[{\"arrayField\":{\"$size\":NumberLong(314159265358979303)}}]}");    BSONObj GeneratedQuery143::projection = fromjson("{\"d\":{$elemMatch:{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[179.9,0]},\"$maxDistance\":0.00000000049406564841}},\"arrayField.c\":{\"$all\":[1,{\"arrayField\":[{\"arrayField\":[{\"locLegacy\":[180,-33.3]},{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]},{},true]}]},\"_id\":{\"$size\":2147483647}}}}");
struct GeneratedQuery144 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery144::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"c\":{\"$size\":314159245,\"$all\":['Echa de menos el 100 por ciento de los tiros que nunca toma.','You can do anything, but not everything.',''],\"$not\":{\"$mod\":[314159255,314159285]}},\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"c\":null,\"c\":{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"arrayField\":[['You can do anything, but not everything.',{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}]],\"arrayField\":['',{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}}}}");
struct GeneratedQuery145 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery145::query = fromjson("{\"$or\":[{\"arrayField\":{\"$all\":[{\"arrayField\":[null]},{\"b\":'The richest man is not he who has the most, but he who needs the least. anything'},{\"b\":true,\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}},{\"locHaystack\":[180.0,-90.0]},{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}},{c:{\"$regex\":\"/caseless/i\"}},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{b:{\"$type\":9}},{\"a\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}]}");
struct GeneratedQuery146 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery146::query = fromjson("{\"arrayField.a._id\":{\"$in\":[{}]}}");
struct GeneratedQuery147 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery147::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery147::projection = fromjson("{b:1}");
struct GeneratedQuery148 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery148::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery149 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery149::query = fromjson("{\"arrayField\":{\"$size\":314159215}}");    BSONObj GeneratedQuery149::projection = fromjson("{\"a\":1}");
struct GeneratedQuery150 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery150::query = fromjson("{\"arrayField.d\":{\"$elemMatch\":{\"c\":{\"$regex\":\"/^abc/m\"},\"\":{\"$type\":4}}}}");    BSONObj GeneratedQuery150::projection = fromjson("{\"b\":1}");
struct GeneratedQuery151 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery151::query = fromjson("{b:{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery152 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery152::query = fromjson("{_id:{\"$regex\":\"/caseless/i\"}}");    BSONObj GeneratedQuery152::projection = fromjson("{\"c\":{$elemMatch:{\"c\":{\"d\":[''],\"b\":3.14159265359},\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'is'},\"arrayField.c\":{\"$size\":314159285},\"_id\":'',d:{\"$mod\":[314159215,314159295]},\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[180,-89.9]}}}}}}");
struct GeneratedQuery153 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery153::query = fromjson("{d:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery154 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery154::query = fromjson("{\"d\":314159265013}");
struct GeneratedQuery155 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery155::query = fromjson("{\"a\":{\"$elemMatch\":{\"arrayField\":{\"arrayField\":[null]}}}}");
struct GeneratedQuery156 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery156::query = fromjson("{c:0}");
struct GeneratedQuery157 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery157::query = fromjson("{\"arrayField\":314159265010}");
struct GeneratedQuery158 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery158::query = fromjson("{a:{\"$all\":['','Usted puede hacer cualquier cosa, pero no todo.',{\"d\":{\"a\":'',\"b\":'Usted puede hacer cualquier cosa, pero no todo.'}}]}}");
struct GeneratedQuery159 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery159::query = fromjson("{\"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery159::projection = fromjson("{\"d\":{$slice:1},c:1}");
struct GeneratedQuery160 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery160::query = fromjson("{\"_id\":{\"$regex\":\"/(a|bc)x+yz/\"},\"a\":{\"$mod\":[314159225,314159205]},\"a\":314159265012}");
struct GeneratedQuery161 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery161::query = fromjson("{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery162 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery162::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery162::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery163 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery163::query = fromjson("{\"d\":{\"$mod\":[314159225,314159235]}}");    BSONObj GeneratedQuery163::projection = fromjson("{\"d\":1,b:1}");
struct GeneratedQuery164 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery164::query = fromjson("{\"d\":{\"$not\":{\"$elemMatch\":{\"$where\":'(this.a || this.b || this.c || this.d) > 10',d:true}},\"$all\":[314159265002,{\"locHaystack\":[0,-90.0]}]}}");
struct GeneratedQuery165 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery165::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery166 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery166::query = fromjson("{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'m'}}");    BSONObj GeneratedQuery166::projection = fromjson("{\"d\":1,d:1}");
struct GeneratedQuery167 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery167::query = fromjson("{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery168 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery168::query = fromjson("{\"b\":{\"$size\":NumberLong(314159265358979353)}}");
struct GeneratedQuery169 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery169::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery170 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery170::query = fromjson("{\"b\":{\"$mod\":[314159275,314159205]}}");
struct GeneratedQuery171 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery171::query = fromjson("{\"d\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery172 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery172::query = fromjson("{\"$nor\":[{\"d\":{\"$ne\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}]}");
struct GeneratedQuery173 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery173::query = fromjson("{\"$and\":[{b:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}]}");
struct GeneratedQuery174 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery174::query = fromjson("{\"arrayField.a\":{\"$all\":[314159265017,{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,33.3]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-89.9]}},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}}");
struct GeneratedQuery175 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery175::query = fromjson("{b:null}");
struct GeneratedQuery176 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery176::query = fromjson("{\"arrayField.b.d._id\":{\"$all\":[false,{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"arrayField\":[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]}}]},{\"arrayField\":[{\"locHaystack\":{ 'lng': 0.0, 'lat': -25}}]},{\"arrayField\":[{\"d\":314159265016,\"_id\":'The richest man is not he who has the most, but he who needs the least. anything'}]},{\"locLegacy\":[180.0,-33.3]},{\"arrayField\":[]}]}]}}");    BSONObj GeneratedQuery176::projection = fromjson("{\"d\":{$slice:1}}");
struct GeneratedQuery177 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery177::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery177::projection = fromjson("{b:1}");
struct GeneratedQuery178 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery178::query = fromjson("{\"arrayField.a\":{\"$size\":NumberInt(314159235),\"$size\":2147483647}}");    BSONObj GeneratedQuery178::projection = fromjson("{\"b\":1}");
struct GeneratedQuery179 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery179::query = fromjson("{\"b\":1}");    BSONObj GeneratedQuery179::projection = fromjson("{\"d\":1,\"_id\":1}");
struct GeneratedQuery180 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery180::query = fromjson("{\"_id\":{\"$regex\":\"/^abc/\"}}");
struct GeneratedQuery181 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery181::query = fromjson("{\"a\":0}");    BSONObj GeneratedQuery181::projection = fromjson("{\"d\":{$slice:2},\"d\":1}");
struct GeneratedQuery182 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery182::query = fromjson("{\"$or\":[{\"arrayField\":{\"$size\":NumberLong(314159265358979323),\"$not\":{\"$in\":[['']]}}},{\"arrayField\":'The richest man is not he who has the most, but he who needs the least. anything'}]}");
struct GeneratedQuery183 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery183::query = fromjson("{\"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");    BSONObj GeneratedQuery183::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery184 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery184::query = fromjson("{\"arrayField\":{\"$size\":NumberInt(2147483647)}}");    BSONObj GeneratedQuery184::projection = fromjson("{\"c\":1}");
struct GeneratedQuery185 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery185::query = fromjson("{\"arrayField\":314159265008}");
struct GeneratedQuery186 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery186::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery187 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery187::query = fromjson("{c:null}");
struct GeneratedQuery188 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery188::query = fromjson("{\"arrayField\":314159265003}");
struct GeneratedQuery189 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery189::query = fromjson("{\"a\":314159265011}");
struct GeneratedQuery190 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery190::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery191 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery191::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery192 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery192::query = fromjson("{\"b\":false}");
struct GeneratedQuery193 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery193::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery193::projection = fromjson("{b:1}");
struct GeneratedQuery194 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery194::query = fromjson("{\"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery195 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery195::query = fromjson("{\"arrayField.c\":{\"$size\":NumberInt(314159295)}}");    BSONObj GeneratedQuery195::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery196 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery196::query = fromjson("{\"loc\":{\"$nearSphere\":[179.9,89.9],\"$maxDistance\":314159265005}}");
struct GeneratedQuery197 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery197::query = fromjson("{b:314159265006}");
struct GeneratedQuery198 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery198::query = fromjson("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{\"arrayField\":314159265011},{\"_id\":null},{_id:{\"$type\":3}},{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"arrayField\":{\"$elemMatch\":{\"arrayField\":null,\"b\":{\"$exists\":1}}}}]}");
struct GeneratedQuery199 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery199::query = fromjson("{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'m'}}");
struct GeneratedQuery200 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery200::query = fromjson("{\"\":{\"$not\":{\"$not\":{\"$exists\":false}}}}");
struct GeneratedQuery201 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery201::query = fromjson("{\"arrayField\":0.0}");
struct GeneratedQuery202 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery202::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery203 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery203::query = fromjson("{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'mm'}}");    BSONObj GeneratedQuery203::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery204 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery204::query = fromjson("{d:2225073858072009000.99}");
struct GeneratedQuery205 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery205::query = fromjson("{\"$nor\":[{\"c\":''},{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}");    BSONObj GeneratedQuery205::projection = fromjson("{\"arrayField.$\":1,\"a\":1}");
struct GeneratedQuery206 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery206::query = fromjson("{\"$or\":[{\"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}]}");
struct GeneratedQuery207 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery207::query = fromjson("{\"b\":-314159265359}");    BSONObj GeneratedQuery207::projection = fromjson("{\"arrayField.$\":1,\"c\":1}");
struct GeneratedQuery208 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery208::query = fromjson("{\"b\":{\"$gte\":[{\"locLegacy\":[-180.0,33.3],\"a\":{\"d\":{\"arrayField\":[{\"a\":''}]}}},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}}");
struct GeneratedQuery209 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery209::query = fromjson("{b:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery210 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery210::query = fromjson("{\"arrayField\":null}");    BSONObj GeneratedQuery210::projection = fromjson("{\"a\":1}");
struct GeneratedQuery211 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery211::query = fromjson("{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}");
struct GeneratedQuery212 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery212::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":{\"$size\":NumberLong(314159265358979363)},\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}}}");
struct GeneratedQuery213 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery213::query = fromjson("{\"$and\":[{\"a\":314159265013},{\"arrayField\":''},{\"\":0}]}");    BSONObj GeneratedQuery213::projection = fromjson("{\"c\":1,\"a\":{$elemMatch:{\"arrayField\":''}}}");
struct GeneratedQuery214 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery214::query = fromjson("{\"\":{\"$exists\":false}}");
struct GeneratedQuery215 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery215::query = fromjson("{\"c\":false}");    BSONObj GeneratedQuery215::projection = fromjson("{d:1}");
struct GeneratedQuery216 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery216::query = fromjson("{\"$or\":[{\"arrayField\":{\"$all\":[[]]}}]}");    BSONObj GeneratedQuery216::projection = fromjson("{\"\":1}");
struct GeneratedQuery217 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery217::query = fromjson("{\"$nor\":[{\"b\":{\"$exists\":0}},{\"arrayField\":{\"$lt\":0}},{\"c\":0},{\"a\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]},\"a\":['You miss 100 percent of the shots you never take. anything']}]},{a:314159265016},{\"$where\":'this.d != undefined'}]}");    BSONObj GeneratedQuery217::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery218 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery218::query = fromjson("{\"arrayField\":1}");
struct GeneratedQuery219 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery219::query = fromjson("{\"a\":''}");
struct GeneratedQuery220 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery220::query = fromjson("{\"\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'mmss'}}");
struct GeneratedQuery221 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery221::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[180.0,-33.3],[-180.0,33.3]]},\"$uniqueDocs\":false}}}");
struct GeneratedQuery222 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery222::query = fromjson("{c:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");    BSONObj GeneratedQuery222::projection = fromjson("{\"\":1}");
struct GeneratedQuery223 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery223::query = fromjson("{a:'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery224 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery224::query = fromjson("{\"c\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery224::projection = fromjson("{\"\":{$slice:2}}");
struct GeneratedQuery225 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery225::query = fromjson("{\"\":{\"$not\":{\"$mod\":[314159255,314159265]}}}");
struct GeneratedQuery226 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery226::query = fromjson("{\"arrayField\":{\"$not\":{\"$exists\":false},\"$nin\":['You can do anything, but not everything.']}}");
struct GeneratedQuery227 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery227::query = fromjson("{\"b\":false}");
struct GeneratedQuery228 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery228::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery229 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery229::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery230 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery230::query = fromjson("{\"arrayField.a\":{\"$size\":NumberInt(314159265)}}");    BSONObj GeneratedQuery230::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery231 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery231::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery232 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery232::query = fromjson("{\"$and\":[{\"_id\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'i'}},{b:{\"$size\":NumberLong(314159265358979343)}}]}");    BSONObj GeneratedQuery232::projection = fromjson("{\"_id\":1,\"b\":1}");
struct GeneratedQuery233 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery233::query = fromjson("{\"$or\":[{\"b\":true}]}");    BSONObj GeneratedQuery233::projection = fromjson("{c:1}");
struct GeneratedQuery234 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery234::query = fromjson("{\"arrayField\":null}");
struct GeneratedQuery235 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery235::query = fromjson("{\"arrayField.d\":{\"$not\":{\"$not\":{\"$exists\":true}},\"$all\":[true],\"$gt\":0}}");
struct GeneratedQuery236 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery236::query = fromjson("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"arrayField\":0}]}");    BSONObj GeneratedQuery236::projection = fromjson("{\"a\":1,d:1}");
struct GeneratedQuery237 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery237::query = fromjson("{\"c\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery238 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery238::query = fromjson("{b:0}");
struct GeneratedQuery239 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery239::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery239::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery240 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery240::query = fromjson("{c:{\"$exists\":true}}");
struct GeneratedQuery241 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery241::query = fromjson("{\"arrayField.d\":{\"$all\":[{\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}]}}");
struct GeneratedQuery242 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery242::query = fromjson("{\"$or\":[{c:{\"$type\":9}}]}");
struct GeneratedQuery243 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery243::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery243::projection = fromjson("{\"\":1,a:{$elemMatch:{\"arrayField.b\":{\"$size\":314159275}}}}");
struct GeneratedQuery244 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery244::query = fromjson("{b:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery245 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery245::query = fromjson("{\"arrayField\":{\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}}");
struct GeneratedQuery246 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery246::query = fromjson("{\"$and\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{d:''},{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'ss'}},{a:{\"$regex\":\"/\\Big(\\w\\w)i/\"}},{b:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}]}");    BSONObj GeneratedQuery246::projection = fromjson("{\"d\":{$elemMatch:{\"a\":{\"$exists\":false}}}}");
struct GeneratedQuery247 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery247::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery247::projection = fromjson("{\"\":1}");
struct GeneratedQuery248 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery248::query = fromjson("{\"b\":{\"$gte\":'You can do anything, but not everything.'}}");    BSONObj GeneratedQuery248::projection = fromjson("{\"\":1,\"_id\":1}");
struct GeneratedQuery249 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery249::query = fromjson("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{\"arrayField\":314159265002}]}");
struct GeneratedQuery250 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery250::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery251 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery251::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery252 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery252::query = fromjson("{a:{\"$mod\":[314159265,314159285]}}");    BSONObj GeneratedQuery252::projection = fromjson("{d:{$elemMatch:{\"b\":{\"$gte\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},a:0}}}");
struct GeneratedQuery253 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery253::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");
struct GeneratedQuery254 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery254::query = fromjson("{c:-3.14159265000}");
struct GeneratedQuery255 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery255::query = fromjson("{\"$or\":[{\"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}");    BSONObj GeneratedQuery255::projection = fromjson("{c:1}");
struct GeneratedQuery256 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery256::query = fromjson("{\"arrayField\":{\"$type\":4}}");
struct GeneratedQuery257 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery257::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery258 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery258::query = fromjson("{\"b\":{\"$nin\":[314159265018,-314159265359]}}");    BSONObj GeneratedQuery258::projection = fromjson("{\"\":1,\"a\":1}");
struct GeneratedQuery259 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery259::query = fromjson("{\"arrayField\":{\"$mod\":[314159275,314159245],\"$lt\":null}}");    BSONObj GeneratedQuery259::projection = fromjson("{\"b\":1}");
struct GeneratedQuery260 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery260::query = fromjson("{\"arrayField.d\":{\"$not\":{\"$type\":-1}}}");    BSONObj GeneratedQuery260::projection = fromjson("{\"c\":1}");
struct GeneratedQuery261 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery261::query = fromjson("{\"a\":{\"$not\":{\"$size\":NumberInt(314159225)}}}");    BSONObj GeneratedQuery261::projection = fromjson("{\"c\":1}");
struct GeneratedQuery262 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery262::query = fromjson("{\"$and\":[{\"a\":'You must be the change you wish to see in the world. anything'},{\"\":{\"$regex\":\"/abc\\def/\"}},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"_id\":{\"$elemMatch\":{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }',c:{\"$regex\":\"/caseless/i\"},\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},c:1797693134862315799999,\"arrayField\":null}}}]}");
struct GeneratedQuery263 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery263::query = fromjson("{\"$nor\":[{\"arrayField.b\":{\"$not\":{\"$gt\":0}}}]}");
struct GeneratedQuery264 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery264::query = fromjson("{\"$or\":[{_id:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]},\"b\":''}},{\"c\":null},{\"a\":{\"$not\":{\"$lte\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}},{\"c\":true}]}");
struct GeneratedQuery265 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery265::query = fromjson("{\"b\":{\"$mod\":[314159265,0]}}");
struct GeneratedQuery266 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery266::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery266::projection = fromjson("{b:1}");
struct GeneratedQuery267 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery267::query = fromjson("{b:{\"$regex\":\"c a t #looks for cats\",\"$options\":'iismi'}}");
struct GeneratedQuery268 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery268::query = fromjson("{\"\":{\"$all\":[[{\"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"}]},1797693134862315799999]]}}");
struct GeneratedQuery269 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery269::query = fromjson("{\"arrayField.a\":{\"$exists\":314159265016,\"$not\":{\"$mod\":[314159295,314159265]},\"$lte\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}}");
struct GeneratedQuery270 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery270::query = fromjson("{\"arrayField\":-3.14159265000}");
struct GeneratedQuery271 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery271::query = fromjson("{\"arrayField\":{\"$gte\":'Usted debe ser el cambio que deseas ver en el mundo.'}}");
struct GeneratedQuery272 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery272::query = fromjson("{b:1}");
struct GeneratedQuery273 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery273::query = fromjson("{\"c\":''}");    BSONObj GeneratedQuery273::projection = fromjson("{b:1}");
struct GeneratedQuery274 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery274::query = fromjson("{\"a\":{\"$type\":8}}");
struct GeneratedQuery275 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery275::query = fromjson("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]},\"$maxDistance\":314159265008}}}");
struct GeneratedQuery276 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery276::query = fromjson("{\"arrayField.d\":{\"$size\":314159255}}");
struct GeneratedQuery277 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery277::query = fromjson("{a:{\"$not\":{\"$gte\":null}}}");
struct GeneratedQuery278 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery278::query = fromjson("{a:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'iii'}}");    BSONObj GeneratedQuery278::projection = fromjson("{d:1}");
struct GeneratedQuery279 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery279::query = fromjson("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery280 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery280::query = fromjson("{d:{\"$size\":NumberInt(314159275)}}");
struct GeneratedQuery281 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery281::query = fromjson("{\"_id\":314159265004}");    BSONObj GeneratedQuery281::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery282 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery282::query = fromjson("{\"b.d\":{\"$gte\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}}");
struct GeneratedQuery283 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery283::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery283::projection = fromjson("{\"c\":1}");
struct GeneratedQuery284 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery284::query = fromjson("{b:314159265009}");    BSONObj GeneratedQuery284::projection = fromjson("{\"c\":1}");
struct GeneratedQuery285 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery285::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery286 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery286::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery287 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery287::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"arrayField\":null},{\"b\":{\"$mod\":[314159215,0]}},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},{\"b\":''},{\"b\":''},{\"arrayField\":null},{\"b\":{\"$regex\":\"/^abc/m\"}},{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"a\":null}]}");    BSONObj GeneratedQuery287::projection = fromjson("{\"a\":1}");
struct GeneratedQuery288 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery288::query = fromjson("{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery289 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery289::query = fromjson("{\"b\":''}");
struct GeneratedQuery290 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery290::query = fromjson("{d:{\"$regex\":\"/abc\\def/\"}}");
struct GeneratedQuery291 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery291::query = fromjson("{\"$or\":[{b:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}},{\"b\":{\"$gt\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}}]}");    BSONObj GeneratedQuery291::projection = fromjson("{\"b\":1}");
struct GeneratedQuery292 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery292::query = fromjson("{c:-3.14159265000}");    BSONObj GeneratedQuery292::projection = fromjson("{a:1,\"\":1}");
struct GeneratedQuery293 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery293::query = fromjson("{\"d\":{\"$lt\":false}}");
struct GeneratedQuery294 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery294::query = fromjson("{d:{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery295 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery295::query = fromjson("{\"a\":{\"$mod\":[314159255,314159285]},\"arrayField.d\":{\"$size\":314159275},\"$where\":'this.d != undefined',b:'You can do anything, but not everything.'}");
struct GeneratedQuery296 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery296::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery296::projection = fromjson("{\"d\":1,b:{$elemMatch:{d:{\"$not\":{\"$mod\":[314159215,314159225]}},c:true}}}");
struct GeneratedQuery297 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery297::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");    BSONObj GeneratedQuery297::projection = fromjson("{\"c\":1}");
struct GeneratedQuery298 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery298::query = fromjson("{\"_id\":{\"$mod\":[314159235,314159205]}}");    BSONObj GeneratedQuery298::projection = fromjson("{a:{$elemMatch:{\"$where\":'function myFunction() { return this.d != undefined; }',\"_id\":{\"$exists\":true}}}}");
struct GeneratedQuery299 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery299::query = fromjson("{d:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery300 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery300::query = fromjson("{c:'You can do anything, but not everything.'}");
struct GeneratedQuery301 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery301::query = fromjson("{\"arrayField\":0.0}");
struct GeneratedQuery302 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery302::query = fromjson("{\"loc\":{\"$near\":[180,-90]}}");
struct GeneratedQuery303 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery303::query = fromjson("{\"$and\":[{\"d\":{\"$regex\":\"/caseless/i\"}}]}");
struct GeneratedQuery304 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery304::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery304::projection = fromjson("{\"\":1,\"c\":1,c:1}");
struct GeneratedQuery305 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery305::query = fromjson("{\"arrayField\":1}");
struct GeneratedQuery306 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery306::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"a\":{\"$in\":[314159265019]}}}}");    BSONObj GeneratedQuery306::projection = fromjson("{\"\":{$elemMatch:{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"},\"$where\":'String(this.a || this.b || this.c || this.d).length > 9',\"arrayField\":''}}}");
struct GeneratedQuery307 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery307::query = fromjson("{\"$or\":[{\"_id\":{\"$not\":{\"$elemMatch\":{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}}}},{\"b\":{\"$mod\":[314159295,0]}},{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery308 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery308::query = fromjson("{\"$nor\":[{\"d\":{\"$regex\":\"/\\d?[A-E]\\*/\"}},{\"arrayField\":true},{\"\":{\"$type\":16}},{\"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"a\":{\"$mod\":[314159235,314159285]}}]}");
struct GeneratedQuery309 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery309::query = fromjson("{d:true}");
struct GeneratedQuery310 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery310::query = fromjson("{\"$or\":[{\"b\":{\"$elemMatch\":{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}}}]}");    BSONObj GeneratedQuery310::projection = fromjson("{\"\":1}");
struct GeneratedQuery311 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery311::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery312 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery312::query = fromjson("{\"b\":null}");
struct GeneratedQuery313 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery313::query = fromjson("{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery314 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery314::query = fromjson("{\"b\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'mmssi'}}");
struct GeneratedQuery315 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery315::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'},{\"\":{\"$elemMatch\":{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }',\"d\":{\"$in\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90]}}]},'You must be the change you wish to see in the world. anything',['',{}],'']}}}}]}");
struct GeneratedQuery316 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery316::query = fromjson("{\"arrayField\":null}");    BSONObj GeneratedQuery316::projection = fromjson("{\"c\":{$elemMatch:{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}}");
struct GeneratedQuery317 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery317::query = fromjson("{\"c\":314159265012}");
struct GeneratedQuery318 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery318::query = fromjson("{\"arrayField.c\":{\"$not\":{\"$mod\":[314159265,314159295]}}}");
struct GeneratedQuery319 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery319::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery319::projection = fromjson("{\"a\":1}");
struct GeneratedQuery320 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery320::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery321 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery321::query = fromjson("{\"d\":{\"$mod\":[314159275,0]}}");    BSONObj GeneratedQuery321::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery322 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery322::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery323 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery323::query = fromjson("{\"arrayField\":{\"$elemMatch\":{c:314159265008}}}");
struct GeneratedQuery324 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery324::query = fromjson("{\"d\":{\"$mod\":[314159235,314159275]}}");
struct GeneratedQuery325 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery325::query = fromjson("{\"$and\":[{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},{\"d\":-3.14159265859}]}");
struct GeneratedQuery326 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery326::query = fromjson("{\"\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    BSONObj GeneratedQuery326::projection = fromjson("{\"b\":1}");
struct GeneratedQuery327 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery327::query = fromjson("{\"$and\":[{\"b\":{\"$type\":15,\"$not\":{\"$exists\":true},\"$elemMatch\":{\"b\":null,\"b\":{\"$mod\":[314159285,314159215]},\"b\":''}}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"arrayField\":314159265009},{\"b\":0}]}");    BSONObj GeneratedQuery327::projection = fromjson("{\"b\":1}");
struct GeneratedQuery328 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery328::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[180,-25],[25,-90.0]]}}}}");
struct GeneratedQuery329 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery329::query = fromjson("{b:{\"$regex\":\"/^abc/\"}}");    BSONObj GeneratedQuery329::projection = fromjson("{\"a\":1}");
struct GeneratedQuery330 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery330::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery331 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery331::query = fromjson("{\"_id\":-3.14159265359}");    BSONObj GeneratedQuery331::projection = fromjson("{\"c\":{$slice:2},\"_id\":1,c:1}");
struct GeneratedQuery332 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery332::query = fromjson("{\"arrayField\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");    BSONObj GeneratedQuery332::projection = fromjson("{b:1}");
struct GeneratedQuery333 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery333::query = fromjson("{\"$or\":[{\"arrayField\":314159265008},{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{d:{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},{\"arrayField.a.a\":{\"$exists\":0}},{a:{\"$regex\":\"/^abc/m\"}},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{b:'Usted puede hacer cualquier cosa, pero no todo.'}]}");    BSONObj GeneratedQuery333::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery334 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery334::query = fromjson("{\"arrayField\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");    BSONObj GeneratedQuery334::projection = fromjson("{\"d\":1}");
struct GeneratedQuery335 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery335::query = fromjson("{\"arrayField\":314159265014}");    BSONObj GeneratedQuery335::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery336 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery336::query = fromjson("{\"$nor\":[{\"arrayField.b\":{\"$type\":3}}]}");    BSONObj GeneratedQuery336::projection = fromjson("{\"b\":1}");
struct GeneratedQuery337 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery337::query = fromjson("{\"b\":0.00000000049406564841}");    BSONObj GeneratedQuery337::projection = fromjson("{c:{$elemMatch:{\"$where\":'function myFunction() { var x = 1 + 2; }'}}}");
struct GeneratedQuery338 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery338::query = fromjson("{\"arrayField._id\":{\"$elemMatch\":{\"a.b\":{\"$mod\":[314159255,314159245]}}}}");
struct GeneratedQuery339 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery339::query = fromjson("{\"arrayField.b\":{\"$lte\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}}");
struct GeneratedQuery340 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery340::query = fromjson("{c:{\"$regex\":\"/^abc/m\"}}");    BSONObj GeneratedQuery340::projection = fromjson("{\"a\":1}");
struct GeneratedQuery341 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery341::query = fromjson("{\"c\":{\"$lt\":0.0}}");
struct GeneratedQuery342 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery342::query = fromjson("{\"c\":{\"$regex\":\"/caseless/i\"}}");    BSONObj GeneratedQuery342::projection = fromjson("{\"_id\":1,\"d\":1}");
struct GeneratedQuery343 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery343::query = fromjson("{\"arrayField\":{\"$all\":[{\"arrayField\":[{\"locHaystack\":[-33.3,-25]}]}]}}");    BSONObj GeneratedQuery343::projection = fromjson("{\"arrayField.$\":1,c:1}");
struct GeneratedQuery344 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery344::query = fromjson("{d:0.00000000049406564841}");    BSONObj GeneratedQuery344::projection = fromjson("{a:1}");
struct GeneratedQuery345 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery345::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery346 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery346::query = fromjson("{\"a\":{\"$mod\":[314159235,314159205]}}");
struct GeneratedQuery347 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery347::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery348 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery348::query = fromjson("{\"$and\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"d\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}},{b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'mssi'}}]}");
struct GeneratedQuery349 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery349::query = fromjson("{\"_id\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery349::projection = fromjson("{\"a\":1}");
struct GeneratedQuery350 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery350::query = fromjson("{a:{\"$size\":NumberInt(314159285)}}");
struct GeneratedQuery351 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery351::query = fromjson("{\"b\":{\"arrayField\":[{\"locLegacy\":[-180,-89.9]},{\"arrayField\":[{\"locHaystack\":{ 'lng': 179.9, 'lat': 90.0}},{\"d\":{\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}},{\"a\":false}]}]}}");    BSONObj GeneratedQuery351::projection = fromjson("{\"c\":{$elemMatch:{\"d\":{\"$regex\":\"/^abc/m\"},\"a\":314159265011,\"c\":[{\"b\":{\"a\":{\"locLegacy\":[-180,0]}}}]}}}");
struct GeneratedQuery352 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery352::query = fromjson("{\"$nor\":[{\"d\":{\"$exists\":false}},{\"arrayField\":''}]}");
struct GeneratedQuery353 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery353::query = fromjson("{\"b\":{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery354 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery354::query = fromjson("{\"_id\":{\"arrayField\":[{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"}]},{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',314159265016]},0.00002225073858072014],\"arrayField\":[{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything'],\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]},{}]}}");
struct GeneratedQuery355 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery355::query = fromjson("{\"c\":null}");
struct GeneratedQuery356 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery356::query = fromjson("{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery356::projection = fromjson("{\"b\":1,\"_id\":{$elemMatch:{d:{\"$size\":314159285},\"b\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"},\"\":{\"$regex\":\"/(tang|tangerine|tan)/\"},\"arrayField\":314159265009}}}");
struct GeneratedQuery357 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery357::query = fromjson("{\"$and\":[{\"\":{\"$lt\":true}}]}");
struct GeneratedQuery358 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery358::query = fromjson("{\"arrayField.d.a\":{\"$in\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{},'You can do anything, but not everything.']}}");
struct GeneratedQuery359 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery359::query = fromjson("{\"\":{\"$mod\":[314159265,314159265]}}");
struct GeneratedQuery360 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery360::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery361 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery361::query = fromjson("{\"a\":{\"$not\":{\"$gt\":null}}}");
struct GeneratedQuery362 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery362::query = fromjson("{\"$or\":[{\"b\":0},{_id:'You can do anything, but not everything.'},{\"arrayField\":{\"$all\":[1,{\"$date\": \"2000-01-01T01:00:00.000-0500\"},[[true],{\"arrayField\":[0],\"_id\":{\"a\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']}}]]}},{\"arrayField\":0}]}");    BSONObj GeneratedQuery362::projection = fromjson("{\"b\":1}");
struct GeneratedQuery363 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery363::query = fromjson("{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'i'}}");
struct GeneratedQuery364 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery364::query = fromjson("{\"a\":{\"$not\":{\"$exists\":null}}}");    BSONObj GeneratedQuery364::projection = fromjson("{\"b\":1}");
struct GeneratedQuery365 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery365::query = fromjson("{\"\":{\"$gt\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}}");
struct GeneratedQuery366 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery366::query = fromjson("{_id:{\"$size\":NumberLong(314159265358979343)}}");
struct GeneratedQuery367 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery367::query = fromjson("{a:{\"$elemMatch\":{\"a\":3.14159265359}}}");
struct GeneratedQuery368 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery368::query = fromjson("{\"\":{\"$elemMatch\":{\"arrayField\":{\"$all\":[]},a:{\"$exists\":0}}}}");    BSONObj GeneratedQuery368::projection = fromjson("{\"\":1}");
struct GeneratedQuery369 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery369::query = fromjson("{d:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery370 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery370::query = fromjson("{\"b\":{\"$mod\":[314159275,314159275]}}");
struct GeneratedQuery371 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery371::query = fromjson("{\"$or\":[{\"arrayField\":[true,2225073858072009000.99,{\"c\":314159265008},false]}]}");
struct GeneratedQuery372 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery372::query = fromjson("{\"d\":314159265003}");
struct GeneratedQuery373 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery373::query = fromjson("{c:{\"$exists\":1}}");
struct GeneratedQuery374 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery374::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery374::projection = fromjson("{\"a\":{$slice:10}}");
struct GeneratedQuery375 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery375::query = fromjson("{\"_id\":{\"$lte\":false}}");    BSONObj GeneratedQuery375::projection = fromjson("{a:1,\"a\":{$elemMatch:{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"b\":'You can do anything, but not everything.',\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"b\":[314159265003,{\"locLegacy\":[-25,-90.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]},\"locHaystack\":{ 'lng': 180, 'lat': 0.0}}],\"a\":3.14159265359,\"c.d\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}}}");
struct GeneratedQuery376 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery376::query = fromjson("{\"c\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery377 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery377::query = fromjson("{a:''}");
struct GeneratedQuery378 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery378::query = fromjson("{\"$and\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}]}");    BSONObj GeneratedQuery378::projection = fromjson("{d:1}");
struct GeneratedQuery379 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery379::query = fromjson("{d:{\"$not\":{\"$not\":{\"$not\":{\"$lt\":'You can do anything, but not everything.'}}}}}");
struct GeneratedQuery380 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery380::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery381 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery381::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$box\":[[-180.0,25],[0.0,0.0]],\"$uniqueDocs\":0}}}");
struct GeneratedQuery382 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery382::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery383 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery383::query = fromjson("{\"c.a.c\":{\"$size\":NumberInt(314159215)}}");    BSONObj GeneratedQuery383::projection = fromjson("{\"d\":1}");
struct GeneratedQuery384 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery384::query = fromjson("{\"\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");    BSONObj GeneratedQuery384::projection = fromjson("{\"a\":1}");
struct GeneratedQuery385 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery385::query = fromjson("{d:{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery386 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery386::query = fromjson("{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'ss'}}");
struct GeneratedQuery387 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery387::query = fromjson("{\"\":{\"$exists\":'Usted debe ser el cambio que deseas ver en el mundo.'}}");    BSONObj GeneratedQuery387::projection = fromjson("{b:1}");
struct GeneratedQuery388 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery388::query = fromjson("{\"$and\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");    BSONObj GeneratedQuery388::projection = fromjson("{\"\":1}");
struct GeneratedQuery389 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery389::query = fromjson("{\"$or\":[{\"arrayField\":{\"$all\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"},-314159265359]}},{\"arrayField\":{\"b\":{\"locHaystack\":[-179.9,-25]},\"locLegacy\":[33.3,89.9],\"b\":{\"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},\"arrayField\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}}]}");
struct GeneratedQuery390 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery390::query = fromjson("{\"$or\":[{\"b.d\":'You can do anything, but not everything.'}]}");
struct GeneratedQuery391 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery391::query = fromjson("{\"$nor\":[{\"a\":{\"$gte\":false}}]}");
struct GeneratedQuery392 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery392::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery393 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery393::query = fromjson("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");    BSONObj GeneratedQuery393::projection = fromjson("{\"b\":1,\"d\":1}");
struct GeneratedQuery394 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery394::query = fromjson("{\"$and\":[{\"arrayField\":314159265011},{\"c\":314159265009},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"b\":0.0}]}");
struct GeneratedQuery395 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery395::query = fromjson("{\"arrayField\":{\"$type\":-1}}");
struct GeneratedQuery396 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery396::query = fromjson("{\"$nor\":[{c:0}]}");    BSONObj GeneratedQuery396::projection = fromjson("{c:{$slice:0}}");
struct GeneratedQuery397 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery397::query = fromjson("{\"$or\":[{\"d\":{\"$regex\":\"/^abc/m\"}},{\"$where\":'this.d != undefined'},{\"arrayField\":0}]}");    BSONObj GeneratedQuery397::projection = fromjson("{\"d\":1}");
struct GeneratedQuery398 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery398::query = fromjson("{\"b\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'m'}}");
struct GeneratedQuery399 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery399::query = fromjson("{\"arrayField.a\":{\"$type\":9}}");
struct GeneratedQuery400 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery400::query = fromjson("{\"_id\":{\"$not\":{\"$all\":[true,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-25]},\"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}}}");
struct GeneratedQuery401 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery401::query = fromjson("{\"arrayField\":314159265005}");    BSONObj GeneratedQuery401::projection = fromjson("{\"arrayField.$\":1,\"b\":1}");
struct GeneratedQuery402 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery402::query = fromjson("{\"b\":-3.14159265859}");
struct GeneratedQuery403 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery403::query = fromjson("{\"\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'i'}}");
struct GeneratedQuery404 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery404::query = fromjson("{\"b\":0.00002225073858072014}");
struct GeneratedQuery405 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery405::query = fromjson("{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'is'}}");
struct GeneratedQuery406 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery406::query = fromjson("{\"b\":314159265018}");
struct GeneratedQuery407 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery407::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery408 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery408::query = fromjson("{\"$or\":[{\"b\":314159265011}]}");
struct GeneratedQuery409 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery409::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery410 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery410::query = fromjson("{d:'You can do anything, but not everything.'}");
struct GeneratedQuery411 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery411::query = fromjson("{\"a\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery412 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery412::query = fromjson("{\"_id.a.a\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery413 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery413::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery414 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery414::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery415 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery415::query = fromjson("{\"$or\":[{\"arrayField\":314159265000},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}]}");    BSONObj GeneratedQuery415::projection = fromjson("{a:1,b:1}");
struct GeneratedQuery416 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery416::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery416::projection = fromjson("{\"d\":1}");
struct GeneratedQuery417 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery417::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery418 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery418::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery419 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery419::query = fromjson("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");    BSONObj GeneratedQuery419::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery420 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery420::query = fromjson("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"arrayField\":true}]}");    BSONObj GeneratedQuery420::projection = fromjson("{\"a\":1}");
struct GeneratedQuery421 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery421::query = fromjson("{\"$or\":[{\"b._id\":null}]}");
struct GeneratedQuery422 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery422::query = fromjson("{\"a\":{\"$exists\":1}}");    BSONObj GeneratedQuery422::projection = fromjson("{\"a\":1}");
struct GeneratedQuery423 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery423::query = fromjson("{\"$nor\":[{\"b\":{\"$lt\":['I quit therapy because my analyst was trying to help me behind my back. anything',0,{\"$date\": \"2000-01-01T01:00:00.000-0500\"},'Echa de menos el 100 por ciento de los tiros que nunca toma.']}}]}");    BSONObj GeneratedQuery423::projection = fromjson("{\"c\":1}");
struct GeneratedQuery424 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery424::query = fromjson("{\"arrayField.a\":{\"$all\":[314159265002]}}");    BSONObj GeneratedQuery424::projection = fromjson("{\"a\":1}");
struct GeneratedQuery425 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery425::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery426 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery426::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery427 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery427::query = fromjson("{d:{\"$type\":127}}");
struct GeneratedQuery428 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery428::query = fromjson("{\"$or\":[{\"_id\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}},{\"arrayField\":false}]}");
struct GeneratedQuery429 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery429::query = fromjson("{\"arrayField\":''}");
struct GeneratedQuery430 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery430::query = fromjson("{c:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");    BSONObj GeneratedQuery430::projection = fromjson("{\"arrayField.$\":1,\"d\":1}");
struct GeneratedQuery431 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery431::query = fromjson("{\"b.b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-89.9]}}}");    BSONObj GeneratedQuery431::projection = fromjson("{\"b\":1,d:1}");
struct GeneratedQuery432 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery432::query = fromjson("{c:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery433 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery433::query = fromjson("{c:{\"$regex\":\"/(a)|(b)/\"}}");    BSONObj GeneratedQuery433::projection = fromjson("{\"c\":1}");
struct GeneratedQuery434 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery434::query = fromjson("{\"c\":{\"$type\":8}}");
struct GeneratedQuery435 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery435::query = fromjson("{\"arrayField\":314159265006}");
struct GeneratedQuery436 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery436::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery437 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery437::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery438 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery438::query = fromjson("{\"arrayField.d\":{\"$mod\":[314159255,0]}}");
struct GeneratedQuery439 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery439::query = fromjson("{\"c.a\":0}");    BSONObj GeneratedQuery439::projection = fromjson("{b:1}");
struct GeneratedQuery440 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery440::query = fromjson("{\"a\":{\"$regex\":\"/^abc/\"}}");
struct GeneratedQuery441 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery441::query = fromjson("{d:null}");
struct GeneratedQuery442 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery442::query = fromjson("{\"c\":{\"$mod\":[314159275,314159265]}}");
struct GeneratedQuery443 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery443::query = fromjson("{\"_id\":0}");
struct GeneratedQuery444 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery444::query = fromjson("{a:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery445 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery445::query = fromjson("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]}}}}");
struct GeneratedQuery446 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery446::query = fromjson("{\"$and\":[{a:{\"$all\":[{\"arrayField\":[{\"d\":0},{\"arrayField\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]},null]}]}}]}");
struct GeneratedQuery447 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery447::query = fromjson("{\"$nor\":[{\"a\":314159265011}]}");
struct GeneratedQuery448 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery448::query = fromjson("{\"b\":-3.14159265000}");
struct GeneratedQuery449 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery449::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-25,89.9]}}}}");
struct GeneratedQuery450 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery450::query = fromjson("{\"b\":''}");
struct GeneratedQuery451 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery451::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery451::projection = fromjson("{a:1}");
struct GeneratedQuery452 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery452::query = fromjson("{\"arrayField\":1}");
struct GeneratedQuery453 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery453::query = fromjson("{\"$or\":[{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}");
struct GeneratedQuery454 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery454::query = fromjson("{\"arrayField.a\":{\"$size\":314159265}}");
struct GeneratedQuery455 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery455::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}]}");
struct GeneratedQuery456 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery456::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery456::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery457 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery457::query = fromjson("{b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery458 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery458::query = fromjson("{\"$nor\":[{\"arrayField\":null}]}");    BSONObj GeneratedQuery458::projection = fromjson("{a:1,\"d\":1,c:1}");
struct GeneratedQuery459 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery459::query = fromjson("{\"a\":''}");
struct GeneratedQuery460 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery460::query = fromjson("{\"_id\":{\"$exists\":0}}");    BSONObj GeneratedQuery460::projection = fromjson("{c:1}");
struct GeneratedQuery461 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery461::query = fromjson("{\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}");
struct GeneratedQuery462 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery462::query = fromjson("{\"arrayField\":314159265013}");    BSONObj GeneratedQuery462::projection = fromjson("{b:1}");
struct GeneratedQuery463 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery463::query = fromjson("{\"arrayField\":{\"$all\":[false]}}");
struct GeneratedQuery464 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery464::query = fromjson("{d:{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");    BSONObj GeneratedQuery464::projection = fromjson("{\"d\":1}");
struct GeneratedQuery465 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery465::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }',\"$where\":'this.d != undefined'}");
struct GeneratedQuery466 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery466::query = fromjson("{\"a\":0}");    BSONObj GeneratedQuery466::projection = fromjson("{\"a\":1}");
struct GeneratedQuery467 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery467::query = fromjson("{\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery468 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery468::query = fromjson("{a:{\"$lt\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}}");
struct GeneratedQuery469 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery469::query = fromjson("{\"b\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");
struct GeneratedQuery470 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery470::query = fromjson("{c:{\"$elemMatch\":{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}},\"$ne\":''}}");
struct GeneratedQuery471 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery471::query = fromjson("{\"a\":1797693134862315799999}");
struct GeneratedQuery472 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery472::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery472::projection = fromjson("{\"b\":{$elemMatch:{\"b\":{\"$in\":[{\"arrayField\":[{\"locHaystack\":{ 'lng': 0.0, 'lat': -25},\"arrayField\":['You can do anything, but not everything.',true,3.14159265359,'You must be the change you wish to see in the world. anything']}]},{\"arrayField\":[314159265000]}]},\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"},\"a\":{\"$not\":{\"$not\":{\"$gt\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}}},\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}},_id:{$elemMatch:{\"_id\":{\"$all\":[null]}}},b:1,\"d\":1}");
struct GeneratedQuery473 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery473::query = fromjson("{\"_id\":{\"$mod\":[2147483647,314159255]}}");    BSONObj GeneratedQuery473::projection = fromjson("{\"c\":1,\"\":1,\"d\":{$slice:100}}");
struct GeneratedQuery474 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery474::query = fromjson("{\"\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");    BSONObj GeneratedQuery474::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery475 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery475::query = fromjson("{\"$and\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"c\":{\"$regex\":\"/(tang|tangerine|tan)/\"}},{\"arrayField.b\":{\"$size\":NumberInt(-2147483648)}},{\"arrayField.b\":{\"$nin\":[false,0,{\"$date\": \"2008-02-29T12:01:00.000-0500\"}],\"$lte\":true,\"$mod\":[314159245,314159295],\"$gt\":{\"b\":{\"locLegacy\":[180,90.0]},\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]},\"locHaystack\":{ 'lng': 180.0, 'lat': 89.9}},\"locHaystack\":[25,0.0]}}}]}");
struct GeneratedQuery476 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery476::query = fromjson("{\"a\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}");
struct GeneratedQuery477 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery477::query = fromjson("{\"b\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery478 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery478::query = fromjson("{\"_id\":{\"$type\":5,\"$mod\":[314159215,314159225]}}");    BSONObj GeneratedQuery478::projection = fromjson("{\"b._id\":{$slice:0}}");
struct GeneratedQuery479 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery479::query = fromjson("{c:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery480 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery480::query = fromjson("{\"$or\":[{\"c\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}},{\"arrayField\":1}]}");    BSONObj GeneratedQuery480::projection = fromjson("{\"a\":1}");
struct GeneratedQuery481 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery481::query = fromjson("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{_id:{\"$mod\":[314159235,314159225]}},{\"\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'s'}}]}");
struct GeneratedQuery482 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery482::query = fromjson("{\"b\":314159265008}");    BSONObj GeneratedQuery482::projection = fromjson("{\"\":1}");
struct GeneratedQuery483 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery483::query = fromjson("{\"arrayField\":null}");
struct GeneratedQuery484 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery484::query = fromjson("{\"c\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery484::projection = fromjson("{\"b\":1}");
struct GeneratedQuery485 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery485::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"c\":{\"$regex\":\"/caseless/i\"},\"arrayField.c\":{\"$not\":{\"$type\":15}}}}}");
struct GeneratedQuery486 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery486::query = fromjson("{\"$nor\":[{\"c\":0},{\"_id\":'You can do anything, but not everything.'},{\"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}]}");    BSONObj GeneratedQuery486::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery487 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery487::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery488 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery488::query = fromjson("{\"arrayField.b\":{\"$elemMatch\":{\"_id.a\":314159265008}}}");
struct GeneratedQuery489 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery489::query = fromjson("{a:1797693134862315799999}");
struct GeneratedQuery490 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery490::query = fromjson("{\"_id\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery491 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery491::query = fromjson("{\"b.c\":''}");
struct GeneratedQuery492 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery492::query = fromjson("{\"c\":{\"$regex\":\"/^abc/m\"}}");
struct GeneratedQuery493 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery493::query = fromjson("{\"arrayField.c\":{\"$all\":[[[{\"locHaystack\":{ 'lng': -180.0, 'lat': -90.0},\"arrayField\":[0]},{\"a\":null}],[{},314159265018,{\"arrayField\":[{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"b\":''},0.00000000049406564841]}],\"arrayField\":[{\"b\":1},{\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}]},{\"$date\": \"2008-02-29T12:01:00.000-0500\"},['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']]],314159265014]}}");    BSONObj GeneratedQuery493::projection = fromjson("{b:1,\"c\":1}");
struct GeneratedQuery494 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery494::query = fromjson("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");    BSONObj GeneratedQuery494::projection = fromjson("{\"b.a\":1}");
struct GeneratedQuery495 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery495::query = fromjson("{\"$and\":[{\"arrayField\":314159265010}]}");
struct GeneratedQuery496 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery496::query = fromjson("{\"c\":''}");
struct GeneratedQuery497 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery497::query = fromjson("{\"arrayField\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery498 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery498::query = fromjson("{\"$or\":[{\"arrayField._id\":{\"$not\":{\"$gt\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}}},{\"_id.c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},{\"\":{\"$lt\":314159265003}},{c:[[{\"arrayField\":[314159265009,[0.00000000049406564841,{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90.0]}},'']]},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas','',1]]},{d:{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},{\"$where\":'function myFunction() { return this.d != undefined; }'},{b:314159265018},{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}]}");
struct GeneratedQuery499 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery499::query = fromjson("{\"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery500 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery500::query = fromjson("{\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery501 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery501::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}]}");    BSONObj GeneratedQuery501::projection = fromjson("{b:1}");
struct GeneratedQuery502 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery502::query = fromjson("{a:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery502::projection = fromjson("{\"\":1}");
struct GeneratedQuery503 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery503::query = fromjson("{\"arrayField\":''}");    BSONObj GeneratedQuery503::projection = fromjson("{\"d\":1}");
struct GeneratedQuery504 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery504::query = fromjson("{\"arrayField\":{\"$all\":['You can do anything, but not everything.']}}");
struct GeneratedQuery505 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery505::query = fromjson("{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery506 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery506::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery507 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery507::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery508 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery508::query = fromjson("{\"$nor\":[{\"b\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}},{\"arrayField\":null}]}");
struct GeneratedQuery509 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery509::query = fromjson("{\"$and\":[{\"$where\":'this.d != undefined'},{a:''}]}");    BSONObj GeneratedQuery509::projection = fromjson("{\"c\":1}");
struct GeneratedQuery510 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery510::query = fromjson("{\"_id\":{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery511 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery511::query = fromjson("{b:{\"$type\":13}}");
struct GeneratedQuery512 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery512::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery513 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery513::query = fromjson("{\"\":false}");
struct GeneratedQuery514 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery514::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]}}}}");
struct GeneratedQuery515 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery515::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery515::projection = fromjson("{\"c\":{$elemMatch:{\"arrayField\":0}}}");
struct GeneratedQuery516 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery516::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery517 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery517::query = fromjson("{\"c\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery518 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery518::query = fromjson("{\"$and\":[{\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},{\"arrayField\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}]}");
struct GeneratedQuery519 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery519::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery519::projection = fromjson("{\"\":1}");
struct GeneratedQuery520 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery520::query = fromjson("{\"a.b\":{\"$mod\":[314159275,314159225]}}");    BSONObj GeneratedQuery520::projection = fromjson("{b:1}");
struct GeneratedQuery521 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery521::query = fromjson("{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'i'}}");    BSONObj GeneratedQuery521::projection = fromjson("{\"b\":1}");
struct GeneratedQuery522 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery522::query = fromjson("{\"d\":{\"$not\":{\"$mod\":[314159285,314159225]}}}");
struct GeneratedQuery523 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery523::query = fromjson("{b:{\"$mod\":[314159215,2147483647]}}");
struct GeneratedQuery524 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery524::query = fromjson("{b:314159265012}");    BSONObj GeneratedQuery524::projection = fromjson("{\"c\":1,_id:1,b:1,\"b\":1}");
struct GeneratedQuery525 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery525::query = fromjson("{\"c\":'You miss 100 percent of the shots you never take. anything'}");
struct GeneratedQuery526 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery526::query = fromjson("{\"arrayField\":{\"$nin\":[0,{\"$date\": \"2008-02-29T12:01:00.000-0500\"},-3.14159265859,314159265012],\"$ne\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}}");
struct GeneratedQuery527 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery527::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery527::projection = fromjson("{b:1,\"c\":{$slice:2}}");
struct GeneratedQuery528 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery528::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery528::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery529 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery529::query = fromjson("{\"$nor\":[{\"\":''},{\"arrayField.a\":{\"$not\":{\"$all\":[314159265015,{\"locLegacy\":[-25,90.0]},{\"$date\": \"9999-12-31T23:59:59.000-0500\"},null,{\"$date\": \"9999-12-31T23:59:59.000-0500\"}]}}}]}");
struct GeneratedQuery530 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery530::query = fromjson("{\"_id\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery530::projection = fromjson("{\"a\":1,\"\":1}");
struct GeneratedQuery531 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery531::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"c\":{\"$regex\":\"/^abc(\\d+)/\"},d:314159265008}}}");    BSONObj GeneratedQuery531::projection = fromjson("{a:1,\"b\":1}");
struct GeneratedQuery532 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery532::query = fromjson("{\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'mmssim'}}");
struct GeneratedQuery533 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery533::query = fromjson("{\"a\":'You can do anything, but not everything.'}");
struct GeneratedQuery534 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery534::query = fromjson("{\"d\":{\"$regex\":\"/abc\\def/\"}}");
struct GeneratedQuery535 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery535::query = fromjson("{\"arrayField\":{\"$all\":[{\"arrayField\":[314159265017,{\"locHaystack\":{ 'lng': 0.0, 'lat': 25}}]},{},null]}}");
struct GeneratedQuery536 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery536::query = fromjson("{\"$and\":[{\"c\":{\"$regex\":\"/^abc/m\"}}]}");
struct GeneratedQuery537 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery537::query = fromjson("{\"a\":{\"$mod\":[314159285,314159255]}}");    BSONObj GeneratedQuery537::projection = fromjson("{\"d\":1}");
struct GeneratedQuery538 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery538::query = fromjson("{\"_id\":false}");    BSONObj GeneratedQuery538::projection = fromjson("{\"b\":1}");
struct GeneratedQuery539 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery539::query = fromjson("{\"arrayField.a\":{\"$all\":[314159265018,'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}}");    BSONObj GeneratedQuery539::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery540 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery540::query = fromjson("{\"a.b\":{\"$not\":{\"$exists\":0}}}");    BSONObj GeneratedQuery540::projection = fromjson("{\"c\":1,\"_id\":1}");
struct GeneratedQuery541 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery541::query = fromjson("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"arrayField\":null},{\"$where\":'function myFunction() { var x = 1 + 2; }'},{\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}},{\"a._id\":{\"$not\":{\"$elemMatch\":{\"c\":314159265017}}}}]}");
struct GeneratedQuery542 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery542::query = fromjson("{\"d\":{\"$not\":{\"$lte\":[{\"a\":314159265010,\"c\":{\"arrayField\":[null]}},[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"arrayField\":[{\"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"locHaystack\":[25,90.0]}]},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],false]}}}");
struct GeneratedQuery543 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery543::query = fromjson("{b:{\"$lte\":0,\"$exists\":true}}");    BSONObj GeneratedQuery543::projection = fromjson("{b:1}");
struct GeneratedQuery544 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery544::query = fromjson("{\"$or\":[{\"c\":2225073858072009000.99},{\"a\":0.00002225073858072014}]}");
struct GeneratedQuery545 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery545::query = fromjson("{\"a\":false}");
struct GeneratedQuery546 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery546::query = fromjson("{\"a\":{\"$exists\":1}}");
struct GeneratedQuery547 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery547::query = fromjson("{_id:1}");
struct GeneratedQuery548 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery548::query = fromjson("{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");    BSONObj GeneratedQuery548::projection = fromjson("{\"b\":1}");
struct GeneratedQuery549 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery549::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery550 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery550::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery551 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery551::query = fromjson("{_id:false}");
struct GeneratedQuery552 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery552::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery552::projection = fromjson("{\"d\":{$elemMatch:{\"b\":{\"$exists\":1},\"a\":-3.14159265859,\"_id\":{\"$exists\":1}}}}");
struct GeneratedQuery553 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery553::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery553::projection = fromjson("{\"b\":1}");
struct GeneratedQuery554 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery554::query = fromjson("{_id:false}");
struct GeneratedQuery555 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery555::query = fromjson("{\"a\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery556 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery556::query = fromjson("{\"$nor\":[{d:{\"$regex\":\"c a t #looks for cats\",\"$options\":'msm'}},{\"d\":{\"$not\":{\"$exists\":0}}}]}");
struct GeneratedQuery557 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery557::query = fromjson("{\"\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'mms'}}");    BSONObj GeneratedQuery557::projection = fromjson("{\"\":1}");
struct GeneratedQuery558 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery558::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery559 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery559::query = fromjson("{\"c\":{\"$mod\":[314159295,2147483647]},b:{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}},['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']]},\"arrayField\":false}");    BSONObj GeneratedQuery559::projection = fromjson("{c:1,\"_id\":{$elemMatch:{\"\":''}}}");
struct GeneratedQuery560 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery560::query = fromjson("{_id:{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery561 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery561::query = fromjson("{\"$and\":[{\"_id\":null}]}");    BSONObj GeneratedQuery561::projection = fromjson("{\"a\":1}");
struct GeneratedQuery562 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery562::query = fromjson("{\"arrayField\":{\"$all\":[false]}}");
struct GeneratedQuery563 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery563::query = fromjson("{\"arrayField.a\":{\"$not\":{\"$not\":{\"$in\":['The richest man is not he who has the most, but he who needs the least. anything','I quit therapy because my analyst was trying to help me behind my back. anything']}}}}");    BSONObj GeneratedQuery563::projection = fromjson("{b:1}");
struct GeneratedQuery564 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery564::query = fromjson("{\"arrayField\":0}");    BSONObj GeneratedQuery564::projection = fromjson("{\"arrayField.$\":1,\"a\":{$slice:10}}");
struct GeneratedQuery565 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery565::query = fromjson("{\"arrayField\":null}");
struct GeneratedQuery566 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery566::query = fromjson("{a:{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery567 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery567::query = fromjson("{\"arrayField\":314159265012}");
struct GeneratedQuery568 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery568::query = fromjson("{\"arrayField.b.a.d\":{\"$not\":{\"$not\":{\"$mod\":[314159225,314159295]}}}}");
struct GeneratedQuery569 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery569::query = fromjson("{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery570 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery570::query = fromjson("{b:314159265006}");
struct GeneratedQuery571 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery571::query = fromjson("{\"c\":{\"arrayField\":[{\"locHaystack\":{ 'lng': -25, 'lat': 90}}]}}");
struct GeneratedQuery572 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery572::query = fromjson("{\"b\":{\"$not\":{\"$not\":{\"$type\":17}}}}");    BSONObj GeneratedQuery572::projection = fromjson("{\"b\":1}");
struct GeneratedQuery573 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery573::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery574 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery574::query = fromjson("{_id:0.00002225073858072014}");
struct GeneratedQuery575 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery575::query = fromjson("{\"d\":{\"$type\":3}}");    BSONObj GeneratedQuery575::projection = fromjson("{\"a\":1}");
struct GeneratedQuery576 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery576::query = fromjson("{\"$or\":[{\"arrayField\":'You can do anything, but not everything.'}]}");
struct GeneratedQuery577 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery577::query = fromjson("{\"a\":1}");
struct GeneratedQuery578 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery578::query = fromjson("{\"a\":[null,['',{\"c\":'I quit therapy because my analyst was trying to help me behind my back. anything'}]]}");
struct GeneratedQuery579 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery579::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery580 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery580::query = fromjson("{\"a.b\":null}");
struct GeneratedQuery581 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery581::query = fromjson("{\"$and\":[{\"b\":[{\"$date\": \"9999-12-31T23:59:59.000-0500\"},{\"d\":'You must be the change you wish to see in the world. anything',\"arrayField\":[{\"locHaystack\":[25,-33.3],\"arrayField\":[{\"locLegacy\":[25,0.0]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]},\"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},'',null],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90.0]}},{\"arrayField\":[null,{\"locHaystack\":[-180.0,89.9]}]}]}]}");    BSONObj GeneratedQuery581::projection = fromjson("{d:1}");
struct GeneratedQuery582 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery582::query = fromjson("{\"a\":null}");
struct GeneratedQuery583 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery583::query = fromjson("{a:true}");    BSONObj GeneratedQuery583::projection = fromjson("{\"d.d\":1}");
struct GeneratedQuery584 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery584::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery585 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery585::query = fromjson("{\"\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery586 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery586::query = fromjson("{\"b\":null}");
struct GeneratedQuery587 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery587::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery587::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery588 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery588::query = fromjson("{\"$and\":[{\"arrayField\":314159265018}]}");
struct GeneratedQuery589 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery589::query = fromjson("{\"_id\":314159265014}");
struct GeneratedQuery590 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery590::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery591 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery591::query = fromjson("{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'im'}}");
struct GeneratedQuery592 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery592::query = fromjson("{\"b\":{\"$not\":{\"$in\":[{\"a\":{\"arrayField\":[null],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]},\"_id\":'Usted puede hacer cualquier cosa, pero no todo.'},\"arrayField\":[]}]}}}");
struct GeneratedQuery593 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery593::query = fromjson("{\"c\":{\"$exists\":false}}");    BSONObj GeneratedQuery593::projection = fromjson("{\"d\":1}");
struct GeneratedQuery594 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery594::query = fromjson("{\"b\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");
struct GeneratedQuery595 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery595::query = fromjson("{\"c\":{\"$regex\":\"/cat/\"}}");    BSONObj GeneratedQuery595::projection = fromjson("{\"b\":1}");
struct GeneratedQuery596 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery596::query = fromjson("{\"b\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");
struct GeneratedQuery597 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery597::query = fromjson("{\"b\":{\"$regex\":\"/^abc(\\d+)/\"}}");    BSONObj GeneratedQuery597::projection = fromjson("{\"d\":1,d:1}");
struct GeneratedQuery598 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery598::query = fromjson("{\"_id\":{\"$type\":-1}}");
struct GeneratedQuery599 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery599::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery600 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery600::query = fromjson("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");    BSONObj GeneratedQuery600::projection = fromjson("{a:1}");
struct GeneratedQuery601 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery601::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery601::projection = fromjson("{\"c\":1}");
struct GeneratedQuery602 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery602::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery603 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery603::query = fromjson("{\"$nor\":[{a:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},{\"$where\":'this.d != undefined'}]}");    BSONObj GeneratedQuery603::projection = fromjson("{\"_id\":1,b:1}");
struct GeneratedQuery604 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery604::query = fromjson("{\"arrayField\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery605 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery605::query = fromjson("{\"arrayField\":[{\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]}}},{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}]}");
struct GeneratedQuery606 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery606::query = fromjson("{\"b\":{\"$exists\":true}}");
struct GeneratedQuery607 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery607::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$all\":[{\"arrayField\":[{\"b\":'You can do anything, but not everything.'}],\"_id\":{\"arrayField\":[null]}}]}}]}");
struct GeneratedQuery608 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery608::query = fromjson("{\"$nor\":[{\"arrayField.a.a\":{\"$gte\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{\"d\":{\"$ne\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}},{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery609 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery609::query = fromjson("{\"_id\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");    BSONObj GeneratedQuery609::projection = fromjson("{c:{$elemMatch:{\"c\":{\"$regex\":\"/^abc/\"}}}}");
struct GeneratedQuery610 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery610::query = fromjson("{\"b\":{\"$in\":[{\"locHaystack\":{ 'lng': -179.9, 'lat': -33.3}},{\"arrayField\":[]}]}}");
struct GeneratedQuery611 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery611::query = fromjson("{\"loc\":{\"$nearSphere\":[-25,-90]}}");
struct GeneratedQuery612 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery612::query = fromjson("{\"$or\":[{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}},{b:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}},{\"arrayField.b\":{\"$exists\":0}},{b:false}]}");
struct GeneratedQuery613 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery613::query = fromjson("{\"arrayField\":''}");
struct GeneratedQuery614 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery614::query = fromjson("{\"b\":'You can do anything, but not everything.'}");
struct GeneratedQuery615 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery615::query = fromjson("{\"a\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery616 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery616::query = fromjson("{\"a\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}");    BSONObj GeneratedQuery616::projection = fromjson("{\"a\":1,\"_id\":1}");
struct GeneratedQuery617 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery617::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery618 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery618::query = fromjson("{\"$nor\":[{b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'i'}}]}");    BSONObj GeneratedQuery618::projection = fromjson("{d:1}");
struct GeneratedQuery619 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery619::query = fromjson("{\"arrayField\":{\"$all\":['You can do anything, but not everything.']}}");
struct GeneratedQuery620 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery620::query = fromjson("{d:{\"$mod\":[314159245,314159215]}}");
struct GeneratedQuery621 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery621::query = fromjson("{\"_id\":2225073858072009000.99}");
struct GeneratedQuery622 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery622::query = fromjson("{\"d\":{\"$mod\":[314159245,314159265]}}");
struct GeneratedQuery623 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery623::query = fromjson("{c:{\"$not\":{\"$mod\":[2147483647,0]}}}");
struct GeneratedQuery624 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery624::query = fromjson("{\"b\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery624::projection = fromjson("{_id:1}");
struct GeneratedQuery625 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery625::query = fromjson("{\"arrayField\":0.0}");
struct GeneratedQuery626 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery626::query = fromjson("{\"$or\":[{\"arrayField.c\":{\"$exists\":false,\"$mod\":[314159265,314159275]}},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}]}");
struct GeneratedQuery627 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery627::query = fromjson("{\"arrayField\":{\"d\":null}}");
struct GeneratedQuery628 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery628::query = fromjson("{\"a\":{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery629 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery629::query = fromjson("{\"b\":false}");    BSONObj GeneratedQuery629::projection = fromjson("{\"d\":1}");
struct GeneratedQuery630 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery630::query = fromjson("{\"arrayField\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery631 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery631::query = fromjson("{\"arrayField\":''}");
struct GeneratedQuery632 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery632::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$elemMatch\":{\"arrayField\":0}}},{\"a\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}]}");    BSONObj GeneratedQuery632::projection = fromjson("{\"d\":1,\"c\":1}");
struct GeneratedQuery633 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery633::query = fromjson("{\"arrayField\":'You can do anything, but not everything.'}");
struct GeneratedQuery634 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery634::query = fromjson("{\"a\":false}");
struct GeneratedQuery635 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery635::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery636 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery636::query = fromjson("{a:null}");    BSONObj GeneratedQuery636::projection = fromjson("{a:1,\"c\":1,\"_id\":1}");
struct GeneratedQuery637 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery637::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery638 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery638::query = fromjson("{\"c\":{\"$not\":{\"$mod\":[314159205,314159275]}}}");
struct GeneratedQuery639 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery639::query = fromjson("{\"a\":0.00000000049406564841}");
struct GeneratedQuery640 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery640::query = fromjson("{\"$or\":[{\"b\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}},{\"arrayField.d\":{\"$all\":[{\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'},null,{\"locLegacy\":[-179.9,-90.0]},0.00002225073858072014,'',{\"a\":'',\"arrayField\":[0,{\"arrayField\":[null]},{\"arrayField\":[{\"locLegacy\":[180,-90.0]}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0.0]}}]},true]}},{\"c\":true}]}");
struct GeneratedQuery641 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery641::query = fromjson("{a:{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery642 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery642::query = fromjson("{\"arrayField.c\":{\"$size\":NumberLong(314159265358979313)}}");    BSONObj GeneratedQuery642::projection = fromjson("{\"arrayField.$\":1,\"d\":1}");
struct GeneratedQuery643 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery643::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery644 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery644::query = fromjson("{\"$nor\":[{\"d\":{\"$type\":3}}]}");
struct GeneratedQuery645 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery645::query = fromjson("{\"d\":{\"$size\":NumberInt(314159255)}}");    BSONObj GeneratedQuery645::projection = fromjson("{a:1,\"a\":1}");
struct GeneratedQuery646 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery646::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [2,2],[3,3],[4,2],[2,2] ],[ [0,0],[4,0], [2,3], [1,7], [1,8],[-2,5], [-4,9], [-10,10], [-11,20],[-2,-2], [-1,-9],[2,-8], [2,-5],[0,0]]]}}}}");
struct GeneratedQuery647 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery647::query = fromjson("{\"arrayField.d\":{\"$all\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},'',{\"c\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},null]}}");
struct GeneratedQuery648 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery648::query = fromjson("{a:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}");    BSONObj GeneratedQuery648::projection = fromjson("{\"a\":{$elemMatch:{\"b.a\":false,\"a\":{\"$not\":{\"$type\":5}},\"\":{\"$regex\":\"/(a)|(b)/\"}}}}");
struct GeneratedQuery649 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery649::query = fromjson("{\"a\":{\"$regex\":\"/caseless/i\"}}");
struct GeneratedQuery650 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery650::query = fromjson("{d:{\"d\":{\"arrayField\":[{\"arrayField\":[{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"locHaystack\":[0.0,90]},{\"arrayField\":[314159265015]},{\"arrayField\":[{\"$date\": \"2008-02-29T12:01:00.000-0500\"},1797693134862315799999]},{\"d\":0}]},false]},{\"d\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}}}");    BSONObj GeneratedQuery650::projection = fromjson("{\"d\":1}");
struct GeneratedQuery651 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery651::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}]}");
struct GeneratedQuery652 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery652::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [180,90],[180,0],[0,0],[180,90] ]]}}}}");    BSONObj GeneratedQuery652::projection = fromjson("{\"\":{$elemMatch:{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}}}");
struct GeneratedQuery653 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery653::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery654 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery654::query = fromjson("{\"\":{\"$lte\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}}");
struct GeneratedQuery655 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery655::query = fromjson("{\"d\":{\"$mod\":[314159285,314159295]}}");
struct GeneratedQuery656 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery656::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery657 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery657::query = fromjson("{\"\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");
struct GeneratedQuery658 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery658::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery659 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery659::query = fromjson("{\"$and\":[{\"arrayField\":{\"$elemMatch\":{\"a\":{\"$not\":{\"$mod\":[314159225,2147483647]}},\"b\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}}]}");    BSONObj GeneratedQuery659::projection = fromjson("{\"c\":1}");
struct GeneratedQuery660 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery660::query = fromjson("{\"arrayField\":''}");    BSONObj GeneratedQuery660::projection = fromjson("{\"a\":1}");
struct GeneratedQuery661 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery661::query = fromjson("{\"a\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},'You miss 100 percent of the shots you never take. anything',{\"arrayField\":[{\"locHaystack\":[-180,0]}],\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.',null,false,false],\"arrayField\":[{\"locHaystack\":[180,-90]},null]},2225073858072009000.99]}");
struct GeneratedQuery662 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery662::query = fromjson("{\"arrayField\":314159265016}");    BSONObj GeneratedQuery662::projection = fromjson("{\"d\":1}");
struct GeneratedQuery663 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery663::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery664 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery664::query = fromjson("{\"b\":{\"$not\":{\"$elemMatch\":{a:'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"arrayField\":null}}}}");
struct GeneratedQuery665 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery665::query = fromjson("{\"c\":{\"$regex\":\"/^abc(\\d+)/\"}}");    BSONObj GeneratedQuery665::projection = fromjson("{\"c\":1}");
struct GeneratedQuery666 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery666::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[2,2], [1,4], [2,20],[-2,5], [-4,9], [-10,10], [-11,20],[-3,-4], [-2,-8], [-1,-16],[3,-30], [2,-8], [1,-1],[0,0]]]}}}}");
struct GeneratedQuery667 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery667::query = fromjson("{\"_id\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'s'}}");
struct GeneratedQuery668 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery668::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery668::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery669 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery669::query = fromjson("{\"$nor\":[{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},{\"c\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}]}");
struct GeneratedQuery670 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery670::query = fromjson("{\"a\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery671 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery671::query = fromjson("{\"_id\":{\"$mod\":[314159205,2147483647]}}");
struct GeneratedQuery672 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery672::query = fromjson("{\"$and\":[{\"$where\":'this.d != undefined'},{\"arrayField.a\":{\"$all\":[{\"arrayField\":[false,'Usted debe ser el cambio que deseas ver en el mundo.','You can do anything, but not everything.']}]}},{\"arrayField\":314159265014},{\"arrayField\":''}]}");
struct GeneratedQuery673 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery673::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery674 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery674::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery674::projection = fromjson("{\"c\":1}");
struct GeneratedQuery675 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery675::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery675::projection = fromjson("{b:1}");
struct GeneratedQuery676 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery676::query = fromjson("{\"$nor\":[{d:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{\"c\":{\"$type\":13}}]}");
struct GeneratedQuery677 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery677::query = fromjson("{\"$nor\":[{\"b\":true},{\"c\":{\"$regex\":\"/^abc/\"}},{b:314159265017}]}");    BSONObj GeneratedQuery677::projection = fromjson("{\"b\":{$elemMatch:{\"arrayField\":0,\"$where\":'function myFunction() { return this.d != undefined; }'}}}");
struct GeneratedQuery678 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery678::query = fromjson("{a:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery679 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery679::query = fromjson("{\"$and\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"arrayField.c.b\":{\"$elemMatch\":{b:314159265004,\"arrayField\":{\"$size\":NumberInt(314159255)},\"arrayField\":0,\"d\":{\"$not\":{\"$elemMatch\":{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'si'}}}},a:{\"$regex\":\"/cat/\"}}}},{\"d\":{\"$exists\":false}}]}");    BSONObj GeneratedQuery679::projection = fromjson("{\"a\":1}");
struct GeneratedQuery680 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery680::query = fromjson("{\"arrayField\":{\"$mod\":[314159275,314159205]}}");
struct GeneratedQuery681 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery681::query = fromjson("{\"arrayField.c\":{\"$gt\":314159265012}}");    BSONObj GeneratedQuery681::projection = fromjson("{\"a.c\":1,\"_id\":1,a:1}");
struct GeneratedQuery682 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery682::query = fromjson("{\"d\":1}");    BSONObj GeneratedQuery682::projection = fromjson("{\"a\":1}");
struct GeneratedQuery683 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery683::query = fromjson("{d:{\"$mod\":[314159235,2147483647],\"$size\":NumberLong(314159265358979303),\"$mod\":[314159215,314159215],\"$mod\":[314159295,314159255]}}");
struct GeneratedQuery684 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery684::query = fromjson("{\"b\":314159265007}");
struct GeneratedQuery685 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery685::query = fromjson("{\"$and\":[{\"arrayField\":0.00000000049406564841}]}");    BSONObj GeneratedQuery685::projection = fromjson("{b:1}");
struct GeneratedQuery686 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery686::query = fromjson("{a:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'sm'}}");
struct GeneratedQuery687 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery687::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery688 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery688::query = fromjson("{\"d\":{\"$lt\":false}}");
struct GeneratedQuery689 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery689::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery690 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery690::query = fromjson("{\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery691 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery691::query = fromjson("{a:{\"$not\":{\"$mod\":[314159285,314159265]}}}");
struct GeneratedQuery692 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery692::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery693 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery693::query = fromjson("{\"d\":{\"$elemMatch\":{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }',\"_id\":{\"$regex\":\"/cat/\"},\"_id\":{\"$mod\":[314159215,314159265]},\"_id\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");    BSONObj GeneratedQuery693::projection = fromjson("{\"c\":1,c:1}");
struct GeneratedQuery694 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery694::query = fromjson("{\"c\":true}");
struct GeneratedQuery695 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery695::query = fromjson("{\"a\":1}");
struct GeneratedQuery696 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery696::query = fromjson("{\"$and\":[{\"c\":{\"$mod\":[314159275,314159295]}},{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}]}");    BSONObj GeneratedQuery696::projection = fromjson("{\"c\":1}");
struct GeneratedQuery697 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery697::query = fromjson("{\"a\":[-3.14159265359,{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0.0]}}]}");
struct GeneratedQuery698 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery698::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery698::projection = fromjson("{\"arrayField.$\":1,\"b.c\":1}");
struct GeneratedQuery699 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery699::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery699::projection = fromjson("{\"d.c\":1,c:1}");
struct GeneratedQuery700 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery700::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery700::projection = fromjson("{\"c\":{$slice:2}}");
struct GeneratedQuery701 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery701::query = fromjson("{\"a\":true}");
struct GeneratedQuery702 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery702::query = fromjson("{\"$nor\":[{b:{\"$date\": \"2000-01-01T01:00:00.000-0500\"}},{d:'The richest man is not he who has the most, but he who needs the least. anything'},{\"c\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}]}");
struct GeneratedQuery703 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery703::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery704 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery704::query = fromjson("{\"arrayField\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery705 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery705::query = fromjson("{\"c\":true}");
struct GeneratedQuery706 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery706::query = fromjson("{\"arrayField\":{\"$not\":{\"$exists\":false}}}");
struct GeneratedQuery707 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery707::query = fromjson("{\"b\":314159265018}");
struct GeneratedQuery708 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery708::query = fromjson("{\"a\":true}");    BSONObj GeneratedQuery708::projection = fromjson("{a:1}");
struct GeneratedQuery709 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery709::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery710 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery710::query = fromjson("{a:0}");
struct GeneratedQuery711 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery711::query = fromjson("{d:1}");
struct GeneratedQuery712 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery712::query = fromjson("{\"d\":{\"$type\":17}}");
struct GeneratedQuery713 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery713::query = fromjson("{\"arrayField\":{\"$size\":NumberInt(-2147483648)}}");    BSONObj GeneratedQuery713::projection = fromjson("{\"a\":1}");
struct GeneratedQuery714 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery714::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery715 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery715::query = fromjson("{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery715::projection = fromjson("{\"_id\":1,\"d\":1}");
struct GeneratedQuery716 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery716::query = fromjson("{\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery717 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery717::query = fromjson("{\"$nor\":[{b:{\"$type\":14}},{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery718 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery718::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery718::projection = fromjson("{\"b\":1}");
struct GeneratedQuery719 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery719::query = fromjson("{\"a\":-3.14159265359}");
struct GeneratedQuery720 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery720::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery720::projection = fromjson("{\"b\":1}");
struct GeneratedQuery721 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery721::query = fromjson("{b:0}");
struct GeneratedQuery722 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery722::query = fromjson("{\"c\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery722::projection = fromjson("{d:1}");
struct GeneratedQuery723 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery723::query = fromjson("{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery724 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery724::query = fromjson("{c:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery724::projection = fromjson("{\"\":1,\"a\":1}");
struct GeneratedQuery725 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery725::query = fromjson("{\"d\":[false,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]}}]}");
struct GeneratedQuery726 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery726::query = fromjson("{\"c\":0}");
struct GeneratedQuery727 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery727::query = fromjson("{_id:'You can do anything, but not everything.'}");    BSONObj GeneratedQuery727::projection = fromjson("{b:{$slice:2}}");
struct GeneratedQuery728 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery728::query = fromjson("{\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery729 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery729::query = fromjson("{\"c\":314159265002}");    BSONObj GeneratedQuery729::projection = fromjson("{c:{$elemMatch:{\"$where\":'this.d != undefined'}},\"_id.c\":1}");
struct GeneratedQuery730 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery730::query = fromjson("{a:'The richest man is not he who has the most, but he who needs the least. anything'}");
struct GeneratedQuery731 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery731::query = fromjson("{\"$or\":[{\"b\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}]}");
struct GeneratedQuery732 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery732::query = fromjson("{\"arrayField\":{\"$size\":314159285}}");    BSONObj GeneratedQuery732::projection = fromjson("{d:1}");
struct GeneratedQuery733 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery733::query = fromjson("{\"arrayField._id\":{\"$exists\":0}}");
struct GeneratedQuery734 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery734::query = fromjson("{\"c\":''}");
struct GeneratedQuery735 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery735::query = fromjson("{\"arrayField.d\":{\"$not\":{\"$elemMatch\":{\"$where\":'function myFunction() { var x = 1 + 2; }'}}}}");
struct GeneratedQuery736 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery736::query = fromjson("{d:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery736::projection = fromjson("{\"c\":1}");
struct GeneratedQuery737 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery737::query = fromjson("{\"c\":314159265014}");    BSONObj GeneratedQuery737::projection = fromjson("{a:{$slice:10}}");
struct GeneratedQuery738 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery738::query = fromjson("{\"$nor\":[{\"c\":'You can do anything, but not everything.'},{\"b\":{\"$regex\":\"/^abc/m\"}},{\"arrayField.c.b\":{\"$not\":{\"$lt\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}}}]}");    BSONObj GeneratedQuery738::projection = fromjson("{b:1}");
struct GeneratedQuery739 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery739::query = fromjson("{b:null}");
struct GeneratedQuery740 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery740::query = fromjson("{\"$or\":[{a:{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}");    BSONObj GeneratedQuery740::projection = fromjson("{\"d\":1}");
struct GeneratedQuery741 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery741::query = fromjson("{\"$or\":[{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery742 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery742::query = fromjson("{\"arrayField\":{\"$all\":[{\"arrayField\":[{\"arrayField\":[0,{\"arrayField\":[0],\"c\":''}]}]},{\"$date\": \"2000-01-01T01:00:00.000-0500\"},{\"arrayField\":[true]}]}}");    BSONObj GeneratedQuery742::projection = fromjson("{\"d\":1}");
struct GeneratedQuery743 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery743::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery743::projection = fromjson("{\"a\":1}");
struct GeneratedQuery744 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery744::query = fromjson("{\"$and\":[{\"d\":{\"locHaystack\":{ 'lng': 25, 'lat': -33.3},\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90]}}}}]}");    BSONObj GeneratedQuery744::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery745 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery745::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery746 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery746::query = fromjson("{\"b\":0}");    BSONObj GeneratedQuery746::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery747 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery747::query = fromjson("{\"a\":false}");    BSONObj GeneratedQuery747::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery748 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery748::query = fromjson("{\"arrayField\":{\"$size\":314159205}}");
struct GeneratedQuery749 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery749::query = fromjson("{\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery750 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery750::query = fromjson("{d:'You can do anything, but not everything.'}");    BSONObj GeneratedQuery750::projection = fromjson("{d:1}");
struct GeneratedQuery751 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery751::query = fromjson("{c:{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery752 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery752::query = fromjson("{\"arrayField\":{\"$all\":[314159265010]}}");    BSONObj GeneratedQuery752::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery753 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery753::query = fromjson("{\"b\":{\"$all\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"locHaystack\":{ 'lng': 0.0, 'lat': 89.9},\"locHaystack\":{ 'lng': 179.9, 'lat': -33.3}},{\"$date\": \"2013-09-29T19:00:00.000-0500\"}],\"$size\":NumberLong(314159265358979353)}}");
struct GeneratedQuery754 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery754::query = fromjson("{\"$and\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery755 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery755::query = fromjson("{\"arrayField\":{\"$all\":[[['']]]}}");    BSONObj GeneratedQuery755::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery756 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery756::query = fromjson("{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery757 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery757::query = fromjson("{\"d\":{\"arrayField\":[{\"arrayField\":['You can do anything, but not everything.',314159265008,'You can do anything, but not everything.']}]}}");    BSONObj GeneratedQuery757::projection = fromjson("{\"b\":{$elemMatch:{\"d\":-3.14159265859}},\"b\":1}");
struct GeneratedQuery758 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery758::query = fromjson("{\"_id\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery759 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery759::query = fromjson("{\"a\":0}");    BSONObj GeneratedQuery759::projection = fromjson("{\"b\":1}");
struct GeneratedQuery760 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery760::query = fromjson("{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery761 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery761::query = fromjson("{\"arrayField\":1}");
struct GeneratedQuery762 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery762::query = fromjson("{\"c\":{\"$in\":[{\"c\":{\"_id\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}},\"locHaystack\":[33.3,0]},314159265007,314159265011]}}");
struct GeneratedQuery763 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery763::query = fromjson("{\"arrayField.a\":{\"$not\":{\"$nin\":['',{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]},\"$type\":16}}");    BSONObj GeneratedQuery763::projection = fromjson("{\"c\":1}");
struct GeneratedQuery764 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery764::query = fromjson("{\"$or\":[{\"arrayField\":1797693134862315799999},{\"a\":false},{\"\":1}]}");
struct GeneratedQuery765 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery765::query = fromjson("{\"loc\":{\"$near\":[33.3,25],\"$maxDistance\":314159265010}}");    BSONObj GeneratedQuery765::projection = fromjson("{\"d\":1}");
struct GeneratedQuery766 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery766::query = fromjson("{\"b\":{\"$exists\":true}}");
struct GeneratedQuery767 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery767::query = fromjson("{\"arrayField\":[{\"arrayField\":[{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]}}}]}]}");    BSONObj GeneratedQuery767::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery768 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery768::query = fromjson("{\"$or\":[{\"b.c\":[[314159265006],[[null,{\"locLegacy\":[180,0]}]]]},{\"c\":0}]}");
struct GeneratedQuery769 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery769::query = fromjson("{\"b\":314159265010}");
struct GeneratedQuery770 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery770::query = fromjson("{b:{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery771 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery771::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery772 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery772::query = fromjson("{\"_id\":{\"$mod\":[314159205,2147483647]},\"a\":0}");
struct GeneratedQuery773 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery773::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery773::projection = fromjson("{a:{$slice:1}}");
struct GeneratedQuery774 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery774::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery775 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery775::query = fromjson("{\"arrayField\":-3.14159265000}");
struct GeneratedQuery776 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery776::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery777 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery777::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$polygon\":[[-180.0,-90.0],[-33.3,33.3],[-33.3,0],[180.0,90]]}}}");
struct GeneratedQuery778 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery778::query = fromjson("{\"arrayField\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery779 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery779::query = fromjson("{\"\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}");
struct GeneratedQuery780 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery780::query = fromjson("{\"b\":314159265019}");    BSONObj GeneratedQuery780::projection = fromjson("{\"b\":1}");
struct GeneratedQuery781 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery781::query = fromjson("{\"$or\":[{b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}]}");
struct GeneratedQuery782 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery782::query = fromjson("{\"$or\":[{\"arrayField\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]}");    BSONObj GeneratedQuery782::projection = fromjson("{c:1}");
struct GeneratedQuery783 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery783::query = fromjson("{\"$or\":[{\"d\":314159265013}]}");
struct GeneratedQuery784 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery784::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery785 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery785::query = fromjson("{\"a._id\":314159265004}");    BSONObj GeneratedQuery785::projection = fromjson("{\"a\":1,b:1,b:{$slice:1}}");
struct GeneratedQuery786 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery786::query = fromjson("{\"$nor\":[{c:false},{c:{\"$regex\":\"/(a|bc)x+yz/\"}},{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}]}");
struct GeneratedQuery787 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery787::query = fromjson("{\"arrayField\":{\"$size\":314159295}}");    BSONObj GeneratedQuery787::projection = fromjson("{\"c\":1}");
struct GeneratedQuery788 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery788::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[-33.3,-89.9],[-25,90]]}}}}");
struct GeneratedQuery789 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery789::query = fromjson("{\"d\":{\"$type\":11}}");    BSONObj GeneratedQuery789::projection = fromjson("{_id:1}");
struct GeneratedQuery790 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery790::query = fromjson("{\"c\":true}");
struct GeneratedQuery791 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery791::query = fromjson("{\"arrayField\":314159265018}");
struct GeneratedQuery792 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery792::query = fromjson("{_id:{\"$regex\":\"c a t #looks for cats\",\"$options\":'m'}}");
struct GeneratedQuery793 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery793::query = fromjson("{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'m'}}");
struct GeneratedQuery794 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery794::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery795 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery795::query = fromjson("{\"b\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery796 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery796::query = fromjson("{\"arrayField\":1}");
struct GeneratedQuery797 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery797::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery798 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery798::query = fromjson("{a:{\"$mod\":[314159235,2147483647]}}");
struct GeneratedQuery799 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery799::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery800 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery800::query = fromjson("{\"a\":{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery801 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery801::query = fromjson("{\"arrayField\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery801::projection = fromjson("{a:{$slice:1}}");
struct GeneratedQuery802 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery802::query = fromjson("{\"arrayField\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}");
struct GeneratedQuery803 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery803::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery803::projection = fromjson("{\"b\":1}");
struct GeneratedQuery804 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery804::query = fromjson("{_id:314159265003}");    BSONObj GeneratedQuery804::projection = fromjson("{\"a\":{$slice:10},\"d\":{$slice:2}}");
struct GeneratedQuery805 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery805::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery806 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery806::query = fromjson("{\"arrayField\":{\"$mod\":[314159295,314159225]}}");    BSONObj GeneratedQuery806::projection = fromjson("{\"c\":1,\"b\":1}");
struct GeneratedQuery807 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery807::query = fromjson("{\"c\":{\"$exists\":true}}");
struct GeneratedQuery808 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery808::query = fromjson("{\"arrayField\":{\"$size\":NumberInt(0)}}");    BSONObj GeneratedQuery808::projection = fromjson("{d:1}");
struct GeneratedQuery809 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery809::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery810 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery810::query = fromjson("{\"arrayField\":{\"$gte\":1}}");
struct GeneratedQuery811 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery811::query = fromjson("{\"a\":{\"$elemMatch\":{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}}}");
struct GeneratedQuery812 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery812::query = fromjson("{\"b\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery812::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery813 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery813::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery813::projection = fromjson("{d:{$elemMatch:{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"arrayField\":{\"$elemMatch\":{d:{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"b\":{\"locHaystack\":{ 'lng': 179.9, 'lat': -33.3}}}]}],\"d\":''},314159265003,[[0,{\"arrayField\":['You can do anything, but not everything.',0.0],\"arrayField\":['','You must be the change you wish to see in the world. anything',{},{\"arrayField\":[null,314159265014],\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90]}},{\"$date\": \"2013-09-29T19:00:00.000-0500\"},'You can do anything, but not everything.',314159265005]}],\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]},\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0]}}]]]},\"d\":314159265000,\"arrayField.a\":{\"$nin\":[0]},\"_id\":'Usted puede hacer cualquier cosa, pero no todo.'}},\"arrayField.b\":{\"$elemMatch\":{\"b\":{\"$regex\":\"/(a|bc)x+yz/\"},\"arrayField\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"},\"c\":{\"$not\":{\"$gt\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}}}},\"loc\":{\"$geoWithin\":{\"$box\":[[0,0.0],[-33.3,-89.9]],\"$uniqueDocs\":1}}}}}");
struct GeneratedQuery814 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery814::query = fromjson("{_id:{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery815 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery815::query = fromjson("{\"_id\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery815::projection = fromjson("{\"a\":1}");
struct GeneratedQuery816 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery816::query = fromjson("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");
struct GeneratedQuery817 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery817::query = fromjson("{\"arrayField\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery818 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery818::query = fromjson("{\"arrayField.a\":{\"$size\":NumberLong(314159265358979393)}}");
struct GeneratedQuery819 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery819::query = fromjson("{\"c\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery820 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery820::query = fromjson("{\"a\":{\"$not\":{\"$elemMatch\":{\"arrayField\":0}}}}");
struct GeneratedQuery821 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery821::query = fromjson("{\"arrayField\":null}");
struct GeneratedQuery822 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery822::query = fromjson("{\"arrayField.d\":{\"$elemMatch\":{\"arrayField\":{\"$not\":{\"$mod\":[2147483647,0]}}}}}");
struct GeneratedQuery823 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery823::query = fromjson("{\"b\":314159265000}");    BSONObj GeneratedQuery823::projection = fromjson("{\"b\":1}");
struct GeneratedQuery824 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery824::query = fromjson("{b:{\"$lt\":314159265002}}");
struct GeneratedQuery825 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery825::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery826 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery826::query = fromjson("{\"\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery826::projection = fromjson("{b:{$slice:1}}");
struct GeneratedQuery827 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery827::query = fromjson("{a:{\"$regex\":\"/(a)|(b)/\"}}");    BSONObj GeneratedQuery827::projection = fromjson("{a:1,_id:1}");
struct GeneratedQuery828 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery828::query = fromjson("{\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery829 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery829::query = fromjson("{\"b\":314159265001}");
struct GeneratedQuery830 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery830::query = fromjson("{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery831 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery831::query = fromjson("{\"arrayField\":314159265019}");    BSONObj GeneratedQuery831::projection = fromjson("{b:1}");
struct GeneratedQuery832 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery832::query = fromjson("{\"$or\":[{\"arrayField.a\":{\"$all\":['You can do anything, but not everything.',0.0]}},{\"d\":{\"$lt\":314159265018}}]}");
struct GeneratedQuery833 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery833::query = fromjson("{\"$nor\":[{a:'Echa de menos el 100 por ciento de los tiros que nunca toma.'},{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},{_id:314159265012},{\"b\":{\"$type\":13}},{\"a\":null}]}");
struct GeneratedQuery834 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery834::query = fromjson("{\"_id\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}");    BSONObj GeneratedQuery834::projection = fromjson("{\"c\":1,\"a\":1}");
struct GeneratedQuery835 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery835::query = fromjson("{a:{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery836 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery836::query = fromjson("{\"d\":{\"$size\":NumberLong(-314159265358979323),\"$exists\":'You miss 100 percent of the shots you never take. anything'}}");    BSONObj GeneratedQuery836::projection = fromjson("{\"a\":{$slice:2},a:1,\"a\":1,\"d\":1,_id:{$elemMatch:{b:{\"$all\":[{\"locLegacy\":[180.0,-33.3]}]},\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}},\"d\":1}");
struct GeneratedQuery837 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery837::query = fromjson("{\"c\":'You can do anything, but not everything.'}");
struct GeneratedQuery838 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery838::query = fromjson("{\"a\":{\"$not\":{\"$size\":NumberLong(314159265358979303)}}}");
struct GeneratedQuery839 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery839::query = fromjson("{\"$or\":[{\"arrayField\":false},{\"a\":{\"$mod\":[314159205,314159285]}}]}");    BSONObj GeneratedQuery839::projection = fromjson("{b:{$elemMatch:{\"arrayField\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}}}");
struct GeneratedQuery840 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery840::query = fromjson("{\"c\":{\"$elemMatch\":{\"$where\":'this.d != undefined'}}}");
struct GeneratedQuery841 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery841::query = fromjson("{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery842 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery842::query = fromjson("{c:0}");
struct GeneratedQuery843 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery843::query = fromjson("{\"$nor\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");
struct GeneratedQuery844 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery844::query = fromjson("{\"_id._id\":{\"$elemMatch\":{\"arrayField\":''}}}");    BSONObj GeneratedQuery844::projection = fromjson("{\"arrayField.$\":1,c:1}");
struct GeneratedQuery845 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery845::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery846 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery846::query = fromjson("{\"a\":{\"$in\":['']}}");
struct GeneratedQuery847 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery847::query = fromjson("{c:{\"$exists\":1}}");
struct GeneratedQuery848 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery848::query = fromjson("{\"arrayField\":'Usted debe ser el cambio que deseas ver en el mundo.'}");
struct GeneratedQuery849 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery849::query = fromjson("{\"$and\":[{\"arrayField\":{\"$all\":['']}},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{d:0}]}");
struct GeneratedQuery850 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery850::query = fromjson("{\"arrayField.c\":{\"$elemMatch\":{\"c\":-314159265359}}}");
struct GeneratedQuery851 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery851::query = fromjson("{\"arrayField\":null}");    BSONObj GeneratedQuery851::projection = fromjson("{\"c\":1}");
struct GeneratedQuery852 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery852::query = fromjson("{\"$or\":[{\"arrayField\":{\"$elemMatch\":{\"b\":null,\"arrayField\":314159265015}}}]}");
struct GeneratedQuery853 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery853::query = fromjson("{\"d\":true}");    BSONObj GeneratedQuery853::projection = fromjson("{b:1}");
struct GeneratedQuery854 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery854::query = fromjson("{\"b\":{\"$all\":['']}}");    BSONObj GeneratedQuery854::projection = fromjson("{c:1,\"a\":1,\"_id\":1}");
struct GeneratedQuery855 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery855::query = fromjson("{\"$and\":[{\"a\":1}]}");
struct GeneratedQuery856 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery856::query = fromjson("{\"\":'You can do anything, but not everything.'}");
struct GeneratedQuery857 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery857::query = fromjson("{\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");
struct GeneratedQuery858 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery858::query = fromjson("{\"_id\":-3.14159265000}");
struct GeneratedQuery859 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery859::query = fromjson("{\"d\":{\"$not\":{\"$not\":{\"$size\":314159285}}}}");
struct GeneratedQuery860 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery860::query = fromjson("{\"b\":314159265005}");    BSONObj GeneratedQuery860::projection = fromjson("{a:1}");
struct GeneratedQuery861 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery861::query = fromjson("{\"d\":314159265015}");    BSONObj GeneratedQuery861::projection = fromjson("{\"a\":1}");
struct GeneratedQuery862 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery862::query = fromjson("{\"$or\":[{\"b\":{\"$regex\":\"/^abc(\\d+)/\"}},{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]},\"$maxDistance\":314159265001}}},{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'imissi'}}]}");    BSONObj GeneratedQuery862::projection = fromjson("{\"_id\":1,\"\":1,\"c\":1,\"_id\":1}");
struct GeneratedQuery863 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery863::query = fromjson("{a:{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}");
struct GeneratedQuery864 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery864::query = fromjson("{\"a\":{\"$elemMatch\":{\"arrayField\":{\"$elemMatch\":{\"a\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"},\"arrayField\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}},\"a\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"},\"arrayField.b\":{\"$ne\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}}}}");
struct GeneratedQuery865 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery865::query = fromjson("{\"_id\":314159265009}");
struct GeneratedQuery866 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery866::query = fromjson("{c:{\"$exists\":1}}");
struct GeneratedQuery867 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery867::query = fromjson("{\"$or\":[{\"d\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}]}");
struct GeneratedQuery868 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery868::query = fromjson("{\"$or\":[{\"d\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}]}");
struct GeneratedQuery869 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery869::query = fromjson("{\"c\":2225073858072009000.99}");
struct GeneratedQuery870 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery870::query = fromjson("{\"b\":314159265018}");    BSONObj GeneratedQuery870::projection = fromjson("{\"a\":1,\"c\":1}");
struct GeneratedQuery871 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery871::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery871::projection = fromjson("{\"c\":1}");
struct GeneratedQuery872 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery872::query = fromjson("{\"arrayField\":{\"$type\":2}}");
struct GeneratedQuery873 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery873::query = fromjson("{\"b\":{\"$not\":{\"$type\":-1}}}");
struct GeneratedQuery874 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery874::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery875 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery875::query = fromjson("{\"a\":''}");    BSONObj GeneratedQuery875::projection = fromjson("{\"c\":1}");
struct GeneratedQuery876 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery876::query = fromjson("{\"$nor\":[{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}},{a:314159265016}]}");
struct GeneratedQuery877 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery877::query = fromjson("{\"b\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery878 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery878::query = fromjson("{\"b.d\":true}");
struct GeneratedQuery879 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery879::query = fromjson("{\"$nor\":[{\"a\":{\"$all\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]}},[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]}},{\"arrayField\":[{\"$date\": \"2013-09-29T19:00:00.000-0500\"},{\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}],\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}}]]}},{\"arrayField.d\":{\"$size\":314159215}}]}");
struct GeneratedQuery880 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery880::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"},\"arrayField\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}}}");
struct GeneratedQuery881 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery881::query = fromjson("{\"d\":'You miss 100 percent of the shots you never take. anything'}");
struct GeneratedQuery882 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery882::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery883 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery883::query = fromjson("{\"$nor\":[{\"c\":{\"b\":'You can do anything, but not everything.'}}]}");
struct GeneratedQuery884 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery884::query = fromjson("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]}}}}");    BSONObj GeneratedQuery884::projection = fromjson("{\"b\":1,\"a\":1}");
struct GeneratedQuery885 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery885::query = fromjson("{\"d\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery886 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery886::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"c\":{\"$mod\":[314159255,314159295],\"$type\":17},a:{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}}}");
struct GeneratedQuery887 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery887::query = fromjson("{\"c\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");    BSONObj GeneratedQuery887::projection = fromjson("{\"b\":1}");
struct GeneratedQuery888 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery888::query = fromjson("{a:true}");
struct GeneratedQuery889 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery889::query = fromjson("{\"arrayField\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");
struct GeneratedQuery890 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery890::query = fromjson("{d:{\"arrayField\":[{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}]}}");
struct GeneratedQuery891 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery891::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }',\"$where\":'(this.a || this.b || this.c || this.d) > 10',\"b\":'You miss 100 percent of the shots you never take. anything'}");
struct GeneratedQuery892 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery892::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery892::projection = fromjson("{\"a\":1}");
struct GeneratedQuery893 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery893::query = fromjson("{\"arrayField._id\":{\"$all\":[null,{}]}}");
struct GeneratedQuery894 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery894::query = fromjson("{\"arrayField\":{\"$elemMatch\":{a:{\"c\":0.0}}}}");
struct GeneratedQuery895 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery895::query = fromjson("{\"_id\":'You can do anything, but not everything.'}");
struct GeneratedQuery896 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery896::query = fromjson("{\"_id\":{\"$size\":314159275}}");    BSONObj GeneratedQuery896::projection = fromjson("{\"arrayField.$\":1,\"b\":{$slice:1}}");
struct GeneratedQuery897 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery897::query = fromjson("{\"$nor\":[{\"a\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}");    BSONObj GeneratedQuery897::projection = fromjson("{b:1}");
struct GeneratedQuery898 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery898::query = fromjson("{\"$nor\":[{b:314159265019},{\"c\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}]}");
struct GeneratedQuery899 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery899::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180,33.3]}}}}");
struct GeneratedQuery900 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery900::query = fromjson("{b:{\"$nin\":[{\"$date\": \"2000-01-01T01:00:00.000-0500\"}]}}");
struct GeneratedQuery901 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery901::query = fromjson("{\"$and\":[{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [180,90],[180,0],[0,0],[180,90] ]]}}}}]}");
struct GeneratedQuery902 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery902::query = fromjson("{\"$or\":[{\"arrayField\":0}]}");    BSONObj GeneratedQuery902::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery903 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery903::query = fromjson("{\"$or\":[{\"a\":{\"$mod\":[314159215,0]}},{\"arrayField.a\":{\"$size\":NumberInt(-314159265)}},{c:314159265006},{\"b\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}},{\"arrayField\":true}]}");    BSONObj GeneratedQuery903::projection = fromjson("{\"b\":1}");
struct GeneratedQuery904 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery904::query = fromjson("{\"b\":{\"$mod\":[2147483647,314159215]}}");
struct GeneratedQuery905 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery905::query = fromjson("{\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery905::projection = fromjson("{\"a\":1,c:1,d:1}");
struct GeneratedQuery906 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery906::query = fromjson("{d:{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery907 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery907::query = fromjson("{b:{\"$not\":{\"$mod\":[314159295,2147483647]}}}");
struct GeneratedQuery908 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery908::query = fromjson("{\"b\":1}");
struct GeneratedQuery909 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery909::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }',\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'mi'},\"a\":{\"$mod\":[314159235,314159215]}}");
struct GeneratedQuery910 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery910::query = fromjson("{\"arrayField\":{\"$size\":NumberInt(314159295)}}");    BSONObj GeneratedQuery910::projection = fromjson("{_id:1,\"\":1}");
struct GeneratedQuery911 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery911::query = fromjson("{\"c\":true}");
struct GeneratedQuery912 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery912::query = fromjson("{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");    BSONObj GeneratedQuery912::projection = fromjson("{\"d\":1}");
struct GeneratedQuery913 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery913::query = fromjson("{\"d\":[false,1,{\"$date\": \"2000-01-01T01:00:00.000-0500\"},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"arrayField\":[{\"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}}]},{\"arrayField\":[[{\"a\":{\"b\":{\"a\":{\"b\":''}}}}]]}]}");    BSONObj GeneratedQuery913::projection = fromjson("{\"b\":1}");
struct GeneratedQuery914 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery914::query = fromjson("{d:314159265004}");    BSONObj GeneratedQuery914::projection = fromjson("{_id:{$elemMatch:{_id:true}},\"c\":1,b:{$elemMatch:{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}}");
struct GeneratedQuery915 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery915::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery915::projection = fromjson("{\"a\":1}");
struct GeneratedQuery916 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery916::query = fromjson("{\"_id\":314159265015}");
struct GeneratedQuery917 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery917::query = fromjson("{\"arrayField\":314159265007}");
struct GeneratedQuery918 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery918::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery918::projection = fromjson("{b:{$slice:1}}");
struct GeneratedQuery919 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery919::query = fromjson("{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");
struct GeneratedQuery920 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery920::query = fromjson("{\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery920::projection = fromjson("{c:1,\"\":1,\"c\":1}");
struct GeneratedQuery921 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery921::query = fromjson("{b:{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");    BSONObj GeneratedQuery921::projection = fromjson("{\"b\":1,\"\":1,b:1}");
struct GeneratedQuery922 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery922::query = fromjson("{c:{\"$regex\":\"c a t #looks for cats\",\"$options\":'mm'}}");    BSONObj GeneratedQuery922::projection = fromjson("{\"b\":1}");
struct GeneratedQuery923 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery923::query = fromjson("{\"c\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery924 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery924::query = fromjson("{\"a\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery925 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery925::query = fromjson("{\"$or\":[{\"arrayField\":{\"$not\":{\"$not\":{\"$mod\":[314159235,314159295]}},\"$type\":15}}]}");
struct GeneratedQuery926 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery926::query = fromjson("{\"$or\":[{\"b\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}]}");
struct GeneratedQuery927 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery927::query = fromjson("{\"b\":{\"$regex\":\"/abc\\def/\"}}");
struct GeneratedQuery928 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery928::query = fromjson("{\"d\":314159265003}");
struct GeneratedQuery929 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery929::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery930 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery930::query = fromjson("{\"_id\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'sim'}}");
struct GeneratedQuery931 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery931::query = fromjson("{\"d\":{\"$lt\":null,\"$exists\":false}}");
struct GeneratedQuery932 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery932::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery933 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery933::query = fromjson("{\"$nor\":[{\"\":null},{\"d\":true}]}");    BSONObj GeneratedQuery933::projection = fromjson("{\"c\":1}");
struct GeneratedQuery934 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery934::query = fromjson("{\"arrayField.a\":{\"$gt\":['You can do anything, but not everything.']}}");    BSONObj GeneratedQuery934::projection = fromjson("{\"arrayField.$\":1,\"b\":1}");
struct GeneratedQuery935 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery935::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery936 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery936::query = fromjson("{\"arrayField\":{\"$exists\":false}}");
struct GeneratedQuery937 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery937::query = fromjson("{\"b\":314159265003}");    BSONObj GeneratedQuery937::projection = fromjson("{d:1}");
struct GeneratedQuery938 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery938::query = fromjson("{b:true}");
struct GeneratedQuery939 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery939::query = fromjson("{\"c\":314159265010}");
struct GeneratedQuery940 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery940::query = fromjson("{\"arrayField\":''}");
struct GeneratedQuery941 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery941::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery942 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery942::query = fromjson("{\"arrayField\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}");    BSONObj GeneratedQuery942::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery943 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery943::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery943::projection = fromjson("{\"d\":1}");
struct GeneratedQuery944 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery944::query = fromjson("{b:{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery945 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery945::query = fromjson("{\"arrayField\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}");    BSONObj GeneratedQuery945::projection = fromjson("{\"a\":1}");
struct GeneratedQuery946 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery946::query = fromjson("{\"arrayField._id\":{\"$size\":NumberLong(314159265358979393)}}");
struct GeneratedQuery947 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery947::query = fromjson("{\"arrayField._id\":{\"$exists\":0}}");
struct GeneratedQuery948 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery948::query = fromjson("{d:{\"$elemMatch\":{c:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'m'},\"c\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"},\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[2,2], [1,4], [2,20],[-1,9], [-2,5], [-3,6], [-4,2],[-2,-2], [-1,-9],[3,-30], [2,-8], [1,-1],[0,0]]]}}},\"$where\":'function myFunction() { var x = 1 + 2; }',\"a\":1}}}");    BSONObj GeneratedQuery948::projection = fromjson("{\"b\":1}");
struct GeneratedQuery949 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery949::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[3,1], [3,2], [2,7],[-1,2], [-2,6], [-3,1],[-7,-2], [-5,-5], [-1,-19],[2,-8], [2,-5],[0,0]]]}}}}");    BSONObj GeneratedQuery949::projection = fromjson("{\"a\":{$slice:0}}");
struct GeneratedQuery950 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery950::query = fromjson("{\"$or\":[{b:''}]}");
struct GeneratedQuery951 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery951::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery952 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery952::query = fromjson("{\"c\":1}");    BSONObj GeneratedQuery952::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery953 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery953::query = fromjson("{a:{\"$type\":5}}");
struct GeneratedQuery954 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery954::query = fromjson("{\"d\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery955 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery955::query = fromjson("{\"$nor\":[{a:{\"$regex\":\"/cat/\"}},{\"arrayField\":false},{\"_id\":3.14159265359},{\"arrayField\":'You can do anything, but not everything.'}]}");    BSONObj GeneratedQuery955::projection = fromjson("{\"\":1}");
struct GeneratedQuery956 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery956::query = fromjson("{\"c\":{\"$mod\":[314159295,314159275]}}");    BSONObj GeneratedQuery956::projection = fromjson("{\"\":1}");
struct GeneratedQuery957 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery957::query = fromjson("{d:{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery957::projection = fromjson("{\"c\":1,\"c\":1}");
struct GeneratedQuery958 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery958::query = fromjson("{\"\":{\"$regex\":\"/^abc(\\d+)/\"}}");    BSONObj GeneratedQuery958::projection = fromjson("{\"a\":1,\"_id\":1}");
struct GeneratedQuery959 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery959::query = fromjson("{\"d\":1}");
struct GeneratedQuery960 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery960::query = fromjson("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}]}");
struct GeneratedQuery961 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery961::query = fromjson("{\"$or\":[{_id:{\"$not\":{\"$all\":[{\"_id\":{\"locHaystack\":{ 'lng': 0.0, 'lat': 90.0}}}]}}},{\"a\":{\"$mod\":[314159225,314159215],\"$elemMatch\":{\"arrayField.c\":{\"$not\":{\"$all\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]}}]}},\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]}}},\"\":''},\"$gte\":''}},{\"arrayField\":null}]}");
struct GeneratedQuery962 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery962::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$type\":1}},{\"arrayField\":''}]}");    BSONObj GeneratedQuery962::projection = fromjson("{b:1}");
struct GeneratedQuery963 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery963::query = fromjson("{\"arrayField.a\":{\"$not\":{\"$mod\":[314159225,314159215]}}}");    BSONObj GeneratedQuery963::projection = fromjson("{\"d\":1}");
struct GeneratedQuery964 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery964::query = fromjson("{\"\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}");
struct GeneratedQuery965 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery965::query = fromjson("{a:{\"$not\":{\"$mod\":[314159255,314159225]},\"$nin\":[false],\"$lte\":314159265011}}");    BSONObj GeneratedQuery965::projection = fromjson("{\"c\":1}");
struct GeneratedQuery966 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery966::query = fromjson("{\"a\":{\"$mod\":[314159275,314159275]}}");    BSONObj GeneratedQuery966::projection = fromjson("{c:1}");
struct GeneratedQuery967 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery967::query = fromjson("{a:{\"$mod\":[314159225,0],\"$not\":{\"$not\":{\"$not\":{\"$exists\":1}}},\"$not\":{\"$not\":{\"$elemMatch\":{\"arrayField.c.d\":{\"$mod\":[314159225,314159205]},\"b\":{\"$nin\":['',314159265015,1,false,314159265008,3.14159265359],\"$nin\":['You can do anything, but not everything.']}}}},\"$type\":3}}");
struct GeneratedQuery968 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery968::query = fromjson("{\"$or\":[{\"arrayField\":'You can do anything, but not everything.'},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"_id\":314159265017},{\"arrayField\":null}]}");
struct GeneratedQuery969 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery969::query = fromjson("{\"c\":{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery970 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery970::query = fromjson("{\"arrayField\":314159265007}");
struct GeneratedQuery971 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery971::query = fromjson("{\"c.a\":1797693134862315799999}");
struct GeneratedQuery972 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery972::query = fromjson("{\"c\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery973 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery973::query = fromjson("{\"$nor\":[{\"b\":{\"$lte\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}}]}");
struct GeneratedQuery974 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery974::query = fromjson("{\"d\":true}");    BSONObj GeneratedQuery974::projection = fromjson("{\"c.d\":1}");
struct GeneratedQuery975 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery975::query = fromjson("{a:0}");
struct GeneratedQuery976 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery976::query = fromjson("{\"arrayField\":{\"$date\": \"2008-02-29T12:01:00.000-0500\"}}");
struct GeneratedQuery977 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery977::query = fromjson("{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery978 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery978::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery978::projection = fromjson("{c:1}");
struct GeneratedQuery979 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery979::query = fromjson("{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery980 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery980::query = fromjson("{\"d\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90]}},true,null],314159265009]}");
struct GeneratedQuery981 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery981::query = fromjson("{c:{\"$type\":-1}}");
struct GeneratedQuery982 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery982::query = fromjson("{\"b\":{\"$type\":17}}");    BSONObj GeneratedQuery982::projection = fromjson("{\"c\":1}");
struct GeneratedQuery983 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery983::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery984 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery984::query = fromjson("{\"a\":{\"$date\": \"2013-09-29T19:00:00.000-0500\"}}");
struct GeneratedQuery985 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery985::query = fromjson("{\"d\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery985::projection = fromjson("{\"\":1}");
struct GeneratedQuery986 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery986::query = fromjson("{\"$or\":[{\"b\":{\"$size\":314159265}}]}");
struct GeneratedQuery987 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery987::query = fromjson("{\"b\":1}");
struct GeneratedQuery988 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery988::query = fromjson("{\"arrayField\":null}");
struct GeneratedQuery989 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery989::query = fromjson("{\"a\":{\"$lt\":null}}");
struct GeneratedQuery990 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery990::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180,90]}}}}");
struct GeneratedQuery991 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery991::query = fromjson("{\"arrayField\":{\"$date\": \"2000-01-01T01:00:00.000-0500\"}}");
struct GeneratedQuery992 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery992::query = fromjson("{\"a.d\":{\"$regex\":\"/caseless/i\"}}");    BSONObj GeneratedQuery992::projection = fromjson("{\"_id\":1,\"b\":1}");
struct GeneratedQuery993 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery993::query = fromjson("{\"arrayField\":{\"$all\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}}");    BSONObj GeneratedQuery993::projection = fromjson("{\"_id\":{$elemMatch:{\"a\":314159265013,\"a\":''}}}");
struct GeneratedQuery994 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery994::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery995 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery995::query = fromjson("{c:{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery996 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery996::query = fromjson("{\"_id\":{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery997 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery997::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery998 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery998::query = fromjson("{\"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}");    BSONObj GeneratedQuery998::projection = fromjson("{\"a\":1,\"d\":{$elemMatch:{\"b\":{\"$date\": \"9999-12-31T23:59:59.000-0500\"}}}}");
struct GeneratedQuery999 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery999::query = fromjson("{\"$or\":[{\"b\":{\"$mod\":[314159215,314159265]}}]}");    BSONObj GeneratedQuery999::projection = fromjson("{\"a.a\":1}");
struct GeneratedQuery1000 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery1000::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");    BSONObj GeneratedQuery1000::projection = fromjson("{b:1}");


    class All : public Suite {
    public:
        All() : Suite( "GeneratedQueries" ) { }
        void setupTests() {
            add< InsertDocuments >();   // must be run before the generated queries
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();
        }
    } myall;

}
