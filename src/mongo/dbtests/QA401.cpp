/** @file boiler_direct_test.cpp
*/

/**
 *    Copyright (C) 2008 10gen Inc.
 *
 *    This program is free software: you can redistribute it and/or  modify
 *    it under the terms of the GNU Affero General Public License, version 3,
 *    as published by the Free Software Foundation.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the GNU Affero General Public License in all respects
 *    for all of the code used other than as permitted herein. If you modify
 *    file(s) with this exception, you may extend this exception to your
 *    version of the file(s), but you are not obligated to do so. If you do not
 *    wish to do so, delete this exception statement from your version. If you
 *    delete this exception statement from all source files in the program,
 *    then also delete it in the license file.
 */

#include "mongo/pch.h"

#include "mongo/db/db.h"
#include "mongo/db/instance.h"
#include "mongo/db/json.h"
#include "mongo/db/lasterror.h"
#include "mongo/dbtests/dbtests.h"
#include "mongo/unittest/scoped_probe.h"

// NOTE: The queries within this file are automatically generated from the NLTK grammer
//       defined in QA-352.  Changes to the infrastructure should be made in the boiler
//       plate code; otherwise they may be overwritten.
namespace GeneratedTests {

    static const std::string& kNameSpace = "qry.QA401";

    // helper
    std::string getNextId() {
        static int id = 0;
        stringstream s;
        s << id++;
        return s.str();
    }

    // Base client helper
    struct ClientBase {
        ClientBase() { mongo::lastError.reset(new LastError()); }
        virtual ~ClientBase() { }

    protected:
        static bool error() {
            return !_client.getPrevError().getField( "err" ).isNull();
        }
        static DBDirectClient _client;
    };
    DBDirectClient ClientBase::_client;

    // Runner for generated queries
    template <typename Q>
    struct GeneratedQueryRunner : ClientBase {
        virtual void run(){
            ::mongo::unittest::ScopedProbe::lastQuery = Q::getQuery();
            ::mongo::unittest::ScopedProbe::lastLimit = Q::nToLimit();
            ::mongo::unittest::ScopedProbe::lastSkip = Q::nToSkip();
            ::mongo::unittest::ScopedProbe::lastProjection = Q::getProjection();
            ::mongo::unittest::ScopedProbe::lastCount = -1;
            auto_ptr<DBClientCursor> cursor = _client.query(kNameSpace,
                                                            Q::getQuery(),
                                                            Q::nToLimit(),
                                                            Q::nToSkip(),
                                                            Q::getProjection());
            ASSERT(!error());
            int count = 0;
            while (cursor->more()) {
                ++count;
                cursor->next();
            }
            ::mongo::unittest::ScopedProbe::lastCount = count;
        }
    };

    struct AscendingIdx : ClientBase {
        virtual void run() {
            _client.ensureIndex(kNameSpace, BSON("a" << 1));
            _client.ensureIndex(kNameSpace, BSON("a.a" << 1));
            _client.ensureIndex(kNameSpace, BSON("a.a.a" << 1));
            ::mongo::unittest::ScopedProbe::lastIdx = "Ascending";
        }
    };

    struct DescendingIdx : ClientBase {
        virtual void run() {
            _client.ensureIndex(kNameSpace, BSON("a" << -1));
            _client.ensureIndex(kNameSpace, BSON("a.a" << -1));
            _client.ensureIndex(kNameSpace, BSON("a.a.a" << -1));
            ::mongo::unittest::ScopedProbe::lastIdx = "Descending";
        }
    };

    struct Compound1Idx : ClientBase {
        virtual void run() {
            _client.ensureIndex(kNameSpace, BSON("a" << 1 << "b" << 1));
            _client.ensureIndex(kNameSpace, BSON("c" << 1 << "d" << 1));
            _client.ensureIndex(kNameSpace, BSON("d" << 1 << "e" << 1));
            ::mongo::unittest::ScopedProbe::lastIdx = "Compound1";
        }
    };
            
    struct Compound2Idx : ClientBase {
        virtual void run() {
            _client.ensureIndex(kNameSpace, BSON("a" << 1 << "b" << 1));
            _client.ensureIndex(kNameSpace, BSON("a.a" << 1 << "a.b" << 1 << "a.c" << 1));
            _client.ensureIndex(kNameSpace, BSON("a" << 1 << "loc" << 1));
            _client.ensureIndex(kNameSpace, BSON("a" << 1 << "locLegacy" << 1));
            ::mongo::unittest::ScopedProbe::lastIdx = "Compound2";
        }
    };
            
    struct HashIdx : ClientBase {
        virtual void run() {
            _client.ensureIndex(kNameSpace, BSON("a" << "hashed"));
            _client.ensureIndex(kNameSpace, BSON("b" << "hashed"));
            _client.ensureIndex(kNameSpace, BSON("c" << "hashed"));
            ::mongo::unittest::ScopedProbe::lastIdx = "Hash";
        }
    };

    struct GeoIdx : ClientBase {
        virtual void run() {
            _client.ensureIndex(kNameSpace, BSON("loc" << "2dsphere"));
            _client.ensureIndex(kNameSpace, BSON("locHaystack" << "geoHaystack"));
            _client.ensureIndex(kNameSpace, BSON("locLegacy" << "2d"));
            ::mongo::unittest::ScopedProbe::lastIdx = "Geo";
        }
    };

    struct TextIdx : ClientBase {
        virtual void run() {
            _client.ensureIndex(kNameSpace, BSON("a" << "text"));
            _client.ensureIndex(kNameSpace, BSON("b" << "text"));
            _client.ensureIndex(kNameSpace, BSON("c" << "text"));
            _client.ensureIndex(kNameSpace, BSON("d" << "text"));
            ::mongo::unittest::ScopedProbe::lastIdx = "Text";
        }
    };

    // Dataset used by generated queries
    struct InsertDocuments : ClientBase {
        virtual void run() {
            _client.dropCollection(kNameSpace);
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"arrayField\":[{\"arrayField\":['']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}],\"c\":{\"_id\":'I quit therapy because my analyst was trying to help me behind my back. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -25, 'lat': -33.3}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null,\"d\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":{ 'lng': 0, 'lat': 0}}]],\"arrayField\":[null,{\"_id\":{\"$date\": 1391633433037}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":0.0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":314159265011}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['',{\"arrayField\":[{\"locHaystack\":{ 'lng': 0.0, 'lat': -33.3}}]},314159265013,'The richest man is not he who has the most, but he who needs the least. anything',['You can do anything, but not everything.'],[{\"$date\": -111100000},314159265001,{\"c\":'You can do anything, but not everything.'},null,{\"locHaystack\":[179.9,0]}],{\"arrayField\":[],\"locHaystack\":{ 'lng': 180.0, 'lat': -90}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[314159265013,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']},null,{},{\"c\":'You must be the change you wish to see in the world. anything',\"arrayField\":[{\"b\":0.00002225073858072014},{\"b\":{\"arrayField\":[{\"$date\": 1500000},{\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90.0]},\"arrayField\":['']}}]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265002}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]}},null,null]},'You must be the change you wish to see in the world. anything',{\"$date\": 1202331498200}],\"c\":314159265009}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"d\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90.0]},\"locHaystack\":[180,-25]},{\"arrayField\":[null,{\"$date\": -111100000},{\"$date\": 1202331498200}]},'',{\"locLegacy\":[179.9,-89.9]},[{\"$date\": 1391633433037}],null,{\"$date\": 1500000},'','',{\"b\":'The richest man is not he who has the most, but he who needs the least. anything',\"arrayField\":[null,null]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265017,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,25]}},314159265019],\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[33.3,-90],\"a\":{\"arrayField\":[]},\"arrayField\":['You can do anything, but not everything.','You must be the change you wish to see in the world. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}},[1,'Usted debe ser el cambio que deseas ver en el mundo.']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"locHaystack\":{ 'lng': -180.0, 'lat': -25},\"b\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}},null]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":['',{\"d\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null,null,'You can do anything, but not everything.']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":{\"a\":{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',0,{\"locLegacy\":[-33.3,-90]},true]}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,33.3],\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"arrayField\":[{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,0],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'',\"b\":{\"locHaystack\":[-25,-89.9],\"loc\":{\"type\":\"Point\",\"coordinates\":[180,90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,{\"c\":0,\"arrayField\":[''],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,89.9]},\"arrayField\":[true,314159265015,{\"arrayField\":[null,'']},{\"arrayField\":[{\"b\":{\"arrayField\":[false]}}],\"locLegacy\":[0.0,-33.3]},{\"arrayField\":[314159265016]},['','']]},{\"arrayField\":['']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'You miss 100 percent of the shots you never take. anything'},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',[{\"d\":{\"locLegacy\":[-33.3,90.0]}},{\"$date\": -111100000}],false,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"locHaystack\":[0,0.0]},[{\"$date\": 1202331498200},null,'']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[[{\"locHaystack\":{ 'lng': 179.9, 'lat': 90}},null,false],{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything']}]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'},[[{\"locLegacy\":[180.0,33.3]},{\"b\":{\"arrayField\":[{\"d\":{\"arrayField\":[[-314159265359]],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}}],\"c\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-25]}}],\"arrayField\":[[['',{\"locLegacy\":[33.3,25]}],[{\"arrayField\":[{\"arrayField\":[{\"locHaystack\":[-25,90.0]}],\"locHaystack\":[25,90.0]},'']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,33.3]}}],[null,'Echa de menos el 100 por ciento de los tiros que nunca toma.','You can do anything, but not everything.']]],\"a\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}}},{\"arrayField\":[{\"locHaystack\":{ 'lng': -25, 'lat': 33.3}}]}],''],[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]},\"arrayField\":['','You can do anything, but not everything.'],\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"c\":'You miss 100 percent of the shots you never take. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]}}]}],\"arrayField\":[{\"b\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}},{\"$date\": 1500000}]},{\"$date\": 1202331498200},'']},{\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,0.0],\"b\":{\"arrayField\":[[null,'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']],\"arrayField\":['',{\"c\":{\"arrayField\":[[{\"c\":true,\"arrayField\":[{\"locHaystack\":[0,89.9]},null,[{\"d\":{\"d\":0.0}}]]},{\"arrayField\":[{\"arrayField\":[{\"locHaystack\":{ 'lng': 180, 'lat': 33.3},\"b\":{\"locHaystack\":[0,-25]},\"locLegacy\":[-25,90]}]}],\"arrayField\":['You can do anything, but not everything.',{\"$date\": 1500000}],\"b\":'You can do anything, but not everything.'},{\"d\":''}],'']},\"arrayField\":[['You can do anything, but not everything.','Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],'I quit therapy because my analyst was trying to help me behind my back. anything']},true,{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{}]},null],\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything']},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]},\"b\":null,\"arrayField\":[{},0,'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null,\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"b\":314159265001}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90]},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null],\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]}},\"b\":{\"locLegacy\":[180.0,25],\"b\":null,\"a\":''}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'',\"arrayField\":[{\"locLegacy\":[25,-89.9],\"c\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[25,0.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"d\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":['I quit therapy because my analyst was trying to help me behind my back. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[[false,{\"locHaystack\":{ 'lng': -25, 'lat': -89.9},\"d\":{\"arrayField\":['',true,{\"locLegacy\":[-25,89.9]}]}}],'You can do anything, but not everything.'],\"a\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',{},1,{}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"c\":{\"$date\": 1391633433037}}]},{\"d\":'',\"_id\":{\"a\":{\"locHaystack\":[0,90.0]}}}],\"locHaystack\":{ 'lng': 179.9, 'lat': 25},\"locHaystack\":[-180,-90.0],\"arrayField\":[null]}],\"locHaystack\":[-180,0.0]},{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,90],\"arrayField\":[null,{\"arrayField\":[314159265000]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-90.0],\"arrayField\":[314159265010],\"a\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"arrayField\":[{\"arrayField\":[{\"c\":[{\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]}}}]}]}],\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[{\"locLegacy\":[-179.9,90.0]},[314159265018,'']]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"d\":'Usted debe ser el cambio que deseas ver en el mundo.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1391633433037},\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[true,{\"$date\": 1391633433037}]},null,{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":1797693134862315799999}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything'],\"arrayField\":[{\"arrayField\":[314159265011],\"arrayField\":[{\"$date\": 1202331498200}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"b\":{\"$date\": -111100000},\"arrayField\":['']},\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null,{\"$date\": -111100000},null]}],\"_id\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null,\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90.0]},\"locHaystack\":[0.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,-90],\"arrayField\":[null],\"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]},\"arrayField\":[null,{\"arrayField\":[false,null,true]}]}]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":-314159265359}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[{\"locLegacy\":[-179.9,33.3]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":{ 'lng': 0.0, 'lat': -89.9}},\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"locHaystack\":[179.9,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -33.3, 'lat': -25}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null],{\"locLegacy\":[25,-25]}],\"arrayField\":[{\"locHaystack\":{ 'lng': 25, 'lat': 33.3},\"d\":{\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"locHaystack\":[-180.0,0],\"c\":-3.14159265359,\"c\":[-3.14159265359]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]},\"locHaystack\":[-179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"a\":314159265006,\"arrayField\":[314159265018],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}},\"b\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You miss 100 percent of the shots you never take. anything','The richest man is not he who has the most, but he who needs the least. anything',null,'The richest man is not he who has the most, but he who needs the least. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': -25},\"locHaystack\":[33.3,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]},\"locLegacy\":[0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.',\"arrayField\":[{\"locLegacy\":[0.0,-89.9]}],\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"d\":{\"arrayField\":[{\"arrayField\":[''],\"arrayField\":[false,{\"locHaystack\":{ 'lng': 25, 'lat': -33.3},\"_id\":''},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}}]},{\"$date\": -111100000},null,{\"locHaystack\":{ 'lng': 180.0, 'lat': 25}}]}},{\"b\":'',\"arrayField\":['You can do anything, but not everything.',{\"arrayField\":[314159265014],\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}]},{\"_id\":{\"b\":{\"$date\": -111100000}},\"arrayField\":[0]},false,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}},0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002,{\"locHaystack\":{ 'lng': 25, 'lat': -90}},[{\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}],'You can do anything, but not everything.',{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',0.00000000049406564841,'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1202331498200},{\"locHaystack\":[33.3,33.3]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0.0]},\"arrayField\":[{\"d\":314159265011,\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null,\"b\":{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"arrayField\":[''],\"b\":{\"a\":'The richest man is not he who has the most, but he who needs the least. anything'}},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"d\":true},'Usted debe ser el cambio que deseas ver en el mundo.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,-89.9],\"arrayField\":[{\"d\":''}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',314159265004,[false]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[[{\"arrayField\":[{\"d\":{\"c\":''}},{\"locHaystack\":{ 'lng': 180.0, 'lat': 90.0},\"locHaystack\":[-33.3,33.3],\"arrayField\":[''],\"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': 33.3}}]}]},2225073858072009000.99,{\"a\":{\"$date\": 1391633433037}},'You can do anything, but not everything.'],[null,'',{}]],{\"d\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['To the man who only has a hammer, everything he encounters begins to look like a nail. anything','',314159265019]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": -111100000},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}}],\"arrayField\":['You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[true]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[]},{\"b\":[314159265014,{},'Usted puede hacer cualquier cosa, pero no todo.'],\"a\":{\"b\":{\"$date\": 1500000}}},null,1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]},{\"arrayField\":['You can do anything, but not everything.']}],\"arrayField\":[{\"locHaystack\":[-25,0]},{\"$date\": -111100000},['']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"locHaystack\":[-179.9,0]},{\"a\":{\"locHaystack\":[-33.3,0.0]}},null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,25]},\"arrayField\":[{\"locHaystack\":[33.3,-89.9]},'You can do anything, but not everything.',{\"$date\": 1391633433037},'You must be the change you wish to see in the world. anything','',['']],\"arrayField\":[[{\"arrayField\":[{\"$date\": 1202331498200},{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',{\"b\":{\"$date\": 1391633433037}},{\"locHaystack\":{ 'lng': -180, 'lat': -33.3}}]},{\"$date\": 1500000}]},{\"$date\": -111100000}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null,['',{\"locHaystack\":[180,33.3]}]]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"a\":[null,{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]}},{\"arrayField\":[[1797693134862315799999,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0.0]},\"locHaystack\":{ 'lng': 33.3, 'lat': -25}},'You can do anything, but not everything.'],{\"arrayField\":[0.00002225073858072014]},null]},null,{\"arrayField\":[{\"arrayField\":[314159265003,{\"$date\": 1202331498200}]},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',null]},{\"a\":'The richest man is not he who has the most, but he who needs the least. anything'}]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0]},\"c\":{\"arrayField\":[{\"_id\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"arrayField\":[false]},{\"arrayField\":[{\"locHaystack\":{ 'lng': -33.3, 'lat': 0.0}}],\"locHaystack\":[-180,89.9]},{\"c\":{\"$date\": -111100000},\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]}}]}},\"arrayField\":[{\"$date\": -111100000}],\"arrayField\":[0,1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":-3.14159265359,\"arrayField\":['',{\"$date\": 1391633433037},[],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0.0]},\"locHaystack\":[33.3,90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":{\"arrayField\":[[[true,314159265002]],false,null]}},[{\"locHaystack\":[180.0,25],\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]},\"_id\":{\"arrayField\":[{\"$date\": -111100000}]},\"d\":-3.14159265359},0.00000000049406564841,{\"c\":''}]},{\"$date\": 1391633433037},''],{\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"arrayField\":[{\"b\":'You can do anything, but not everything.'}],\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',false,true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":'You must be the change you wish to see in the world. anything'},{\"c\":[[false],''],\"arrayField\":[{},{\"locLegacy\":[33.3,0.0],\"locHaystack\":{ 'lng': 180.0, 'lat': 33.3},\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'},'You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}},null,'You must be the change you wish to see in the world. anything']}],\"d\":0,\"b\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"locLegacy\":[179.9,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"b\":{\"locHaystack\":[179.9,25]},\"arrayField\":[{\"arrayField\":['',{\"arrayField\":[{\"$date\": -111100000},null,{}],\"a\":{\"locHaystack\":{ 'lng': -180, 'lat': 33.3}}},'You can do anything, but not everything.',314159265003,[{\"$date\": 1500000},null,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',true],'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']},false],\"_id\":false,\"b\":{\"b\":'You must be the change you wish to see in the world. anything',\"locHaystack\":[-180.0,-25]}},314159265016]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"_id\":'You can do anything, but not everything.'},\"locHaystack\":{ 'lng': -180.0, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'You can do anything, but not everything.'},{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-33.3]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}},314159265011,{\"_id\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[[''],{\"arrayField\":[[{\"arrayField\":[null],\"locHaystack\":{ 'lng': -25, 'lat': -90.0}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,25]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}}],[{\"arrayField\":[{\"b\":{\"$date\": 1500000}}]}]],\"_id\":{\"arrayField\":[]}},'']},'You can do anything, but not everything.'],\"arrayField\":[3.14159265359,'',{\"arrayField\":[{\"a\":{\"locHaystack\":[0,33.3]},\"locHaystack\":[25,25]}],\"arrayField\":[],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-25]},\"arrayField\":[{\"b\":'Usted puede hacer cualquier cosa, pero no todo.'},'You miss 100 percent of the shots you never take. anything',{\"c\":{\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]}}},{\"d\":{\"c\":false,\"d\":{\"arrayField\":[[{\"locHaystack\":[-25,25]},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.','Usted puede hacer cualquier cosa, pero no todo.',{\"a\":'You can do anything, but not everything.'}]]}},\"locLegacy\":[-180,-90.0]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,33.3]}},\"locHaystack\":[-180.0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]},\"arrayField\":[{\"arrayField\":[{\"arrayField\":[],\"a\":null},1],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}},{\"arrayField\":[['You can do anything, but not everything.']]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"b\":314159265011,\"d\":'You can do anything, but not everything.',\"locHaystack\":[180,-89.9]},{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}]},{\"locLegacy\":[25,-90.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"b\":'You can do anything, but not everything.',\"_id\":[]},\"d\":{\"c\":{\"$date\": 1202331498200}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.','Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"arrayField\":['',0],\"a\":'Usted puede hacer cualquier cosa, pero no todo.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":314159265002,\"_id\":[{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"arrayField\":[314159265007,'',{\"arrayField\":[{\"a\":314159265005,\"d\":314159265017},314159265017,null],\"locLegacy\":[179.9,90.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":['']},{\"arrayField\":[1,{\"_id\":['The richest man is not he who has the most, but he who needs the least. anything']}]},314159265009,'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":['You can do anything, but not everything.',{\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-25]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',null,false,{\"a\":''},[{\"$date\": 1500000},{\"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"arrayField\":[{\"d\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}]},{\"$date\": -111100000}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"b\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"locHaystack\":[-180,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":{ 'lng': -179.9, 'lat': 0},\"arrayField\":[{\"arrayField\":[{\"d\":[{\"$date\": 1500000}]},1,314159265011,null]},{\"$date\": 1500000}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":[33.3,-90.0],\"d\":'Usted puede hacer cualquier cosa, pero no todo.',\"_id\":314159265001}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[33.3,25]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":''},0,314159265008,'You can do anything, but not everything.',{\"arrayField\":[{}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]},\"locHaystack\":{ 'lng': -25, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265007]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[-3.14159265359],\"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265005],\"a\":[314159265018,'Echa de menos el 100 por ciento de los tiros que nunca toma.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[0.0,1797693134862315799999]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"arrayField\":['You miss 100 percent of the shots you never take. anything'],\"_id\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":false,\"locLegacy\":[-179.9,-90],\"locHaystack\":[179.9,-90],\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',[{\"arrayField\":[314159265007]},{},'',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]},\"arrayField\":[{\"arrayField\":[]},314159265010],\"arrayField\":[{\"_id\":{\"arrayField\":[{\"c\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}},{\"b\":'You can do anything, but not everything.'}]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-89.9],\"arrayField\":[null,{\"$date\": 1391633433037},{\"arrayField\":[{\"arrayField\":[{\"$date\": 1202331498200}]}],\"locHaystack\":[179.9,-33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":'You can do anything, but not everything.'},'The richest man is not he who has the most, but he who needs the least. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":314159265012,\"d\":1797693134862315799999}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":[-179.9,33.3]},\"arrayField\":[[[{\"locLegacy\":[0,90]},[{\"locLegacy\":[0,0]}],'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']],{\"locHaystack\":[-180,90.0],\"arrayField\":[null,true,{\"locLegacy\":[-180,33.3]},{\"b\":'The richest man is not he who has the most, but he who needs the least. anything',\"c\":0.00002225073858072014},{\"$date\": 1202331498200},[false]]},'',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-90.0],\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":['You can do anything, but not everything.',314159265003,0]},{\"d\":{\"arrayField\":[{\"locLegacy\":[0,33.3]}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null,\"locLegacy\":[179.9,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything'],\"arrayField\":[0.0,'',{\"a\":{\"$date\": 1202331498200}},{\"arrayField\":[[{\"d\":0}],{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},{\"$date\": 1391633433037},'',{\"locLegacy\":[-25,-90]},314159265004,{},{\"arrayField\":[['']]}],\"arrayField\":[1,['',314159265006,null,null],{\"arrayField\":[-3.14159265000,-3.14159265859,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}},{\"arrayField\":[{\"locHaystack\":{ 'lng': -180.0, 'lat': -90},\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"$date\": 1202331498200},{\"locHaystack\":[0.0,25]},314159265000,'You can do anything, but not everything.',{\"$date\": 1500000}]},'Echa de menos el 100 por ciento de los tiros que nunca toma.']}],\"locLegacy\":[-179.9,-90]},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],\"locLegacy\":[33.3,89.9],\"a\":{\"$date\": -111100000},\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything'],\"arrayField\":[{\"locLegacy\":[33.3,90]},''],\"arrayField\":[null]},314159265014],\"d\":'You can do anything, but not everything.'},[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]},\"c\":{\"b\":'You miss 100 percent of the shots you never take. anything'}}]],\"locHaystack\":[-179.9,-90],\"arrayField\":[{\"d\":{\"$date\": 1500000},\"arrayField\":[314159265018,null]},{\"$date\": 1500000}],\"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]},\"locLegacy\":[179.9,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},null]},{\"c\":{\"arrayField\":[{\"$date\": -111100000},true]}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":[180,-90.0]},\"arrayField\":['',{\"arrayField\":[{\"locHaystack\":{ 'lng': -180.0, 'lat': -90}},false,{\"$date\": -111100000},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]}},{\"a\":{\"b\":{\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}}}]},{\"$date\": -111100000},{\"arrayField\":[{\"locLegacy\":[180.0,0],\"locHaystack\":{ 'lng': 0.0, 'lat': -89.9}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]}}]},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":null},{\"locLegacy\":[-33.3,-33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":['','You can do anything, but not everything.'],\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',null],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}},\"d\":['',[{\"$date\": 1202331498200}],{\"$date\": 1500000},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,89.9],\"locHaystack\":{ 'lng': -179.9, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265005]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"b\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"locHaystack\":{ 'lng': 33.3, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}}]},0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -180.0, 'lat': -90.0}},[null,{\"$date\": -111100000}],'You can do anything, but not everything.'],\"arrayField\":['You can do anything, but not everything.'],\"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},{\"locHaystack\":{ 'lng': 33.3, 'lat': 0}}],\"c\":'The richest man is not he who has the most, but he who needs the least. anything',\"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,0.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":{ 'lng': -179.9, 'lat': 90.0}},\"arrayField\":[{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']},0,'','','','The richest man is not he who has the most, but he who needs the least. anything','I quit therapy because my analyst was trying to help me behind my back. anything'],\"c\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,89.9],\"arrayField\":[-314159265359],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null,\"arrayField\":[{\"_id\":[{},'You can do anything, but not everything.',{\"locHaystack\":[33.3,90]},'You can do anything, but not everything.',{\"locHaystack\":{ 'lng': 179.9, 'lat': -89.9}},['']]},{\"$date\": 1202331498200},'You can do anything, but not everything.',{\"arrayField\":[{\"_id\":{\"arrayField\":['You can do anything, but not everything.',{\"c\":{\"arrayField\":[{\"c\":'You can do anything, but not everything.',\"d\":{\"_id\":{},\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-25]},\"arrayField\":[{\"$date\": 1202331498200},'','You can do anything, but not everything.']}}]}}]}}]},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]},\"arrayField\":[null,{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]},\"c\":{\"arrayField\":[{\"arrayField\":[{\"a\":'Usted puede hacer cualquier cosa, pero no todo.'}]}],\"locLegacy\":[0.0,33.3]},\"locHaystack\":{ 'lng': 180, 'lat': 0}},314159265005],\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90]},\"d\":'You must be the change you wish to see in the world. anything',\"arrayField\":[{\"arrayField\":[{\"a\":0}]},null,{\"a\":{\"c\":'You can do anything, but not everything.',\"arrayField\":[{\"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},'',true],\"arrayField\":[['Echa de menos el 100 por ciento de los tiros que nunca toma.',2225073858072009000.99,{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90]},\"locLegacy\":[-180.0,25]},{\"a\":'You must be the change you wish to see in the world. anything'},'']}],{\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"arrayField\":[0,{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}}]}],\"arrayField\":['']}]}},{\"arrayField\":[['',{\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,89.9]},\"locHaystack\":{ 'lng': -33.3, 'lat': 0}}]}]]}],\"locLegacy\":[-179.9,-25],\"arrayField\":[{\"arrayField\":[{\"a\":{\"locLegacy\":[25,-89.9],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0.0]}},\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]}},{\"b\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}}]}],\"locLegacy\":[0,90.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":[0.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"locLegacy\":[33.3,25],\"locHaystack\":{ 'lng': -25, 'lat': -33.3}},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-25]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-33.3]}},null,[0,{\"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'},{\"arrayField\":['',{\"locHaystack\":{ 'lng': 179.9, 'lat': 90},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]}}]}]}]]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"_id\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"arrayField\":[],\"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]}},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]}},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}],'',null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},\"_id\":-3.14159265859,\"c\":{\"arrayField\":[{\"$date\": -111100000},'The richest man is not he who has the most, but he who needs the least. anything',{\"$date\": -111100000},false,[{\"b\":314159265011}]],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]},\"locLegacy\":[180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]},\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,89.9],\"arrayField\":[314159265019]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265015,'You must be the change you wish to see in the world. anything','You must be the change you wish to see in the world. anything'],\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":-3.14159265359}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037}],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":314159265017}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"locHaystack\":{ 'lng': 33.3, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1202331498200},{\"locHaystack\":{ 'lng': 180, 'lat': -25}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-25,33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locLegacy\":[179.9,-89.9],\"locHaystack\":{ 'lng': -25, 'lat': 0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"$date\": 1202331498200}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.',{\"arrayField\":[{\"arrayField\":[null,false]}]},{\"arrayField\":['']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,90],\"arrayField\":[{\"$date\": 1202331498200},null,{},['Usted debe ser el cambio que deseas ver en el mundo.'],0,314159265017]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[]},false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'The richest man is not he who has the most, but he who needs the least. anything',\"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}},{\"c\":{\"arrayField\":[{\"c\":314159265005},314159265010],\"b\":'You can do anything, but not everything.'}}],\"arrayField\":['You can do anything, but not everything.',{\"locHaystack\":[25,90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"locHaystack\":{ 'lng': 0.0, 'lat': 0.0}},\"arrayField\":[-3.14159265000,{\"$date\": 1202331498200},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0.0]},\"locHaystack\":[180.0,89.9]}],\"c\":{\"d\":{\"a\":'You can do anything, but not everything.'},\"b\":[null,''],\"arrayField\":[null,1,314159265007]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0]},\"a\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{}],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]},\"d\":'You can do anything, but not everything.'},{\"arrayField\":[null,{\"arrayField\":[]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['You can do anything, but not everything.',{\"$date\": 1391633433037}]}],\"a\":{\"arrayField\":[{\"locLegacy\":[0.0,90]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":[25,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'',\"arrayField\":[{\"arrayField\":[{\"$date\": 1202331498200}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"locLegacy\":[-33.3,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,0.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]},\"_id\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"arrayField\":[1,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}],\"d\":[{\"b\":'You can do anything, but not everything.'}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"c\":null,\"c\":'You can do anything, but not everything.'},{\"arrayField\":[null,{\"locLegacy\":[-179.9,-90.0]}],\"_id\":null},'']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,-90.0],\"b\":null,\"arrayField\":[{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[[null]]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 89.9},\"b\":314159265010}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,89.9],\"locLegacy\":[-180,90],\"arrayField\":[314159265011],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":''},'',{\"arrayField\":[['Usted puede hacer cualquier cosa, pero no todo.']]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}},\"locHaystack\":{ 'lng': 33.3, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,33.3]},\"c\":{\"arrayField\":[]}},[[{\"$date\": 1500000},{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]}}]]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]}},{\"$date\": 1391633433037},{\"arrayField\":[{\"locHaystack\":[0,-90.0]}]}],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]}},314159265009]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false],\"c\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,-25],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[{\"b\":{\"$date\": 1500000}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"c\":'You can do anything, but not everything.'},{\"arrayField\":[{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']},{\"_id\":{\"arrayField\":[]}}],\"locHaystack\":{ 'lng': -180.0, 'lat': 89.9},\"c\":''}]},0,{\"locHaystack\":[25,33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,89.9],\"locHaystack\":{ 'lng': -179.9, 'lat': 0},\"arrayField\":[true,{\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything','When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]}}]}],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265013,{\"arrayField\":[1]},'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"d\":'You can do anything, but not everything.'},{\"arrayField\":[[{\"arrayField\":[{\"locLegacy\":[33.3,0.0]}]},''],0.0,'Usted puede hacer cualquier cosa, pero no todo.','Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}]}],\"d\":{\"locHaystack\":{ 'lng': -25, 'lat': 33.3}}}],\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything','Echa de menos el 100 por ciento de los tiros que nunca toma.',[],'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,-33.3],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]},\"arrayField\":[314159265001,[{\"locLegacy\":[25,90.0]},true,null]]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": -111100000},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'The richest man is not he who has the most, but he who needs the least. anything',\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]},\"locHaystack\":[180,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[[[{\"d\":'You can do anything, but not everything.'},{\"arrayField\":[]}],{\"locHaystack\":[33.3,0.0]}],null,'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}],\"arrayField\":[314159265006]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"a\":[['Usted debe ser el cambio que deseas ver en el mundo.']]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-89.9],\"b\":'',\"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}],\"arrayField\":[314159265016],\"a\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[33.3,-33.3]}],\"arrayField\":[null,{\"locHaystack\":[33.3,-90.0]},1],\"locHaystack\":{ 'lng': -179.9, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-33.3,0.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265005,{\"$date\": 1202331498200},'',{\"arrayField\":[{\"$date\": 1391633433037}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[25,90],\"locLegacy\":[-179.9,89.9]},{\"locHaystack\":[25,-89.9]},{\"locHaystack\":{ 'lng': 180.0, 'lat': 90.0}},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,33.3],\"arrayField\":[-3.14159265000]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'',\"arrayField\":['',314159265018],\"locHaystack\":{ 'lng': 0.0, 'lat': 33.3},\"arrayField\":['','Usted debe ser el cambio que deseas ver en el mundo.',0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]},\"arrayField\":[{\"locHaystack\":{ 'lng': 180.0, 'lat': -25}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265019],\"locHaystack\":{ 'lng': 25, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0]},\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":{\"d\":0.0,\"b\":{\"locLegacy\":[25,0.0]}}}],\"arrayField\":[{\"arrayField\":[0]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]}},{\"locLegacy\":[33.3,-90.0]}],\"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":['You miss 100 percent of the shots you never take. anything',[null,'You must be the change you wish to see in the world. anything','You must be the change you wish to see in the world. anything',{\"$date\": 1391633433037}]],\"b\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']},\"locLegacy\":[-179.9,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265014]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"b\":{\"locHaystack\":{ 'lng': 33.3, 'lat': -90.0}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]},\"locHaystack\":{ 'lng': -25, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]},\"arrayField\":[{\"$date\": 1391633433037},null,{\"arrayField\":[[{\"$date\": 1391633433037}],{\"arrayField\":[{\"$date\": -111100000}]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[0,{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',1],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90.0]},\"arrayField\":[{\"arrayField\":[{\"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}}]}],\"b\":'You must be the change you wish to see in the world. anything'},[]]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"locLegacy\":[180,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":{\"c\":{\"arrayField\":[{\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}]}]}},\"arrayField\":['']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -90.0},\"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"$date\": 1202331498200},{\"arrayField\":[314159265011,'You can do anything, but not everything.',[{\"locLegacy\":[33.3,0.0]}],{\"a\":314159265003,\"a\":{\"arrayField\":[{\"$date\": 1202331498200}]}},'']},'You miss 100 percent of the shots you never take. anything']},{\"$date\": 1500000},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null,\"locHaystack\":[180.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":0.00002225073858072014}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[180.0,33.3],\"b\":1797693134862315799999,\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90.0]}}},'',{\"$date\": 1391633433037},'Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,89.9]},\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,25]}},{\"locLegacy\":[-180,0]}]},['You miss 100 percent of the shots you never take. anything',{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"arrayField\":[1,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]},\"locLegacy\":[180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,33.3],\"arrayField\":[[{\"arrayField\":[]},{\"d\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]},\"locHaystack\":[-25,0.0]}]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"a\":'You can do anything, but not everything.',\"_id\":{\"d\":''}},[{\"arrayField\":[{\"locHaystack\":{ 'lng': 0, 'lat': -89.9}},{\"locHaystack\":[0.0,89.9],\"arrayField\":[{},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}]},[{\"locLegacy\":[0,-33.3]}],'']],\"locHaystack\":{ 'lng': 179.9, 'lat': 90.0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90.0]},\"locHaystack\":{ 'lng': 179.9, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You miss 100 percent of the shots you never take. anything',{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',null,-3.14159265859,'You can do anything, but not everything.',{\"arrayField\":[{\"$date\": 1500000}]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': -33.3},\"arrayField\":[{\"locHaystack\":[-180.0,89.9],\"locHaystack\":[33.3,90]},0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',null],\"locHaystack\":{ 'lng': -180, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"c\":{\"_id\":null}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['','',{\"arrayField\":[314159265017,{\"arrayField\":[{\"arrayField\":[{\"arrayField\":['',null],\"c\":[null,{},{\"$date\": 1202331498200}]},314159265012]}],\"b\":['','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']},{\"arrayField\":[{\"b\":''},{\"locLegacy\":[180,-25]}],\"b\":{\"locHaystack\":[33.3,25]}},true,1,'']},'You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]},\"arrayField\":['You can do anything, but not everything.']},{\"locHaystack\":[-33.3,-33.3]},{\"locHaystack\":[179.9,25]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,0.0],\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.',\"c\":{\"arrayField\":[null,null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002,'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"$date\": -111100000}],\"locHaystack\":[-179.9,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'',\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90.0]},\"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]}}]},null,'You must be the change you wish to see in the world. anything',{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,33.3]},\"c\":''},['The richest man is not he who has the most, but he who needs the least. anything'],[{\"arrayField\":[{\"arrayField\":[{\"locHaystack\":{ 'lng': 0, 'lat': 90}}],\"locHaystack\":[-33.3,89.9],\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},[314159265001,{\"$date\": 1391633433037},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}},[{\"b\":{\"d\":'You can do anything, but not everything.'}},1]]]}],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}],\"locLegacy\":[33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":[180.0,0],\"b\":null}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90.0]},\"arrayField\":[['You can do anything, but not everything.',314159265004],{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0.0]},\"arrayField\":[{\"$date\": -111100000},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90.0]},\"d\":{\"a\":'You must be the change you wish to see in the world. anything'},\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}],\"arrayField\":[{\"b\":{\"arrayField\":['']}},{\"arrayField\":[{\"locHaystack\":{ 'lng': -179.9, 'lat': -89.9}},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]}}]}]}],\"locHaystack\":[179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":{\"b\":'You can do anything, but not everything.'}},{\"d\":{\"$date\": 1500000}},314159265019,{\"arrayField\":[],\"locHaystack\":[-25,-90]},{\"arrayField\":[{\"arrayField\":[{\"_id\":{\"arrayField\":[[314159265016]],\"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}},314159265013]}]},0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265014}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Usted debe ser el cambio que deseas ver en el mundo.',\"a\":'You can do anything, but not everything.',\"a\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1797693134862315799999,'You can do anything, but not everything.',[null],{\"$date\": 1202331498200},{\"$date\": 1202331498200},314159265009,null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"c\":{}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"b\":'You can do anything, but not everything.'}],\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"a\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,{\"locHaystack\":{ 'lng': 33.3, 'lat': -89.9}},'',{\"arrayField\":[{\"locHaystack\":{ 'lng': 180, 'lat': -90.0},\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]},\"arrayField\":[]},{\"locHaystack\":[-180,-90],\"locHaystack\":{ 'lng': -180, 'lat': -90},\"_id\":{\"d\":'You can do anything, but not everything.'},\"locHaystack\":{ 'lng': 180.0, 'lat': 0.0},\"a\":'You can do anything, but not everything.'},{\"arrayField\":[{\"locHaystack\":[33.3,-25]},'You can do anything, but not everything.',[{\"d\":{\"locHaystack\":{ 'lng': 179.9, 'lat': -90.0},\"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}}]]}],\"locHaystack\":{ 'lng': -180.0, 'lat': 25}},'',{\"$date\": 1391633433037},{\"a\":{\"locHaystack\":{ 'lng': 0.0, 'lat': 0},\"a\":{}},\"arrayField\":[null]},{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"_id\":'You miss 100 percent of the shots you never take. anything'},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]},\"locLegacy\":[-25,90.0]},{\"arrayField\":[{}]}],\"arrayField\":[null,314159265011]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locLegacy\":[0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"arrayField\":[314159265018],\"arrayField\":[null,{\"arrayField\":[null,{\"b\":false},{\"arrayField\":[{\"arrayField\":[{\"$date\": 1391633433037}]},[314159265006,{\"$date\": 1500000},{}],{\"arrayField\":[314159265016]},{\"_id\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'},{\"d\":314159265014}],\"arrayField\":[[0,'To the man who only has a hammer, everything he encounters begins to look like a nail. anything','You miss 100 percent of the shots you never take. anything',{\"_id\":'You can do anything, but not everything.'}]]}]},{\"arrayField\":['','',{\"$date\": 1391633433037}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locLegacy\":[-179.9,25]},{\"locLegacy\":[-180,-90],\"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},['Usted puede hacer cualquier cosa, pero no todo.',{\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.',\"d\":'The richest man is not he who has the most, but he who needs the least. anything'},false],{},['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}},'',-3.14159265859],'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"d\":{\"$date\": -111100000}}],''],'The richest man is not he who has the most, but he who needs the least. anything',[]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"_id\":{\"$date\": -111100000}}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"locLegacy\":[33.3,0],\"arrayField\":[{\"_id\":{\"b\":'You can do anything, but not everything.'}}]}],\"arrayField\":[],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': 0}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]}},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"a\":true}]},{\"arrayField\":[0.00000000049406564841,null]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[[0]]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"arrayField\":[{\"$date\": 1202331498200}]},{\"$date\": -111100000},{\"arrayField\":[{\"$date\": -111100000},[{\"$date\": 1202331498200}]]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265018]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[180,33.3],\"_id\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],\"a\":{\"a\":{\"locHaystack\":[179.9,-25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[null],\"arrayField\":[314159265019,3.14159265359]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[],0,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}},0,{\"locHaystack\":{ 'lng': -180, 'lat': 90}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['You can do anything, but not everything.']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,0,314159265008,{\"arrayField\":[null,'I quit therapy because my analyst was trying to help me behind my back. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': 25},\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything'],\"d\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":0.00000000049406564841},1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":314159265009}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locLegacy\":[180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},'',{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"a\":{\"d\":''}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]},\"b\":{\"arrayField\":[false,1],\"locLegacy\":[-180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null]},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -33.3},\"d\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[]},true]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":['',{\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},1],\"arrayField\":[[],{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]}},'You can do anything, but not everything.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[314159265011,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',-3.14159265359]},314159265016]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"c\":{\"arrayField\":[{\"a\":{\"arrayField\":[]},\"arrayField\":[[{\"locHaystack\":{ 'lng': 0.0, 'lat': 90},\"arrayField\":[null,{\"arrayField\":['You can do anything, but not everything.','']},{\"$date\": -111100000}],\"arrayField\":[true]}]],\"b\":''}]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265015],\"d\":{\"arrayField\":[{\"c\":'You can do anything, but not everything.',\"locHaystack\":[-33.3,0.0]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']},{\"arrayField\":[[]]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}},[{\"locHaystack\":[0,-33.3],\"locHaystack\":[25,-90]}],'I quit therapy because my analyst was trying to help me behind my back. anything',null]},\"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":[180,-90.0]},{\"$date\": -111100000},{\"$date\": -111100000},'Usted debe ser el cambio que deseas ver en el mundo.'],{},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]}},'You can do anything, but not everything.'],\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"c\":{\"arrayField\":[[true]],\"arrayField\":[[null,{\"arrayField\":[{\"locLegacy\":[-25,-89.9],\"c\":0.00000000049406564841}]},{\"arrayField\":[{\"a\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]},\"b\":[314159265002,'']}]}}],\"_id\":['You can do anything, but not everything.']}],{\"$date\": 1391633433037}]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-90.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0.0]}}],\"locHaystack\":{ 'lng': 0.0, 'lat': -25}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': 90},\"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":['You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,-90.0],\"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,0],\"locLegacy\":[33.3,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"c\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},null,{\"locHaystack\":[-180.0,25]},{\"arrayField\":[[314159265009,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{},{\"$date\": 1391633433037},{\"$date\": 1391633433037}]]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,0,{\"arrayField\":[314159265011]},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":-3.14159265359,\"a\":[{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',true,{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything','',null]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":''}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]},\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0.0]}},'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[180,0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',null,0,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-33.3]},\"c\":1797693134862315799999},[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-89.9]}}],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]},\"arrayField\":[{\"locHaystack\":[-25,90.0]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Usted puede hacer cualquier cosa, pero no todo.',\"d\":{\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything','',true]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":['You can do anything, but not everything.']}],'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"locHaystack\":{ 'lng': -180.0, 'lat': -90.0}},\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',false],\"d\":1,\"locHaystack\":{ 'lng': -179.9, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265008,{\"locLegacy\":[-180.0,90]}],\"arrayField\":[{\"arrayField\":[null],\"a\":{\"c\":{\"arrayField\":[[{\"a\":{\"arrayField\":[]},\"b\":'You can do anything, but not everything.'},{\"arrayField\":[{\"arrayField\":[{\"$date\": 1500000},{\"$date\": 1500000},null]}]}],'Echa de menos el 100 por ciento de los tiros que nunca toma.'],\"arrayField\":['',314159265016]}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]},\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265018]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0]},\"locHaystack\":[0.0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265007}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null,{\"b\":null}],{\"c\":true},{\"arrayField\":[{\"locLegacy\":[-180,0.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0]}}]}],\"arrayField\":[{\"$date\": -111100000}],\"arrayField\":[{\"c\":'Usted puede hacer cualquier cosa, pero no todo.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":[-180,0.0],\"b\":null}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locLegacy\":[33.3,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': -90.0},\"locHaystack\":{ 'lng': -180, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265001,[false,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',null,'']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]},\"locHaystack\":{ 'lng': -25, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":[{\"arrayField\":[],\"locHaystack\":[-33.3,-25]},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],\"arrayField\":[{\"arrayField\":[314159265010],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[2225073858072009000.99,-314159265359]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"locHaystack\":[0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]}},'Usted puede hacer cualquier cosa, pero no todo.',{\"arrayField\":[false]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"d\":'You can do anything, but not everything.'},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854feace5c8a109ee12273')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"b\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"c\":0.00002225073858072014}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null,\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1391633433037},\"a\":314159265004}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"$date\": -111100000},null,{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': 25, 'lat': -33.3}},[],{\"arrayField\":[{\"c\":'You can do anything, but not everything.'}]},{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":314159265018,\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]},\"_id\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":null}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,-90.0],\"b\":{\"$date\": -111100000},\"d\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[true,{\"$date\": 1202331498200},0]},\"locLegacy\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['']],\"arrayField\":[null,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":3.14159265359}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,90],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],\"a\":[{},'']},['',{\"arrayField\":['']},'You can do anything, but not everything.',{\"c\":314159265010}],true,{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-90]},\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]}},\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.'],\"locHaystack\":{ 'lng': -180, 'lat': 0.0}},'I quit therapy because my analyst was trying to help me behind my back. anything']}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]}},{\"locLegacy\":[-179.9,25]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[1],0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'You can do anything, but not everything.'},{\"$date\": 1500000}],\"locLegacy\":[-179.9,89.9],\"arrayField\":[0,{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[['You can do anything, but not everything.']]}]}]},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',null,[{\"$date\": 1391633433037},1]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',[{\"b\":1}]],\"arrayField\":[{\"a\":'You can do anything, but not everything.'},'I quit therapy because my analyst was trying to help me behind my back. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":['You must be the change you wish to see in the world. anything'],\"_id\":{\"$date\": -111100000},\"d\":{\"locHaystack\":[0.0,0.0],\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90]}},null]},\"locLegacy\":[180.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['']},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]}},\"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265015]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},-3.14159265859,{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265002}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":null,\"locHaystack\":[180,89.9]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265003,[true]],\"arrayField\":[{\"_id\":'You must be the change you wish to see in the world. anything'},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You must be the change you wish to see in the world. anything',\"arrayField\":[null,{\"$date\": 1391633433037},{\"d\":{\"locLegacy\":[180,-25],\"arrayField\":[null]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': 0.0},\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":0,\"locHaystack\":{ 'lng': -180.0, 'lat': 0},\"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 90},\"arrayField\":[{\"d\":314159265019}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -25},\"b\":1,\"locHaystack\":[25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null,\"d\":{\"$date\": 1391633433037},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265018,'']}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('507f1f77bcf86cd799439011')}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('528550d1ce5c8a109ee12275')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locLegacy\":[-25,0]},\"locHaystack\":[-25,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,0],\"arrayField\":[true,{\"a\":{\"b\":314159265017}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90]}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[3.14159265359,{\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},{\"arrayField\":[{\"locHaystack\":[-179.9,-25]},{\"d\":null}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":{ 'lng': -25, 'lat': 33.3}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"d\":[{\"_id\":{\"arrayField\":[{\"a\":{\"b\":{\"arrayField\":[{\"$date\": 1500000}]}}}]}},false,{\"arrayField\":[{\"arrayField\":[[{\"arrayField\":[0]},{\"b\":{\"$date\": 1500000}}]]},{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything']}],\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0.0,{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"b\":{\"locHaystack\":[0.0,-90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1391633433037},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}},{},{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":['You can do anything, but not everything.',{\"d\":1}]},'Echa de menos el 100 por ciento de los tiros que nunca toma.',['Echa de menos el 100 por ciento de los tiros que nunca toma.',true]]}],\"b\":'Usted puede hacer cualquier cosa, pero no todo.',\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]},\"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"locHaystack\":[0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[180,-90.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',false,1,{\"$date\": 1391633433037},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],\"locLegacy\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[true],'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',314159265005]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:ObjectId('52854ffcce5c8a109ee12274')}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,25]},\"locHaystack\":[-25,33.3]},null],{\"arrayField\":[{\"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}],\"locHaystack\":[0.0,89.9]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]},\"locHaystack\":{ 'lng': 180, 'lat': 0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + "}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-179.9,90.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[179.9,-90.0]},true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":0.00002225073858072014}" ));
        }
    };

    // Queries generated from NLTK are in the following format:
    // struct GeneratedQueryN {
    //     static BSONObj getQuery() { return query; }
    //     static BSONObj query;
    // };
    // BSONObj GeneratedQueryN::query = fromjson("{a:1}");

struct GeneratedQuery1 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery1::query("{\"arrayField.b\":{\"$size\":314159295}}");
struct GeneratedQuery2 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 100; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery2::query("{\"arrayField\":{\"$gt\":null}}");    Query GeneratedQuery2::sortedQuery = appendSort(GeneratedQuery2::query);    
struct GeneratedQuery3 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b.b.a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery3::query("{d:{\"$regex\":\"/caseless/i\"}}");    Query GeneratedQuery3::sortedQuery = appendSort(GeneratedQuery3::query);    BSONObj GeneratedQuery3::projection = fromjson("{\"b\":1}");
struct GeneratedQuery4 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery4::query("{\"_id\":true}");    Query GeneratedQuery4::sortedQuery = appendSort(GeneratedQuery4::query);    BSONObj GeneratedQuery4::projection = fromjson("{\"a\":1}");
struct GeneratedQuery5 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery5::query("{\"b\":'You can do anything, but not everything.'}");
struct GeneratedQuery6 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery6::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery7 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery7::query("{\"arrayField\":{\"$size\":NumberInt(-2147483648)}}");
struct GeneratedQuery8 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery8::query("{\"$or\":[{\"arrayField.a\":{\"$size\":NumberInt(314159225)}},{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'s'}},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{\"d\":{\"$not\":{\"$not\":{\"$gte\":314159265011}}}},{\"a\":{\"$not\":{\"$mod\":[314159285,2147483647]}}},{\"loc\":{\"$geoWithin\":{\"$polygon\":[[0.0,0],[0,89.9],[0.0,0.0]],\"$uniqueDocs\":true}}}]}");
struct GeneratedQuery9 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery9::query("{\"b.a.c._id\":'You can do anything, but not everything.',d:''}");
struct GeneratedQuery10 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -100; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery10::query("{\"d\":{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery10::projection = fromjson("{\"d\":{$slice:2},\"d\":1}");
struct GeneratedQuery11 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery11::query("{\"b\":false}");
struct GeneratedQuery12 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery12::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery12::projection = fromjson("{\"a\":1,_id:1}");
struct GeneratedQuery13 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery13::query("{a:{\"$regex\":\"/(a)|(b)/\"}}");    BSONObj GeneratedQuery13::projection = fromjson("{\"c.a\":1}");
struct GeneratedQuery14 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery14::query("{\"b\":{\"$elemMatch\":{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }',\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}}}");
struct GeneratedQuery15 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery15::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery16 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery16::query("{\"arrayField\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery16::projection = fromjson("{\"a\":1}");
struct GeneratedQuery17 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery17::query("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery18 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery18::query("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[-33.3,-90],[0.0,-33.3]]}}}}");    BSONObj GeneratedQuery18::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery19 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery19::query("{\"$where\":'this.d != undefined'}");    Query GeneratedQuery19::sortedQuery = appendSort(GeneratedQuery19::query);    
struct GeneratedQuery20 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery20::query("{\"a\":true}");
struct GeneratedQuery21 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery21::query("{\"loc\":{\"$nearSphere\":[-179.9,-89.9],\"$maxDistance\":314159265018}}");
struct GeneratedQuery22 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery22::query("{\"arrayField\":true}");
struct GeneratedQuery23 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery23::query("{\"_id\":1}");
struct GeneratedQuery24 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery24::query("{\"arrayField.c.d\":{\"$exists\":0}}");    Query GeneratedQuery24::sortedQuery = appendSort(GeneratedQuery24::query);    
struct GeneratedQuery25 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery25::query("{\"d\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    Query GeneratedQuery25::sortedQuery = appendSort(GeneratedQuery25::query);    
struct GeneratedQuery26 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery26::query("{\"c\":{\"$not\":{\"$exists\":{\"$date\": 1500000}}}}");    Query GeneratedQuery26::sortedQuery = appendSort(GeneratedQuery26::query);    BSONObj GeneratedQuery26::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery27 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery27::query("{a:{\"$elemMatch\":{\"d.c.c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}}}");
struct GeneratedQuery28 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery28::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery29 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return -1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery29::query("{\"b\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery29::projection = fromjson("{a:1,\"d\":1}");
struct GeneratedQuery30 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery30::query("{d:false}");    BSONObj GeneratedQuery30::projection = fromjson("{\"c\":1}");
struct GeneratedQuery31 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery31::query("{\"$or\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery32 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return -10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery32::query("{\"d\":{\"$elemMatch\":{\"d\":314159265016,\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }',\"c\":''}}}");
struct GeneratedQuery33 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery33::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery34 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery34::query("{\"_id\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}");
struct GeneratedQuery35 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery35::query("{a:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'}}");
struct GeneratedQuery36 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery36::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery37 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery37::query("{b:{\"$not\":{\"$lt\":[null,false,{\"c\":'You must be the change you wish to see in the world. anything'},314159265016,[{\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']},[{\"locHaystack\":[180.0,-90]},'You must be the change you wish to see in the world. anything'],'You miss 100 percent of the shots you never take. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]}},false,'You can do anything, but not everything.']]}}}");
struct GeneratedQuery38 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery38::query("{\"b\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");    Query GeneratedQuery38::sortedQuery = appendSort(GeneratedQuery38::query);    BSONObj GeneratedQuery38::projection = fromjson("{\"d\":1}");
struct GeneratedQuery39 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery39::query("{\"_id.d\":{\"b\":'You miss 100 percent of the shots you never take. anything',\"locHaystack\":{ 'lng': -180, 'lat': 90}}}");
struct GeneratedQuery40 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery40::query("{c:{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery41 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery41::query("{\"c\":{\"$size\":314159235}}");    Query GeneratedQuery41::sortedQuery = appendSort(GeneratedQuery41::query);    BSONObj GeneratedQuery41::projection = fromjson("{\"_id\":{$slice:10}}");
struct GeneratedQuery42 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery42::query("{\"b\":{\"$not\":{\"$mod\":[314159215,314159245]}}}");    BSONObj GeneratedQuery42::projection = fromjson("{\"b.a\":1}");
struct GeneratedQuery43 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery43::query("{\"arrayField\":{\"$all\":['You can do anything, but not everything.',{\"a\":{\"$date\": -111100000}}]}}");
struct GeneratedQuery44 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery44::query("{\"arrayField\":{\"$elemMatch\":{\"_id\":{\"$elemMatch\":{\"$where\":'function myFunction() { return this.d != undefined; }'}}},\"$type\":14,\"$type\":-1,\"$not\":{\"$mod\":[314159265,314159245]},\"$mod\":[314159235,2147483647],\"$mod\":[314159295,2147483647]}}");    BSONObj GeneratedQuery44::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery45 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery45::query("{\"c\":{\"$mod\":[314159225,314159295]}}");
struct GeneratedQuery46 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery46::query("{\"arrayField\":''}");
struct GeneratedQuery47 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery47::query("{_id:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");    Query GeneratedQuery47::sortedQuery = appendSort(GeneratedQuery47::query);    
struct GeneratedQuery48 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery48::query("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[-179.9,-90.0],[179.9,90.0]]}}}}");    BSONObj GeneratedQuery48::projection = fromjson("{c:1}");
struct GeneratedQuery49 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery49::query("{\"d\":{\"$mod\":[314159225,314159245]}}");    Query GeneratedQuery49::sortedQuery = appendSort(GeneratedQuery49::query);    BSONObj GeneratedQuery49::projection = fromjson("{\"b\":1}");
struct GeneratedQuery50 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery50::query("{\"arrayField\":{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}],\"locHaystack\":[180.0,-89.9]}]},314159265006,{\"d\":{\"arrayField\":[]}},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}}");    Query GeneratedQuery50::sortedQuery = appendSort(GeneratedQuery50::query);    BSONObj GeneratedQuery50::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery51 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery51::query("{b:{\"$type\":9}}");
struct GeneratedQuery52 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery52::query("{\"a\":{\"$not\":{\"$ne\":[null]}}}");    BSONObj GeneratedQuery52::projection = fromjson("{\"b\":1}");
struct GeneratedQuery53 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery53::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery54 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery54::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery55 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery55::query("{\"$nor\":[{\"d\":1}]}");    Query GeneratedQuery55::sortedQuery = appendSort(GeneratedQuery55::query);    BSONObj GeneratedQuery55::projection = fromjson("{a:1}");
struct GeneratedQuery56 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery56::query("{\"$where\":'function myFunction() { return this.d != undefined; }',\"_id\":[{\"b\":{\"$date\": 1500000}}]}");
struct GeneratedQuery57 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery57::query("{\"arrayField\":{\"$nin\":[0]}}");
struct GeneratedQuery58 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery58::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    Query GeneratedQuery58::sortedQuery = appendSort(GeneratedQuery58::query);    BSONObj GeneratedQuery58::projection = fromjson("{\"c\":1}");
struct GeneratedQuery59 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery59::query("{\"arrayField\":-3.14159265359}");    Query GeneratedQuery59::sortedQuery = appendSort(GeneratedQuery59::query);    BSONObj GeneratedQuery59::projection = fromjson("{\"b\":1}");
struct GeneratedQuery60 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery60::query("{\"c\":''}");    Query GeneratedQuery60::sortedQuery = appendSort(GeneratedQuery60::query);    BSONObj GeneratedQuery60::projection = fromjson("{\"arrayField.$\":1,\"_id\":1}");
struct GeneratedQuery61 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery61::query("{b:{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery62 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery62::query("{\"arrayField\":{\"$exists\":true,\"$size\":NumberLong(314159265358979323),\"$not\":{\"$mod\":[314159285,314159215]}}}");    Query GeneratedQuery62::sortedQuery = appendSort(GeneratedQuery62::query);    
struct GeneratedQuery63 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery63::query("{\"c\":314159265004}");    Query GeneratedQuery63::sortedQuery = appendSort(GeneratedQuery63::query);    
struct GeneratedQuery64 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery64::query("{\"c\":{\"$type\":10}}");    Query GeneratedQuery64::sortedQuery = appendSort(GeneratedQuery64::query);    BSONObj GeneratedQuery64::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery65 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery65::query("{a:{\"$exists\":false}}");    Query GeneratedQuery65::sortedQuery = appendSort(GeneratedQuery65::query);    BSONObj GeneratedQuery65::projection = fromjson("{\"d\":1}");
struct GeneratedQuery66 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery66::query("{\"loc\":{\"$nearSphere\":[-180,89.9]}}");
struct GeneratedQuery67 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery67::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    Query GeneratedQuery67::sortedQuery = appendSort(GeneratedQuery67::query);    
struct GeneratedQuery68 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery68::query("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery69 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery69::query("{\"$nor\":[{\"arrayField\":0},{\"d\":false},{\"arrayField.b\":{\"$size\":NumberLong(9223372036854775807)}}]}");    BSONObj GeneratedQuery69::projection = fromjson("{\"_id\":1,\"a\":1}");
struct GeneratedQuery70 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery70::query("{\"$nor\":[{\"arrayField.b\":{\"$mod\":[314159265,314159275]}}]}");    Query GeneratedQuery70::sortedQuery = appendSort(GeneratedQuery70::query);    BSONObj GeneratedQuery70::projection = fromjson("{b:1}");
struct GeneratedQuery71 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery71::query("{a:'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery72 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery72::query("{\"arrayField\":''}");    BSONObj GeneratedQuery72::projection = fromjson("{a:1}");
struct GeneratedQuery73 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery73::query("{d:1}");    BSONObj GeneratedQuery73::projection = fromjson("{\"d\":1}");
struct GeneratedQuery74 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery74::query("{\"a\":314159265007}");    Query GeneratedQuery74::sortedQuery = appendSort(GeneratedQuery74::query);    BSONObj GeneratedQuery74::projection = fromjson("{\"d\":1}");
struct GeneratedQuery75 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery75::query("{\"arrayField\":false}");
struct GeneratedQuery76 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery76::query("{\"_id\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery77 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery77::query("{\"c\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");    BSONObj GeneratedQuery77::projection = fromjson("{\"b\":1}");
struct GeneratedQuery78 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery78::query("{\"$or\":[{a:{\"$not\":{\"$exists\":false}}}]}");    Query GeneratedQuery78::sortedQuery = appendSort(GeneratedQuery78::query);    
struct GeneratedQuery79 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery79::query("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]}}}}");
struct GeneratedQuery80 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery80::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery80::projection = fromjson("{\"a\":1}");
struct GeneratedQuery81 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery81::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery81::projection = fromjson("{\"d\":1}");
struct GeneratedQuery82 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery82::query("{\"c\":''}");
struct GeneratedQuery83 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery83::query("{\"b\":''}");    Query GeneratedQuery83::sortedQuery = appendSort(GeneratedQuery83::query);    
struct GeneratedQuery84 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 100; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery84::query("{\"arrayField.a.a\":{\"$all\":[0.00000000049406564841,[null]]}}");    Query GeneratedQuery84::sortedQuery = appendSort(GeneratedQuery84::query);    
struct GeneratedQuery85 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery85::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery86 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery86::query("{b:314159265010}");    BSONObj GeneratedQuery86::projection = fromjson("{\"d\":1,\"a\":1}");
struct GeneratedQuery87 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery87::query("{d:''}");    BSONObj GeneratedQuery87::projection = fromjson("{\"c\":1}");
struct GeneratedQuery88 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery88::query("{d:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'ms'}}");
struct GeneratedQuery89 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery89::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery90 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery90::query("{\"arrayField.d\":{\"$elemMatch\":{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}}}");
struct GeneratedQuery91 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery91::query("{\"arrayField.a\":{\"$lt\":314159265001,\"$gte\":null,\"$mod\":[314159295,314159285]}}");    Query GeneratedQuery91::sortedQuery = appendSort(GeneratedQuery91::query);    BSONObj GeneratedQuery91::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery92 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery92::query("{\"arrayField\":314159265019}");
struct GeneratedQuery93 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery93::query("{\"c\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");    Query GeneratedQuery93::sortedQuery = appendSort(GeneratedQuery93::query);    BSONObj GeneratedQuery93::projection = fromjson("{c:1,\"b\":1}");
struct GeneratedQuery94 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery94::query("{\"arrayField\":[{\"c\":'You can do anything, but not everything.',\"locHaystack\":{ 'lng': 180.0, 'lat': -33.3}},'The richest man is not he who has the most, but he who needs the least. anything']}");
struct GeneratedQuery95 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery95::query("{\"$nor\":[{\"a\":''},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{_id:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'i'}},{\"b\":{\"$elemMatch\":{b:{\"$date\": -111100000}}}},{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}]}");    BSONObj GeneratedQuery95::projection = fromjson("{\"_id\":1,\"a\":1}");
struct GeneratedQuery96 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery96::query("{a:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    Query GeneratedQuery96::sortedQuery = appendSort(GeneratedQuery96::query);    BSONObj GeneratedQuery96::projection = fromjson("{\"d\":1}");
struct GeneratedQuery97 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery97::query("{\"d\":{\"$mod\":[2147483647,314159215],\"$mod\":[314159235,314159205],\"$exists\":true}}");    BSONObj GeneratedQuery97::projection = fromjson("{\"a\":{$elemMatch:{b:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'si'}}},\"d\":1}");
struct GeneratedQuery98 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery98::query("{\"a\":false}");    BSONObj GeneratedQuery98::projection = fromjson("{\"_id\":1,c:1}");
struct GeneratedQuery99 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery99::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery99::projection = fromjson("{\"b\":{$elemMatch:{\"arrayField.a\":{\"$lte\":{\"$date\": 1202331498200}},\"d\":314159265007,_id:{\"$elemMatch\":{\"a.b\":{\"$elemMatch\":{\"arrayField.b.d\":{\"$lte\":false,\"$elemMatch\":{\"d\":null,\"$where\":'(this.a || this.b || this.c || this.d) > 10'}}}},\"c\":{\"$regex\":\"/cat/\"},a:{\"$regex\":\"/^abc(\\d+)/\"}},\"$mod\":[2147483647,0],\"$type\":127,\"$lt\":{\"locHaystack\":{ 'lng': -179.9, 'lat': -25},\"locHaystack\":[-33.3,-33.3]},\"$not\":{\"$not\":{\"$gte\":{\"arrayField\":[null]}}}}}}}");
struct GeneratedQuery100 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery100::query("{\"d\":{\"$date\": -111100000}}");
struct GeneratedQuery101 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery101::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    Query GeneratedQuery101::sortedQuery = appendSort(GeneratedQuery101::query);    
struct GeneratedQuery102 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery102::query("{\"_id\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery103 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery103::query("{\"$and\":[{\"b\":null}]}");    Query GeneratedQuery103::sortedQuery = appendSort(GeneratedQuery103::query);    
struct GeneratedQuery104 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery104::query("{\"arrayField\":314159265018}");
struct GeneratedQuery105 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery105::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    Query GeneratedQuery105::sortedQuery = appendSort(GeneratedQuery105::query);    BSONObj GeneratedQuery105::projection = fromjson("{\"b\":{$elemMatch:{_id:0,c:314159265007,\"$where\":'(this.a || this.b || this.c || this.d) > 10',\"d\":{\"$exists\":1},\"arrayField\":'',\"a\":''}}}");
struct GeneratedQuery106 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery106::query("{\"arrayField.d\":{\"$not\":{\"$gt\":{\"$date\": 1202331498200}}}}");    BSONObj GeneratedQuery106::projection = fromjson("{b:1}");
struct GeneratedQuery107 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery107::query("{\"c\":{\"locLegacy\":[-180,33.3]}}");
struct GeneratedQuery108 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery108::query("{\"c\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");
struct GeneratedQuery109 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery109::query("{\"b\":{\"$elemMatch\":{\"_id\":false,\"d\":'',\"a\":{\"$elemMatch\":{c:{\"$date\": -111100000},\"arrayField.a\":{\"$in\":[{\"$date\": 1500000},[0.0]]}}}}}}");
struct GeneratedQuery110 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery110::query("{\"arrayField\":['You miss 100 percent of the shots you never take. anything',null,'You miss 100 percent of the shots you never take. anything','','']}");    BSONObj GeneratedQuery110::projection = fromjson("{c:{$elemMatch:{\"arrayField\":{\"$size\":NumberInt(314159275)},b:{\"$mod\":[314159225,2147483647]},a:{\"$size\":314159215,\"$type\":18,\"$type\":2}}},\"d\":1}");
struct GeneratedQuery111 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery111::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery111::projection = fromjson("{\"a\":1}");
struct GeneratedQuery112 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery112::query("{_id:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery113 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery113::query("{\"d\":{\"$gt\":314159265009}}");
struct GeneratedQuery114 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery114::query("{\"arrayField\":{\"$all\":[{\"$date\": -111100000},314159265016,null,{\"locHaystack\":[-25,-25]},[314159265018,true,'Echa de menos el 100 por ciento de los tiros que nunca toma.'],[{\"b\":{\"arrayField\":[[314159265008]]},\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]}}],{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]}}]}}");
struct GeneratedQuery115 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{_id:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery115::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    Query GeneratedQuery115::sortedQuery = appendSort(GeneratedQuery115::query);    BSONObj GeneratedQuery115::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery116 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery116::query("{\"c\":[{\"arrayField\":[{\"$date\": 1202331498200},{\"a\":{\"a\":1}}]},{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything']}]}");    Query GeneratedQuery116::sortedQuery = appendSort(GeneratedQuery116::query);    BSONObj GeneratedQuery116::projection = fromjson("{a:1}");
struct GeneratedQuery117 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery117::query("{\"a\":{\"$mod\":[314159245,314159235]}}");
struct GeneratedQuery118 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery118::query("{\"$nor\":[{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[180.0,-90],[0,90]]}}}},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery119 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery119::query("{\"$nor\":[{\"$where\":'this.d != undefined'},{\"d\":{\"$type\":4}},{\"arrayField\":314159265001},{\"arrayField\":{\"$date\": 1202331498200}}]}");
struct GeneratedQuery120 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery120::query("{\"_id\":1}");    Query GeneratedQuery120::sortedQuery = appendSort(GeneratedQuery120::query);    
struct GeneratedQuery121 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery121::query("{\"_id\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    Query GeneratedQuery121::sortedQuery = appendSort(GeneratedQuery121::query);    
struct GeneratedQuery122 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return -100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery122::query("{\"arrayField\":314159265019}");
struct GeneratedQuery123 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery123::query("{\"$nor\":[{d:{\"$size\":NumberInt(2147483647)}}]}");
struct GeneratedQuery124 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery124::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery125 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery125::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery125::projection = fromjson("{\"b\":1}");
struct GeneratedQuery126 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery126::query("{\"$or\":[{\"arrayField\":'You can do anything, but not everything.'}]}");
struct GeneratedQuery127 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery127::query("{\"a\":null}");
struct GeneratedQuery128 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery128::query("{d:{\"$lte\":1}}");    Query GeneratedQuery128::sortedQuery = appendSort(GeneratedQuery128::query);    BSONObj GeneratedQuery128::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery129 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery129::query("{\"$where\":'this.d != undefined'}");    Query GeneratedQuery129::sortedQuery = appendSort(GeneratedQuery129::query);    
struct GeneratedQuery130 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery130::query("{\"arrayField\":1}");    BSONObj GeneratedQuery130::projection = fromjson("{\"d\":1}");
struct GeneratedQuery131 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery131::query("{d:{\"$regex\":\"/^abc/m\"}}");
struct GeneratedQuery132 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery132::query("{\"$or\":[{\"c\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}]}");
struct GeneratedQuery133 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery133::query("{\"a\":{\"$not\":{\"$gte\":314159265016}}}");
struct GeneratedQuery134 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery134::query("{d:{\"$mod\":[314159205,314159235]}}");    Query GeneratedQuery134::sortedQuery = appendSort(GeneratedQuery134::query);    BSONObj GeneratedQuery134::projection = fromjson("{\"d\":1}");
struct GeneratedQuery135 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery135::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery136 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery136::query("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery137 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery137::query("{\"c\":[{\"c\":{\"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}},'You can do anything, but not everything.']}");    BSONObj GeneratedQuery137::projection = fromjson("{_id:1}");
struct GeneratedQuery138 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery138::query("{\"a\":{\"$date\": -111100000}}");    Query GeneratedQuery138::sortedQuery = appendSort(GeneratedQuery138::query);    
struct GeneratedQuery139 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery139::query("{b:'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");    BSONObj GeneratedQuery139::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery140 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery140::query("{\"$or\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{a:0},{b:{\"$elemMatch\":{\"$where\":'(this.a || this.b || this.c || this.d) > 10',\"d\":1,\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'}}}},{_id:'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}]}");
struct GeneratedQuery141 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery141::query("{\"b\":'You must be the change you wish to see in the world. anything'}");
struct GeneratedQuery142 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery142::query("{\"arrayField\":314159265012}");
struct GeneratedQuery143 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery143::query("{\"a\":314159265017}");
struct GeneratedQuery144 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery144::query("{\"arrayField.d\":{\"$type\":7}}");
struct GeneratedQuery145 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery145::query("{\"arrayField\":'You can do anything, but not everything.'}");    Query GeneratedQuery145::sortedQuery = appendSort(GeneratedQuery145::query);    
struct GeneratedQuery146 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery146::query("{\"arrayField\":{\"$all\":[{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',{\"_id\":null},{\"arrayField\":[{\"$date\": 1391633433037}]},{\"_id\":null},'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"arrayField\":[null,{\"locHaystack\":[-33.3,0]},{\"$date\": 1391633433037},[{\"b\":[{\"arrayField\":[null],\"arrayField\":[{\"locLegacy\":[-180.0,-33.3]}]},{\"locHaystack\":{ 'lng': 0, 'lat': 25}}]}]],\"locLegacy\":[25,-90.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-25]}}]},{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,90]}}},0]}}");    BSONObj GeneratedQuery146::projection = fromjson("{\"a\":1}");
struct GeneratedQuery147 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery147::query("{\"$or\":[{\"arrayField\":{\"$date\": 1500000}},{\"arrayField.a\":{\"$size\":NumberLong(314159265358979373)}}]}");    BSONObj GeneratedQuery147::projection = fromjson("{b:1}");
struct GeneratedQuery148 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery148::query("{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery149 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery149::query("{\"$nor\":[{\"arrayField.c\":{\"$size\":314159275}}]}");    Query GeneratedQuery149::sortedQuery = appendSort(GeneratedQuery149::query);    BSONObj GeneratedQuery149::projection = fromjson("{d:1,\"a\":1,\"a\":1}");
struct GeneratedQuery150 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery150::query("{\"arrayField\":[{\"$date\": 1202331498200},{\"arrayField\":['You can do anything, but not everything.']},{\"c\":1}]}");
struct GeneratedQuery151 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery151::query("{\"arrayField.b\":{\"$size\":NumberLong(314159265358979313)}}");
struct GeneratedQuery152 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery152::query("{\"$and\":[{\"$where\":'function myFunction() { return this.d != undefined; }'},{d:314159265007}]}");
struct GeneratedQuery153 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery153::query("{\"_id\":{\"$exists\":0}}");    BSONObj GeneratedQuery153::projection = fromjson("{d:1}");
struct GeneratedQuery154 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery154::query("{\"arrayField.a\":{\"$elemMatch\":{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},\"_id\":{\"$mod\":[314159215,314159205]},\"_id\":314159265006,\"d\":'Usted puede hacer cualquier cosa, pero no todo.',\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-25]}}}}}");    BSONObj GeneratedQuery154::projection = fromjson("{\"a\":{$elemMatch:{\"$where\":'function myFunction() { var x = 1 + 2; }',\"arrayField\":{\"$elemMatch\":{a:{\"$regex\":\"/abc\\def/\"}}},\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'m'},\"d\":0,\"arrayField.d\":{\"$mod\":[314159255,314159295],\"$type\":9,\"$type\":18}}}}");
struct GeneratedQuery155 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery155::query("{\"c\":{\"$elemMatch\":{\"d\":{\"$mod\":[314159255,314159285]},\"_id\":{\"$lt\":314159265000},b:false,\"arrayField\":true,\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }',\"c.c\":{\"$date\": -111100000},\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}}}");
struct GeneratedQuery156 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery156::query("{\"$nor\":[{a:{\"$not\":{\"$mod\":[314159275,314159285]}}}]}");    BSONObj GeneratedQuery156::projection = fromjson("{\"b\":1}");
struct GeneratedQuery157 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery157::query("{_id:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");    BSONObj GeneratedQuery157::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery158 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery158::query("{d:{\"$date\": -111100000}}");
struct GeneratedQuery159 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery159::query("{\"$or\":[{d:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"$where\":'function myFunction() { var x = 1 + 2; }'},{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");    Query GeneratedQuery159::sortedQuery = appendSort(GeneratedQuery159::query);    BSONObj GeneratedQuery159::projection = fromjson("{c:1}");
struct GeneratedQuery160 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery160::query("{\"arrayField\":'You can do anything, but not everything.'}");
struct GeneratedQuery161 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery161::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery162 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery162::query("{\"$and\":[{\"a\":true},{\"a\":[{\"_id\":{\"b\":314159265004},\"arrayField\":[{},null]}]}]}");    BSONObj GeneratedQuery162::projection = fromjson("{a:1}");
struct GeneratedQuery163 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery163::query("{\"c\":{\"$not\":{\"$in\":[0]}}}");
struct GeneratedQuery164 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery164::query("{\"$or\":[{\"arrayField\":314159265005}]}");
struct GeneratedQuery165 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery165::query("{\"a\":{\"$elemMatch\":{\"arrayField\":false,\"$where\":'this.d != undefined'}}}");    BSONObj GeneratedQuery165::projection = fromjson("{\"arrayField.$\":1,c:1}");
struct GeneratedQuery166 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery166::query("{b:{\"$not\":{\"$elemMatch\":{\"arrayField\":{\"$size\":NumberLong(314159265358979373)}}}}}");
struct GeneratedQuery167 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery167::query("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[33.3,0]},\"$maxDistance\":314159265018}}}");
struct GeneratedQuery168 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery168::query("{\"arrayField.b._id\":{\"$size\":314159285}}");
struct GeneratedQuery169 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery169::query("{\"_id\":{\"$all\":[{\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-33.3]}},{\"arrayField\":['You can do anything, but not everything.']}]}}");
struct GeneratedQuery170 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery170::query("{\"_id\":{\"$mod\":[314159295,314159245]}}");    BSONObj GeneratedQuery170::projection = fromjson("{\"d._id\":1}");
struct GeneratedQuery171 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery171::query("{\"arrayField\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery171::projection = fromjson("{a:1}");
struct GeneratedQuery172 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery172::query("{\"arrayField\":0.0}");    Query GeneratedQuery172::sortedQuery = appendSort(GeneratedQuery172::query);    BSONObj GeneratedQuery172::projection = fromjson("{_id:1}");
struct GeneratedQuery173 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery173::query("{\"arrayField\":0}");    Query GeneratedQuery173::sortedQuery = appendSort(GeneratedQuery173::query);    BSONObj GeneratedQuery173::projection = fromjson("{\"c\":1}");
struct GeneratedQuery174 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{_id:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery174::query("{a:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");    Query GeneratedQuery174::sortedQuery = appendSort(GeneratedQuery174::query);    
struct GeneratedQuery175 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery175::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery176 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery176::query("{\"arrayField\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery176::projection = fromjson("{\"c\":1}");
struct GeneratedQuery177 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery177::query("{\"$or\":[{a:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'isii'}}]}");
struct GeneratedQuery178 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery178::query("{\"arrayField\":0}");    BSONObj GeneratedQuery178::projection = fromjson("{\"a\":1}");
struct GeneratedQuery179 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery179::query("{\"b\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");    BSONObj GeneratedQuery179::projection = fromjson("{c:1}");
struct GeneratedQuery180 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery180::query("{\"arrayField\":{\"$date\": 1202331498200}}");    Query GeneratedQuery180::sortedQuery = appendSort(GeneratedQuery180::query);    BSONObj GeneratedQuery180::projection = fromjson("{a:1}");
struct GeneratedQuery181 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery181::query("{\"d\":314159265001}");
struct GeneratedQuery182 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery182::query("{c:{\"$regex\":\"/^abc/m\"}}");
struct GeneratedQuery183 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery183::query("{\"$nor\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery184 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery184::query("{b:{\"$nin\":[0,314159265009,true]}}");
struct GeneratedQuery185 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery185::query("{\"a\":1797693134862315799999}");
struct GeneratedQuery186 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery186::query("{\"arrayField\":null}");
struct GeneratedQuery187 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery187::query("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery188 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery188::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery189 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery189::query("{\"arrayField.d\":{\"$elemMatch\":{\"d.c\":{\"$date\": 1500000}}}}");
struct GeneratedQuery190 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery190::query("{\"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}");    BSONObj GeneratedQuery190::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery191 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery191::query("{\"arrayField\":{\"$exists\":1}}");
struct GeneratedQuery192 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery192::query("{\"$or\":[{\"c\":false}]}");
struct GeneratedQuery193 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery193::query("{\"$and\":[{\"b\":{\"$mod\":[314159225,0]}}]}");    BSONObj GeneratedQuery193::projection = fromjson("{\"d\":1,\"c\":1}");
struct GeneratedQuery194 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery194::query("{\"arrayField\":{\"$mod\":[314159265,0],\"$size\":NumberInt(-314159265),\"$all\":[[{\"d\":''},[3.14159265359],{\"locLegacy\":[-25,-90.0]},[[{\"d\":'You miss 100 percent of the shots you never take. anything'},{\"locLegacy\":[-180.0,-90]},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']],[{\"d\":''},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]}},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],{\"arrayField\":[],\"b\":['']},1,{\"locHaystack\":{ 'lng': 33.3, 'lat': 90}},false]],\"$all\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything','',false],\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},\"$gt\":314159265007,\"$ne\":{\"$date\": 1500000},\"$ne\":2225073858072009000.99,\"$size\":NumberLong(314159265358979383),\"$exists\":314159265009,\"$ne\":{\"$date\": 1202331498200}}}");    Query GeneratedQuery194::sortedQuery = appendSort(GeneratedQuery194::query);    BSONObj GeneratedQuery194::projection = fromjson("{\"d\":1,\"d.b\":{$elemMatch:{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");
struct GeneratedQuery195 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery195::query("{\"b\":{\"$regex\":\"/^abc/\"}}");    Query GeneratedQuery195::sortedQuery = appendSort(GeneratedQuery195::query);    BSONObj GeneratedQuery195::projection = fromjson("{\"b\":{$slice:2},\"c\":1}");
struct GeneratedQuery196 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery196::query("{\"arrayField\":3.14159265359}");
struct GeneratedQuery197 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery197::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery198 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery198::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    Query GeneratedQuery198::sortedQuery = appendSort(GeneratedQuery198::query);    
struct GeneratedQuery199 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery199::query("{\"b\":{\"$date\": 1500000}}");
struct GeneratedQuery200 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery200::query("{\"_id\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'s'}}");    BSONObj GeneratedQuery200::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery201 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery201::query("{\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}");    Query GeneratedQuery201::sortedQuery = appendSort(GeneratedQuery201::query);    BSONObj GeneratedQuery201::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery202 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery202::query("{\"arrayField.b\":{\"$gt\":'You can do anything, but not everything.'}}");    Query GeneratedQuery202::sortedQuery = appendSort(GeneratedQuery202::query);    
struct GeneratedQuery203 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery203::query("{\"a\":{\"$regex\":\"/cat/\"}}");    BSONObj GeneratedQuery203::projection = fromjson("{a:1}");
struct GeneratedQuery204 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery204::query("{\"$nor\":[{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[3,6],[6,1],[0,0] ],[ [0,0],[-180,0],[-180,90],[180,90],[0,0] ]]},\"$uniqueDocs\":1}}}]}");    Query GeneratedQuery204::sortedQuery = appendSort(GeneratedQuery204::query);    BSONObj GeneratedQuery204::projection = fromjson("{c:1}");
struct GeneratedQuery205 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery205::query("{\"$nor\":[{\"$where\":'this.d != undefined'},{\"c\":{\"arrayField\":[]}}]}");    Query GeneratedQuery205::sortedQuery = appendSort(GeneratedQuery205::query);    BSONObj GeneratedQuery205::projection = fromjson("{\"c\":1}");
struct GeneratedQuery206 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery206::query("{\"$nor\":[{\"_id\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},{b:{\"$mod\":[314159285,0]}}]}");    BSONObj GeneratedQuery206::projection = fromjson("{\"d\":1}");
struct GeneratedQuery207 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery207::query("{\"$and\":[{\"a\":{\"$date\": 1202331498200}}]}");
struct GeneratedQuery208 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery208::query("{\"$nor\":[{\"arrayField\":1}]}");    BSONObj GeneratedQuery208::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery209 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery209::query("{\"c\":314159265002}");
struct GeneratedQuery210 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery210::query("{\"arrayField\":{\"$all\":[{\"arrayField\":[],\"locLegacy\":[25,90.0]}]}}");    Query GeneratedQuery210::sortedQuery = appendSort(GeneratedQuery210::query);    BSONObj GeneratedQuery210::projection = fromjson("{\"b\":1}");
struct GeneratedQuery211 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery211::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery212 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery212::query("{\"c\":''}");    BSONObj GeneratedQuery212::projection = fromjson("{_id:1,c:1,\"a\":1}");
struct GeneratedQuery213 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery213::query("{\"d\":''}");
struct GeneratedQuery214 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery214::query("{\"$and\":[{\"arrayField\":{\"$gt\":''}}]}");
struct GeneratedQuery215 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery215::query("{\"$or\":[{\"a\":{\"$exists\":1}},{\"d\":{\"$date\": 1500000}}]}");
struct GeneratedQuery216 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery216::query("{\"d\":314159265017}");
struct GeneratedQuery217 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery217::query("{\"b\":{\"$mod\":[314159235,314159295],\"$all\":[{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]}}},'You miss 100 percent of the shots you never take. anything','You can do anything, but not everything.']}}");    BSONObj GeneratedQuery217::projection = fromjson("{\"c\":1}");
struct GeneratedQuery218 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery218::query("{_id:'You can do anything, but not everything.'}");    Query GeneratedQuery218::sortedQuery = appendSort(GeneratedQuery218::query);    
struct GeneratedQuery219 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery219::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery220 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery220::query("{\"arrayField\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery220::projection = fromjson("{a:1}");
struct GeneratedQuery221 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery221::query("{\"b\":{\"$date\": 1391633433037}}");    Query GeneratedQuery221::sortedQuery = appendSort(GeneratedQuery221::query);    BSONObj GeneratedQuery221::projection = fromjson("{\"d\":{$slice:1}}");
struct GeneratedQuery222 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery222::query("{\"_id\":314159265009}");    BSONObj GeneratedQuery222::projection = fromjson("{\"arrayField.$\":1,\"b\":1,\"b\":1}");
struct GeneratedQuery223 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery223::query("{\"arrayField\":{\"$exists\":true}}");
struct GeneratedQuery224 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery224::query("{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[0,33.3]}}}}");    BSONObj GeneratedQuery224::projection = fromjson("{_id:1}");
struct GeneratedQuery225 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery225::query("{\"d\":{\"$mod\":[314159275,314159245]}}");
struct GeneratedQuery226 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery226::query("{\"arrayField\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery226::projection = fromjson("{a:1}");
struct GeneratedQuery227 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery227::query("{\"d\":{\"$date\": 1202331498200}}");    Query GeneratedQuery227::sortedQuery = appendSort(GeneratedQuery227::query);    BSONObj GeneratedQuery227::projection = fromjson("{\"d\":1}");
struct GeneratedQuery228 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery228::query("{\"b\":1}");    BSONObj GeneratedQuery228::projection = fromjson("{c:1}");
struct GeneratedQuery229 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery229::query("{\"b\":{\"$lt\":314159265019}}");    Query GeneratedQuery229::sortedQuery = appendSort(GeneratedQuery229::query);    
struct GeneratedQuery230 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery230::query("{\"$and\":[{\"c\":'I quit therapy because my analyst was trying to help me behind my back. anything'},{\"d\":null},{\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}]}");
struct GeneratedQuery231 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery231::query("{\"$nor\":[{\"a\":{\"$regex\":\"/cat/\"}},{\"arrayField\":1},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}]}");    BSONObj GeneratedQuery231::projection = fromjson("{\"d\":1}");
struct GeneratedQuery232 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery232::query("{\"arrayField\":{\"$not\":{\"$mod\":[314159255,2147483647]}}}");
struct GeneratedQuery233 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery233::query("{\"a\":{\"$not\":{\"$lt\":''}}}");
struct GeneratedQuery234 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery234::query("{\"arrayField\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery235 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery235::query("{\"arrayField\":''}");
struct GeneratedQuery236 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery236::query("{\"b\":false}");    BSONObj GeneratedQuery236::projection = fromjson("{\"arrayField.$\":1,\"d\":1}");
struct GeneratedQuery237 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery237::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery238 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a.d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery238::query("{\"$nor\":[{\"arrayField\":'The richest man is not he who has the most, but he who needs the least. anything'}]}");    Query GeneratedQuery238::sortedQuery = appendSort(GeneratedQuery238::query);    BSONObj GeneratedQuery238::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery239 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery239::query("{\"$nor\":[{\"arrayField\":-3.14159265859},{\"b\":'You can do anything, but not everything.'},{c:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}},{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[25,0],[179.9,25]]}}}},{\"arrayField\":{\"$mod\":[314159205,314159225]}}]}");    BSONObj GeneratedQuery239::projection = fromjson("{_id:1}");
struct GeneratedQuery240 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery240::query("{b:{\"$date\": 1202331498200}}");
struct GeneratedQuery241 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery241::query("{a:'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");    Query GeneratedQuery241::sortedQuery = appendSort(GeneratedQuery241::query);    
struct GeneratedQuery242 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery242::query("{\"c\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery242::projection = fromjson("{\"a\":1}");
struct GeneratedQuery243 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery243::query("{\"$and\":[{_id:null}]}");
struct GeneratedQuery244 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery244::query("{\"b\":{\"$date\": 1391633433037}}");    Query GeneratedQuery244::sortedQuery = appendSort(GeneratedQuery244::query);    BSONObj GeneratedQuery244::projection = fromjson("{\"b\":1}");
struct GeneratedQuery245 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery245::query("{c:{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery245::projection = fromjson("{_id:{$slice:0}}");
struct GeneratedQuery246 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery246::query("{\"arrayField\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery246::projection = fromjson("{a:1}");
struct GeneratedQuery247 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery247::query("{\"a\":true}");    BSONObj GeneratedQuery247::projection = fromjson("{\"b\":1}");
struct GeneratedQuery248 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery248::query("{\"c\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery249 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery249::query("{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery249::projection = fromjson("{d:1}");
struct GeneratedQuery250 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery250::query("{\"c\":{\"$type\":5}}");
struct GeneratedQuery251 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery251::query("{\"$or\":[{\"arrayField\":2225073858072009000.99},{\"arrayField\":true},{\"arrayField\":true},{\"arrayField\":true}]}");
struct GeneratedQuery252 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery252::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery252::projection = fromjson("{a:1}");
struct GeneratedQuery253 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery253::query("{\"arrayField\":314159265016}");
struct GeneratedQuery254 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery254::query("{\"arrayField\":314159265002}");    BSONObj GeneratedQuery254::projection = fromjson("{a:1}");
struct GeneratedQuery255 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery255::query("{\"a\":0}");
struct GeneratedQuery256 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery256::query("{c:{\"$type\":5}}");
struct GeneratedQuery257 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery257::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery258 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery258::query("{\"arrayField\":null}");    BSONObj GeneratedQuery258::projection = fromjson("{b:1}");
struct GeneratedQuery259 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery259::query("{\"arrayField.a\":{\"$size\":NumberLong(314159265358979313)}}");    Query GeneratedQuery259::sortedQuery = appendSort(GeneratedQuery259::query);    BSONObj GeneratedQuery259::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery260 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery260::query("{\"c\":1}");
struct GeneratedQuery261 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery261::query("{\"arrayField\":{\"$mod\":[314159225,314159265]}}");    Query GeneratedQuery261::sortedQuery = appendSort(GeneratedQuery261::query);    
struct GeneratedQuery262 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery262::query("{\"a\":{\"$regex\":\"/caseless/i\"}}");    Query GeneratedQuery262::sortedQuery = appendSort(GeneratedQuery262::query);    
struct GeneratedQuery263 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery263::query("{c:{\"$regex\":\"/abc\\def/\"}}");
struct GeneratedQuery264 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery264::query("{\"$nor\":[{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery265 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery265::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    Query GeneratedQuery265::sortedQuery = appendSort(GeneratedQuery265::query);    BSONObj GeneratedQuery265::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery266 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery266::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery267 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery267::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    Query GeneratedQuery267::sortedQuery = appendSort(GeneratedQuery267::query);    
struct GeneratedQuery268 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery268::query("{\"b\":{\"$not\":{\"$in\":[{\"c\":'You can do anything, but not everything.'},{\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.',{\"locHaystack\":[-180.0,-90.0],\"arrayField\":[],\"_id\":{\"arrayField\":[['']]}}]},{\"locHaystack\":{ 'lng': -180, 'lat': -89.9},\"arrayField\":[{\"d\":''}]},{\"locHaystack\":{ 'lng': -179.9, 'lat': 89.9}},{\"$date\": 1391633433037}]}}}");    BSONObj GeneratedQuery268::projection = fromjson("{\"a\":1}");
struct GeneratedQuery269 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery269::query("{\"$or\":[{\"d\":{\"$gte\":314159265000}},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{c:{\"$date\": -111100000}},{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery270 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery270::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery270::projection = fromjson("{\"a\":{$elemMatch:{\"$where\":'(this.a || this.b || this.c || this.d) > 10',\"b\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}}}");
struct GeneratedQuery271 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery271::query("{\"arrayField\":{\"a\":''}}");
struct GeneratedQuery272 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery272::query("{\"_id\":{\"arrayField\":[{\"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}]}}");
struct GeneratedQuery273 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery273::query("{\"a\":{\"$date\": 1391633433037}}");    Query GeneratedQuery273::sortedQuery = appendSort(GeneratedQuery273::query);    
struct GeneratedQuery274 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery274::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery274::projection = fromjson("{a:1,_id:1}");
struct GeneratedQuery275 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery275::query("{\"d\":0}");    BSONObj GeneratedQuery275::projection = fromjson("{a:1}");
struct GeneratedQuery276 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery276::query("{\"c\":{\"$date\": -111100000}}");
struct GeneratedQuery277 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery277::query("{\"arrayField\":''}");
struct GeneratedQuery278 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery278::query("{c:{\"$not\":{\"$mod\":[314159295,314159205]}},\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"_id\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");    BSONObj GeneratedQuery278::projection = fromjson("{\"b\":1,\"b\":1}");
struct GeneratedQuery279 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery279::query("{\"$where\":'this.d != undefined'}");    Query GeneratedQuery279::sortedQuery = appendSort(GeneratedQuery279::query);    BSONObj GeneratedQuery279::projection = fromjson("{c:1}");
struct GeneratedQuery280 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery280::query("{a:{\"$mod\":[314159265,314159295],\"$mod\":[314159295,0],\"$elemMatch\":{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},\"arrayField\":1}}}");    BSONObj GeneratedQuery280::projection = fromjson("{d:1}");
struct GeneratedQuery281 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery281::query("{\"$or\":[{\"arrayField\":'You can do anything, but not everything.'},{\"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'}]}");
struct GeneratedQuery282 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery282::query("{\"_id\":null,c:{\"$regex\":\"/^abc(\\d+)/\"},b:0,\"b\":1,\"c\":{\"$type\":13}}");    BSONObj GeneratedQuery282::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery283 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery283::query("{\"c\":{\"$not\":{\"$mod\":[2147483647,314159275]}}}");
struct GeneratedQuery284 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery284::query("{_id:{\"$not\":{\"$exists\":{\"$date\": 1500000}}}}");    BSONObj GeneratedQuery284::projection = fromjson("{\"d\":{$elemMatch:{\"c\":false}},\"d\":1,c:1}");
struct GeneratedQuery285 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery285::query("{\"c\":{\"$type\":17}}");
struct GeneratedQuery286 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery286::query("{\"$and\":[{\"_id\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]}");    Query GeneratedQuery286::sortedQuery = appendSort(GeneratedQuery286::query);    BSONObj GeneratedQuery286::projection = fromjson("{\"b\":1,\"a\":1}");
struct GeneratedQuery287 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery287::query("{\"$and\":[{\"arrayField\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},{a:{\"$not\":{\"$exists\":true}}}]}");
struct GeneratedQuery288 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery288::query("{\"b\":{\"$date\": 1391633433037}}");    Query GeneratedQuery288::sortedQuery = appendSort(GeneratedQuery288::query);    BSONObj GeneratedQuery288::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery289 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery289::query("{\"a\":{\"$not\":{\"$mod\":[314159225,0]}}}");    Query GeneratedQuery289::sortedQuery = appendSort(GeneratedQuery289::query);    
struct GeneratedQuery290 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery290::query("{c:''}");
struct GeneratedQuery291 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery291::query("{\"arrayField.c.d\":{\"$all\":[null]}}");    Query GeneratedQuery291::sortedQuery = appendSort(GeneratedQuery291::query);    BSONObj GeneratedQuery291::projection = fromjson("{a:1}");
struct GeneratedQuery292 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery292::query("{\"c\":{\"$date\": -111100000}}");
struct GeneratedQuery293 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery293::query("{\"b\":{\"$elemMatch\":{\"d.d\":'The richest man is not he who has the most, but he who needs the least. anything'}}}");
struct GeneratedQuery294 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery294::query("{\"arrayField\":{\"$date\": -111100000}}");    Query GeneratedQuery294::sortedQuery = appendSort(GeneratedQuery294::query);    BSONObj GeneratedQuery294::projection = fromjson("{b:1}");
struct GeneratedQuery295 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery295::query("{a:'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");
struct GeneratedQuery296 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery296::query("{\"arrayField\":1}");    Query GeneratedQuery296::sortedQuery = appendSort(GeneratedQuery296::query);    
struct GeneratedQuery297 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery297::query("{\"arrayField\":2225073858072009000.99}");
struct GeneratedQuery298 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery298::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery298::projection = fromjson("{\"c\":1}");
struct GeneratedQuery299 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery299::query("{\"$or\":[{\"d\":{\"$all\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,25]},\"arrayField\":[{\"a\":{\"arrayField\":[],\"a\":'You can do anything, but not everything.'}}],\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',null]},''],'You can do anything, but not everything.']}},{\"arrayField\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},{\"arrayField.d.a\":{\"$size\":2147483647}}]}");    BSONObj GeneratedQuery299::projection = fromjson("{\"a\":1}");
struct GeneratedQuery300 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery300::query("{\"a.b\":{\"$type\":-1}}");
struct GeneratedQuery301 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery301::query("{\"$nor\":[{_id:0},{\"arrayField\":true}]}");
struct GeneratedQuery302 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return -100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery302::query("{\"b\":0}");
struct GeneratedQuery303 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery303::query("{\"arrayField._id.c\":{\"$type\":18}}");    Query GeneratedQuery303::sortedQuery = appendSort(GeneratedQuery303::query);    
struct GeneratedQuery304 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery304::query("{\"$or\":[{\"arrayField.a.b\":{\"$not\":{\"$gt\":{\"$date\": 1391633433037}}}}]}");
struct GeneratedQuery305 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery305::query("{b:{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery305::projection = fromjson("{\"_id\":{$elemMatch:{a:{\"$not\":{\"$gte\":'The richest man is not he who has the most, but he who needs the least. anything'}}}},\"b\":1}");
struct GeneratedQuery306 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery306::query("{\"$or\":[{\"arrayField\":null}]}");    BSONObj GeneratedQuery306::projection = fromjson("{\"d\":1}");
struct GeneratedQuery307 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery307::query("{\"a\":1}");
struct GeneratedQuery308 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 100; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery308::query("{b:314159265008}");    Query GeneratedQuery308::sortedQuery = appendSort(GeneratedQuery308::query);    
struct GeneratedQuery309 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery309::query("{\"a\":0.00000000049406564841}");
struct GeneratedQuery310 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery310::query("{\"d\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery310::projection = fromjson("{\"c\":{$slice:10}}");
struct GeneratedQuery311 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery311::query("{\"$nor\":[{\"b\":{\"$date\": 1202331498200}},{\"arrayField\":false},{\"_id.d\":'You can do anything, but not everything.'},{\"c\":{\"$date\": 1202331498200}}]}");
struct GeneratedQuery312 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery312::query("{\"a\":{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery313 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery313::query("{b:{\"$elemMatch\":{\"b\":{\"$not\":{\"$all\":[0,{\"arrayField\":['','You can do anything, but not everything.','',0,{\"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}]}]}},\"d\":0,\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-25,0.0]}}}}}}");    Query GeneratedQuery313::sortedQuery = appendSort(GeneratedQuery313::query);    
struct GeneratedQuery314 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery314::query("{\"loc\":{\"$geoWithin\":{\"$polygon\":[[-179.9,-90],[180.0,-25],[-25,33.3]],\"$uniqueDocs\":1}}}");    Query GeneratedQuery314::sortedQuery = appendSort(GeneratedQuery314::query);    
struct GeneratedQuery315 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery315::query("{\"$or\":[{\"b.a\":'Usted debe ser el cambio que deseas ver en el mundo.'},{\"b\":{\"$regex\":\"/caseless/i\"}}]}");    Query GeneratedQuery315::sortedQuery = appendSort(GeneratedQuery315::query);    BSONObj GeneratedQuery315::projection = fromjson("{\"c\":1}");
struct GeneratedQuery316 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery316::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery317 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery317::query("{\"c\":{\"locHaystack\":{ 'lng': 25, 'lat': 25}}}");    Query GeneratedQuery317::sortedQuery = appendSort(GeneratedQuery317::query);    BSONObj GeneratedQuery317::projection = fromjson("{\"a\":1}");
struct GeneratedQuery318 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery318::query("{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");    BSONObj GeneratedQuery318::projection = fromjson("{\"arrayField.$\":1,\"_id\":1}");
struct GeneratedQuery319 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery319::query("{\"$nor\":[{\"arrayField\":false}]}");
struct GeneratedQuery320 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery320::query("{\"$nor\":[{\"d.c\":{\"$not\":{\"$mod\":[314159265,2147483647]}}},{c:[null]}]}");
struct GeneratedQuery321 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery321::query("{\"d\":{\"$mod\":[314159275,314159205]}}");
struct GeneratedQuery322 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery322::query("{\"b\":{\"$regex\":\"/caseless/i\"}}");    BSONObj GeneratedQuery322::projection = fromjson("{c:1}");
struct GeneratedQuery323 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery323::query("{\"$or\":[{\"loc\":{\"$geoWithin\":{\"$box\":[[33.3,-25],[0,33.3]],\"$uniqueDocs\":true}}}]}");    BSONObj GeneratedQuery323::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery324 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery324::query("{\"a\":{\"$mod\":[2147483647,314159245]}}");    Query GeneratedQuery324::sortedQuery = appendSort(GeneratedQuery324::query);    BSONObj GeneratedQuery324::projection = fromjson("{c:{$slice:0}}");
struct GeneratedQuery325 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery325::query("{\"$or\":[{b:{\"$size\":314159275}}]}");
struct GeneratedQuery326 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery326::query("{\"b\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");    BSONObj GeneratedQuery326::projection = fromjson("{\"d\":1}");
struct GeneratedQuery327 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery327::query("{\"arrayField\":null}");    BSONObj GeneratedQuery327::projection = fromjson("{a:1}");
struct GeneratedQuery328 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery328::query("{\"b\":{\"$regex\":\"/abc\\def/\"}}");    Query GeneratedQuery328::sortedQuery = appendSort(GeneratedQuery328::query);    
struct GeneratedQuery329 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery329::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery330 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery330::query("{\"$or\":[{\"arrayField\":{\"$elemMatch\":{\"c\":{\"$not\":{\"$size\":NumberLong(314159265358979303)}},\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}}}]}");    BSONObj GeneratedQuery330::projection = fromjson("{\"a\":1,\"c\":1}");
struct GeneratedQuery331 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery331::query("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery332 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery332::query("{\"c\":{\"$mod\":[314159215,314159235]}}");
struct GeneratedQuery333 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery333::query("{\"c\":{\"$mod\":[314159215,314159215]}}");
struct GeneratedQuery334 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery334::query("{a:['I quit therapy because my analyst was trying to help me behind my back. anything','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"locLegacy\":[179.9,-25]}]}");    Query GeneratedQuery334::sortedQuery = appendSort(GeneratedQuery334::query);    BSONObj GeneratedQuery334::projection = fromjson("{\"d\":1,\"_id.c\":1}");
struct GeneratedQuery335 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery335::query("{\"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}");
struct GeneratedQuery336 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery336::query("{b:'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");    Query GeneratedQuery336::sortedQuery = appendSort(GeneratedQuery336::query);    
struct GeneratedQuery337 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery337::query("{\"arrayField\":{\"$all\":['You can do anything, but not everything.']}}");
struct GeneratedQuery338 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery338::query("{\"_id\":{\"$regex\":\"/^abc(\\d+)/\"},\"b\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],\"$where\":'String(this.a || this.b || this.c || this.d).length > 9',\"arrayField\":314159265016}");
struct GeneratedQuery339 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery339::query("{\"$and\":[{\"_id\":1},{\"b\":[true]},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"arrayField\":{\"$lt\":'',\"$mod\":[314159255,314159255],\"$elemMatch\":{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},\"$elemMatch\":{\"arrayField.a._id.c\":{\"$size\":NumberInt(0),\"$size\":NumberInt(314159235),\"$type\":16}}}},{\"_id\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}]}");
struct GeneratedQuery340 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery340::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery341 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery341::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    Query GeneratedQuery341::sortedQuery = appendSort(GeneratedQuery341::query);    BSONObj GeneratedQuery341::projection = fromjson("{c:1}");
struct GeneratedQuery342 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery342::query("{\"b\":'You can do anything, but not everything.'}");
struct GeneratedQuery343 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery343::query("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{a:{\"$regex\":\"/caseless/i\"}},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery344 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery344::query("{\"a\":314159265008}");    BSONObj GeneratedQuery344::projection = fromjson("{\"b\":1}");
struct GeneratedQuery345 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery345::query("{\"d\":0}");
struct GeneratedQuery346 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery346::query("{d:'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery347 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery347::query("{\"d\":314159265002,\"arrayField\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery347::projection = fromjson("{\"a\":1}");
struct GeneratedQuery348 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery348::query("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery348::projection = fromjson("{\"c\":1}");
struct GeneratedQuery349 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery349::query("{\"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}");
struct GeneratedQuery350 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery350::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery350::projection = fromjson("{\"b\":1}");
struct GeneratedQuery351 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery351::query("{d:{\"$mod\":[314159295,314159245]}}");
struct GeneratedQuery352 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery352::query("{d:{\"$elemMatch\":{\"c\":{\"$all\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}}}}");
struct GeneratedQuery353 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery353::query("{c:1}");    Query GeneratedQuery353::sortedQuery = appendSort(GeneratedQuery353::query);    BSONObj GeneratedQuery353::projection = fromjson("{b:1}");
struct GeneratedQuery354 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery354::query("{\"$and\":[{\"b\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"arrayField\":{\"$size\":NumberLong(314159265358979363)}}]}");
struct GeneratedQuery355 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery355::query("{\"b\":314159265010}");
struct GeneratedQuery356 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery356::query("{\"arrayField.c\":{\"$all\":[]}}");    BSONObj GeneratedQuery356::projection = fromjson("{\"c\":1}");
struct GeneratedQuery357 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery357::query("{a:{\"$regex\":\"/abc\\def/\"}}");
struct GeneratedQuery358 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery358::query("{\"b\":'You must be the change you wish to see in the world. anything'}");    BSONObj GeneratedQuery358::projection = fromjson("{d:{$slice:1}}");
struct GeneratedQuery359 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery359::query("{\"arrayField\":true}");
struct GeneratedQuery360 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery360::query("{\"$or\":[{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"c\":{\"$date\": 1500000}},{\"arrayField\":{\"$all\":[{\"$date\": 1500000},{\"arrayField\":[{\"b\":{\"arrayField\":[1]}}]},'','You can do anything, but not everything.',{\"c\":['',null],\"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}]}},{c:''}]}");
struct GeneratedQuery361 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery361::query("{\"a\":{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery362 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery362::query("{\"arrayField.c\":{\"$size\":NumberInt(-2147483648)}}");    BSONObj GeneratedQuery362::projection = fromjson("{\"c.a\":1}");
struct GeneratedQuery363 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery363::query("{\"b\":{\"$mod\":[314159235,314159215]}}");    Query GeneratedQuery363::sortedQuery = appendSort(GeneratedQuery363::query);    
struct GeneratedQuery364 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery364::query("{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'m'}}");
struct GeneratedQuery365 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery365::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery365::projection = fromjson("{\"a\":1}");
struct GeneratedQuery366 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery366::query("{\"$or\":[{a:{\"$type\":13}},{\"a\":{\"$regex\":\"/^abc(\\d+)/\"}}]}");
struct GeneratedQuery367 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery367::query("{\"arrayField\":{\"$date\": 1500000}}");
struct GeneratedQuery368 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery368::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    Query GeneratedQuery368::sortedQuery = appendSort(GeneratedQuery368::query);    BSONObj GeneratedQuery368::projection = fromjson("{b:{$slice:2}}");
struct GeneratedQuery369 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery369::query("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    Query GeneratedQuery369::sortedQuery = appendSort(GeneratedQuery369::query);    BSONObj GeneratedQuery369::projection = fromjson("{\"arrayField.$\":1,\"_id\":1}");
struct GeneratedQuery370 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery370::query("{\"arrayField\":{\"$not\":{\"$mod\":[314159205,2147483647]},\"$size\":314159255}}");
struct GeneratedQuery371 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery371::query("{\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}");    Query GeneratedQuery371::sortedQuery = appendSort(GeneratedQuery371::query);    BSONObj GeneratedQuery371::projection = fromjson("{\"c\":1,\"d\":1}");
struct GeneratedQuery372 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery372::query("{\"$nor\":[{\"d\":[{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],\"locHaystack\":{ 'lng': -33.3, 'lat': 25},\"locHaystack\":{ 'lng': -25, 'lat': -33.3}},null,-3.14159265359]}]}");
struct GeneratedQuery373 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery373::query("{\"d\":'Usted debe ser el cambio que deseas ver en el mundo.'}");
struct GeneratedQuery374 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery374::query("{a:{\"$elemMatch\":{\"arrayField\":{\"$date\": -111100000},\"a\":''}}}");    BSONObj GeneratedQuery374::projection = fromjson("{\"arrayField.$\":1,\"b\":1}");
struct GeneratedQuery375 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery375::query("{\"_id\":{\"$regex\":\"/^abc/\"}}");    BSONObj GeneratedQuery375::projection = fromjson("{c:1}");
struct GeneratedQuery376 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery376::query("{\"b\":-3.14159265000}");
struct GeneratedQuery377 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery377::query("{\"$or\":[{\"arrayField\":{\"$date\": -111100000}}]}");
struct GeneratedQuery378 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery378::query("{\"b\":{\"$not\":{\"$exists\":1}}}");
struct GeneratedQuery379 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery379::query("{\"$or\":[{b:{\"$all\":[[{\"arrayField\":['You can do anything, but not everything.'],\"a\":{\"locHaystack\":[0.0,-89.9]},\"arrayField\":[{\"arrayField\":[{\"b\":-3.14159265000},['You can do anything, but not everything.'],'You miss 100 percent of the shots you never take. anything']}]},0]]}},{\"$where\":'this.d != undefined'},{\"arrayField.d\":{\"$not\":{\"$elemMatch\":{c:{\"$mod\":[2147483647,314159275]}}},\"$exists\":true}},{\"arrayField.a\":{\"$type\":11}},{\"d\":''}]}");    Query GeneratedQuery379::sortedQuery = appendSort(GeneratedQuery379::query);    
struct GeneratedQuery380 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery380::query("{\"$or\":[{\"_id\":314159265012},{\"b\":{\"$exists\":1}}]}");
struct GeneratedQuery381 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery381::query("{\"b\":0}");
struct GeneratedQuery382 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery382::query("{\"b\":{\"$exists\":true}}");    Query GeneratedQuery382::sortedQuery = appendSort(GeneratedQuery382::query);    BSONObj GeneratedQuery382::projection = fromjson("{\"arrayField.$\":1,a:1,d:1}");
struct GeneratedQuery383 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery383::query("{\"c\":314159265008}");
struct GeneratedQuery384 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery384::query("{\"arrayField\":{\"$all\":[[{\"$date\": -111100000},314159265014],314159265009,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}}");    Query GeneratedQuery384::sortedQuery = appendSort(GeneratedQuery384::query);    
struct GeneratedQuery385 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery385::query("{a:{\"$date\": 1500000}}");
struct GeneratedQuery386 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery386::query("{\"b\":{\"$in\":[{\"$date\": 1500000},'You miss 100 percent of the shots you never take. anything']}}");
struct GeneratedQuery387 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery387::query("{\"a\":0}");    BSONObj GeneratedQuery387::projection = fromjson("{\"d\":1}");
struct GeneratedQuery388 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery388::query("{\"arrayField\":{\"$elemMatch\":{\"b\":{\"$exists\":1},\"d\":{\"$exists\":314159265018},\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}}}");
struct GeneratedQuery389 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery389::query("{\"arrayField\":{\"$lte\":{\"$date\": 1202331498200}}}");
struct GeneratedQuery390 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery390::query("{\"b\":{\"$mod\":[314159265,314159205]}}");
struct GeneratedQuery391 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery391::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery392 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery392::query("{\"arrayField\":{\"$all\":['Usted debe ser el cambio que deseas ver en el mundo.']}}");    Query GeneratedQuery392::sortedQuery = appendSort(GeneratedQuery392::query);    BSONObj GeneratedQuery392::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery393 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery393::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery394 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery394::query("{a:{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery394::projection = fromjson("{\"a\":1}");
struct GeneratedQuery395 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery395::query("{\"d\":314159265005}");
struct GeneratedQuery396 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery396::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10',\"$where\":'this.d != undefined'}");
struct GeneratedQuery397 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery397::query("{\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery398 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery398::query("{\"b\":{\"$gte\":null}}");    BSONObj GeneratedQuery398::projection = fromjson("{\"a\":1}");
struct GeneratedQuery399 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery399::query("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[179.9,90]},\"$maxDistance\":0}}}");
struct GeneratedQuery400 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery400::query("{\"$or\":[{\"arrayField\":false}]}");
struct GeneratedQuery401 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery401::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery402 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery402::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery402::projection = fromjson("{\"c\":{$elemMatch:{\"c\":314159265013}},c:1,\"b\":1}");
struct GeneratedQuery403 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery403::query("{\"$or\":[{\"a\":false}]}");
struct GeneratedQuery404 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery404::query("{\"a\":314159265013}");
struct GeneratedQuery405 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery405::query("{\"a\":314159265015}");    Query GeneratedQuery405::sortedQuery = appendSort(GeneratedQuery405::query);    BSONObj GeneratedQuery405::projection = fromjson("{b:1}");
struct GeneratedQuery406 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery406::query("{\"$nor\":[{_id:{\"$not\":{\"$size\":314159215},\"$type\":13,\"$size\":314159295}}]}");
struct GeneratedQuery407 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery407::query("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[25,0]}}}}");
struct GeneratedQuery408 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery408::query("{a:{\"$date\": -111100000}}");    BSONObj GeneratedQuery408::projection = fromjson("{\"b\":1}");
struct GeneratedQuery409 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery409::query("{\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}");
struct GeneratedQuery410 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery410::query("{\"$or\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{d:null}]}");
struct GeneratedQuery411 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery411::query("{\"$nor\":[{\"arrayField\":{\"d\":''}},{\"arrayField\":false},{\"arrayField\":{\"$date\": 1391633433037}}]}");
struct GeneratedQuery412 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery412::query("{\"c\":{\"$date\": -111100000}}");    Query GeneratedQuery412::sortedQuery = appendSort(GeneratedQuery412::query);    BSONObj GeneratedQuery412::projection = fromjson("{\"b\":1}");
struct GeneratedQuery413 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return -100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery413::query("{\"c\":314159265010}");
struct GeneratedQuery414 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery414::query("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[180,90.0]}}}}");    BSONObj GeneratedQuery414::projection = fromjson("{\"b\":1}");
struct GeneratedQuery415 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery415::query("{c:false}");    Query GeneratedQuery415::sortedQuery = appendSort(GeneratedQuery415::query);    BSONObj GeneratedQuery415::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery416 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery416::query("{\"_id\":{\"$date\": 1202331498200}}");
struct GeneratedQuery417 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery417::query("{\"arrayField\":{\"arrayField\":['',{\"locLegacy\":[0,-25],\"c\":{\"$date\": 1202331498200},\"arrayField\":[{\"locLegacy\":[25,-90.0],\"arrayField\":[{\"arrayField\":[0],\"c\":{\"locLegacy\":[0.0,-90]}}]}]},{\"_id\":{\"$date\": 1391633433037}}]}}");    Query GeneratedQuery417::sortedQuery = appendSort(GeneratedQuery417::query);    
struct GeneratedQuery418 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery418::query("{\"a\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    Query GeneratedQuery418::sortedQuery = appendSort(GeneratedQuery418::query);    BSONObj GeneratedQuery418::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery419 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery419::query("{c:{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery419::projection = fromjson("{\"b\":1,\"b\":1,\"b\":{$elemMatch:{\"d\":''}}}");
struct GeneratedQuery420 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery420::query("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery421 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery421::query("{\"a\":{\"$mod\":[314159225,0]}}");
struct GeneratedQuery422 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery422::query("{\"a\":[{\"$date\": 1500000},{\"c\":''},['']]}");
struct GeneratedQuery423 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery423::query("{\"$nor\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{\"c\":3.14159265359}]}");    BSONObj GeneratedQuery423::projection = fromjson("{c:1}");
struct GeneratedQuery424 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery424::query("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery425 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery425::query("{\"arrayField\":{\"$all\":[314159265018]}}");    BSONObj GeneratedQuery425::projection = fromjson("{\"c\":1,\"c\":1}");
struct GeneratedQuery426 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery426::query("{\"arrayField\":{\"$all\":[['',['','I quit therapy because my analyst was trying to help me behind my back. anything',{\"arrayField\":[{\"$date\": 1391633433037},{\"d\":'You can do anything, but not everything.'},{\"locLegacy\":[33.3,-25],\"a\":{\"locHaystack\":[0.0,90]},\"arrayField\":[{\"a\":null,\"arrayField\":['',{\"$date\": 1202331498200},['']]}]}],\"arrayField\":[]}]],{\"locHaystack\":{ 'lng': 33.3, 'lat': -90}},{\"$date\": 1500000}]}}");    BSONObj GeneratedQuery426::projection = fromjson("{\"b\":1}");
struct GeneratedQuery427 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery427::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery428 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery428::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery428::projection = fromjson("{\"d\":{$elemMatch:{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");
struct GeneratedQuery429 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery429::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery429::projection = fromjson("{\"c\":{$slice:0},\"c\":1,\"b\":{$elemMatch:{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}},_id:1}");
struct GeneratedQuery430 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery430::query("{c:{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery430::projection = fromjson("{\"a\":1}");
struct GeneratedQuery431 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery431::query("{\"$nor\":[{\"arrayField\":null}]}");
struct GeneratedQuery432 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery432::query("{\"a\":{\"$regex\":\"/cat/\"}}");    BSONObj GeneratedQuery432::projection = fromjson("{\"arrayField.$\":1,\"a\":1,\"b\":1}");
struct GeneratedQuery433 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery433::query("{\"a\":-314159265359}");
struct GeneratedQuery434 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery434::query("{\"arrayField\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");    BSONObj GeneratedQuery434::projection = fromjson("{\"arrayField.$\":1,_id:1}");
struct GeneratedQuery435 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery435::query("{\"$nor\":[{a:{\"$date\": -111100000}}]}");    Query GeneratedQuery435::sortedQuery = appendSort(GeneratedQuery435::query);    
struct GeneratedQuery436 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery436::query("{c:314159265019}");    BSONObj GeneratedQuery436::projection = fromjson("{\"b\":1}");
struct GeneratedQuery437 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery437::query("{\"arrayField\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");    Query GeneratedQuery437::sortedQuery = appendSort(GeneratedQuery437::query);    
struct GeneratedQuery438 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery438::query("{\"d\":[{\"$date\": 1391633433037},null,{\"arrayField\":['You can do anything, but not everything.']},{\"arrayField\":[['','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']]}]}");    Query GeneratedQuery438::sortedQuery = appendSort(GeneratedQuery438::query);    
struct GeneratedQuery439 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery439::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    Query GeneratedQuery439::sortedQuery = appendSort(GeneratedQuery439::query);    BSONObj GeneratedQuery439::projection = fromjson("{\"c\":1}");
struct GeneratedQuery440 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery440::query("{\"a\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery440::projection = fromjson("{\"b\":1}");
struct GeneratedQuery441 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery441::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"_id\":{\"$not\":{\"$type\":9}}}");
struct GeneratedQuery442 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery442::query("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":{\"$date\": 1391633433037}}}}");
struct GeneratedQuery443 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery443::query("{\"c\":1797693134862315799999}");    BSONObj GeneratedQuery443::projection = fromjson("{a:1,\"b\":1}");
struct GeneratedQuery444 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery444::query("{\"c\":-3.14159265859}");
struct GeneratedQuery445 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery445::query("{\"c\":'You can do anything, but not everything.'}");
struct GeneratedQuery446 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery446::query("{\"arrayField\":-3.14159265000}");
struct GeneratedQuery447 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery447::query("{c:true}");
struct GeneratedQuery448 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery448::query("{\"arrayField.c._id\":{\"$size\":NumberLong(314159265358979333)}}");    BSONObj GeneratedQuery448::projection = fromjson("{\"b\":1}");
struct GeneratedQuery449 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery449::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    Query GeneratedQuery449::sortedQuery = appendSort(GeneratedQuery449::query);    
struct GeneratedQuery450 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery450::query("{\"$or\":[{\"c\":314159265000},{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery451 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery451::query("{\"$nor\":[{a:''}]}");
struct GeneratedQuery452 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery452::query("{d:{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");    BSONObj GeneratedQuery452::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery453 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery453::query("{\"d\":{\"$size\":NumberLong(314159265358979383)}}");
struct GeneratedQuery454 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery454::query("{\"arrayField\":false}");    Query GeneratedQuery454::sortedQuery = appendSort(GeneratedQuery454::query);    
struct GeneratedQuery455 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery455::query("{\"arrayField\":0}");    Query GeneratedQuery455::sortedQuery = appendSort(GeneratedQuery455::query);    
struct GeneratedQuery456 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery456::query("{\"_id\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery456::projection = fromjson("{\"d\":1}");
struct GeneratedQuery457 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery457::query("{\"c\":314159265002}");
struct GeneratedQuery458 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery458::query("{\"arrayField\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}");
struct GeneratedQuery459 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery459::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery460 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery460::query("{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[3,1], [3,2], [2,7],[-2,5], [-4,9], [-10,10], [-11,20],[-7,-2], [-5,-5], [-1,-19],[1,-10], [2,-5], [3,-1],[0,0]]]}}}}");    Query GeneratedQuery460::sortedQuery = appendSort(GeneratedQuery460::query);    
struct GeneratedQuery461 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery461::query("{\"arrayField\":{\"$all\":[314159265015]}}");
struct GeneratedQuery462 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery462::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    Query GeneratedQuery462::sortedQuery = appendSort(GeneratedQuery462::query);    BSONObj GeneratedQuery462::projection = fromjson("{\"c\":1}");
struct GeneratedQuery463 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery463::query("{\"$nor\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}]}");    Query GeneratedQuery463::sortedQuery = appendSort(GeneratedQuery463::query);    BSONObj GeneratedQuery463::projection = fromjson("{\"c\":{$elemMatch:{\"arrayField\":{\"$not\":{\"$exists\":false}}}}}");
struct GeneratedQuery464 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery464::query("{\"$or\":[{\"_id\":{\"$type\":11}}]}");
struct GeneratedQuery465 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery465::query("{\"a\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    Query GeneratedQuery465::sortedQuery = appendSort(GeneratedQuery465::query);    
struct GeneratedQuery466 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery466::query("{\"arrayField\":{\"$size\":0}}");
struct GeneratedQuery467 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery467::query("{\"$nor\":[{\"arrayField.a.c\":{\"$mod\":[314159245,314159255]}}]}");
struct GeneratedQuery468 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery468::query("{\"arrayField\":{\"$in\":[null]}}");
struct GeneratedQuery469 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery469::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery470 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery470::query("{a:false}");    Query GeneratedQuery470::sortedQuery = appendSort(GeneratedQuery470::query);    
struct GeneratedQuery471 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery471::query("{\"$or\":[{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"arrayField.d\":{\"$mod\":[314159225,314159205],\"$not\":{\"$mod\":[314159205,314159265]},\"$nin\":['']}}]}");    Query GeneratedQuery471::sortedQuery = appendSort(GeneratedQuery471::query);    BSONObj GeneratedQuery471::projection = fromjson("{\"b\":{$slice:2}}");
struct GeneratedQuery472 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery472::query("{\"arrayField\":314159265012}");
struct GeneratedQuery473 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery473::query("{\"_id\":{\"$date\": 1202331498200}}");
struct GeneratedQuery474 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery474::query("{\"_id\":{\"$date\": 1202331498200}}");
struct GeneratedQuery475 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery475::query("{c:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'}}");
struct GeneratedQuery476 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery476::query("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}}}}");    Query GeneratedQuery476::sortedQuery = appendSort(GeneratedQuery476::query);    
struct GeneratedQuery477 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery477::query("{b:{\"$in\":[null],\"$lte\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}}");    BSONObj GeneratedQuery477::projection = fromjson("{\"d\":1}");
struct GeneratedQuery478 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery478::query("{a:{\"$ne\":null}}");
struct GeneratedQuery479 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery479::query("{a:'Usted puede hacer cualquier cosa, pero no todo.'}");    Query GeneratedQuery479::sortedQuery = appendSort(GeneratedQuery479::query);    BSONObj GeneratedQuery479::projection = fromjson("{\"b\":1}");
struct GeneratedQuery480 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery480::query("{\"arrayField.b\":{\"$size\":NumberInt(314159225)}}");
struct GeneratedQuery481 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery481::query("{\"$or\":[{\"arrayField\":[[[{\"$date\": 1500000},[]]]]}]}");
struct GeneratedQuery482 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery482::query("{\"arrayField\":{\"$all\":[{\"b\":314159265002},{\"arrayField\":[{\"arrayField\":[0]}]}]}}");
struct GeneratedQuery483 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery483::query("{\"b\":{\"$date\": 1202331498200}}");
struct GeneratedQuery484 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery484::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery485 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery485::query("{\"d\":1}");    BSONObj GeneratedQuery485::projection = fromjson("{c:1}");
struct GeneratedQuery486 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery486::query("{\"$or\":[{\"arrayField\":{\"$date\": 1391633433037}}]}");    Query GeneratedQuery486::sortedQuery = appendSort(GeneratedQuery486::query);    BSONObj GeneratedQuery486::projection = fromjson("{\"b\":1}");
struct GeneratedQuery487 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery487::query("{\"arrayField\":{\"$all\":[1,1797693134862315799999]}}");
struct GeneratedQuery488 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery488::query("{\"c\":0}");
struct GeneratedQuery489 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery489::query("{\"d\":{\"$all\":[1],\"$elemMatch\":{c:{\"$not\":{\"$exists\":false}}},\"$not\":{\"$exists\":0},\"$exists\":'You can do anything, but not everything.'}}");
struct GeneratedQuery490 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery490::query("{\"b\":{\"$size\":314159205}}");    BSONObj GeneratedQuery490::projection = fromjson("{a:1}");
struct GeneratedQuery491 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery491::query("{\"d\":{\"$mod\":[314159215,314159275]}}");    Query GeneratedQuery491::sortedQuery = appendSort(GeneratedQuery491::query);    
struct GeneratedQuery492 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery492::query("{\"b\":{\"$lt\":false}}");    Query GeneratedQuery492::sortedQuery = appendSort(GeneratedQuery492::query);    BSONObj GeneratedQuery492::projection = fromjson("{\"a\":1}");
struct GeneratedQuery493 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery493::query("{\"_id\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'sii'}}");
struct GeneratedQuery494 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery494::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    Query GeneratedQuery494::sortedQuery = appendSort(GeneratedQuery494::query);    BSONObj GeneratedQuery494::projection = fromjson("{\"b\":{$slice:1}}");
struct GeneratedQuery495 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery495::query("{\"$and\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");    Query GeneratedQuery495::sortedQuery = appendSort(GeneratedQuery495::query);    
struct GeneratedQuery496 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery496::query("{\"arrayField\":'You can do anything, but not everything.'}");    Query GeneratedQuery496::sortedQuery = appendSort(GeneratedQuery496::query);    
struct GeneratedQuery497 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery497::query("{b:314159265001}");    BSONObj GeneratedQuery497::projection = fromjson("{_id:1,\"c\":1}");
struct GeneratedQuery498 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery498::query("{d:314159265003}");    Query GeneratedQuery498::sortedQuery = appendSort(GeneratedQuery498::query);    BSONObj GeneratedQuery498::projection = fromjson("{\"d\":1,c:1}");
struct GeneratedQuery499 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery499::query("{\"$or\":[{\"arrayField\":{\"$date\": 1202331498200}}]}");    Query GeneratedQuery499::sortedQuery = appendSort(GeneratedQuery499::query);    BSONObj GeneratedQuery499::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery500 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery500::query("{\"arrayField\":314159265016}");    BSONObj GeneratedQuery500::projection = fromjson("{\"arrayField.$\":1,\"d\":1,\"b\":1}");
struct GeneratedQuery501 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery501::query("{\"d\":{\"$not\":{\"$not\":{\"$exists\":true}}}}");
struct GeneratedQuery502 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery502::query("{c:false}");
struct GeneratedQuery503 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return -1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery503::query("{\"b\":314159265008}");
struct GeneratedQuery504 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery504::query("{\"d.c\":{\"$all\":['The richest man is not he who has the most, but he who needs the least. anything']}}");    BSONObj GeneratedQuery504::projection = fromjson("{\"a\":1}");
struct GeneratedQuery505 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery505::query("{\"arrayField\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery505::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery506 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery506::query("{\"_id\":{\"$mod\":[2147483647,2147483647]}}");
struct GeneratedQuery507 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery507::query("{\"arrayField\":'You can do anything, but not everything.',\"arrayField\":{\"$elemMatch\":{\"d\":{\"$nin\":[{\"$date\": 1391633433037}]}}},\"arrayField\":{\"$elemMatch\":{\"$where\":'function myFunction() { return this.d != undefined; }'}},d:1,\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''},\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    Query GeneratedQuery507::sortedQuery = appendSort(GeneratedQuery507::query);    
struct GeneratedQuery508 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery508::query("{\"a\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery508::projection = fromjson("{\"c\":1}");
struct GeneratedQuery509 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery509::query("{\"c\":{\"$date\": 1500000}}");
struct GeneratedQuery510 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery510::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery510::projection = fromjson("{_id:1}");
struct GeneratedQuery511 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery511::query("{\"arrayField\":0}");    Query GeneratedQuery511::sortedQuery = appendSort(GeneratedQuery511::query);    BSONObj GeneratedQuery511::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery512 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery512::query("{\"$or\":[{c:{\"$date\": -111100000}},{\"_id\":{\"$elemMatch\":{\"c\":-3.14159265859}}}]}");    Query GeneratedQuery512::sortedQuery = appendSort(GeneratedQuery512::query);    
struct GeneratedQuery513 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery513::query("{\"arrayField.a\":{\"$size\":NumberLong(-314159265358979323)}}");    BSONObj GeneratedQuery513::projection = fromjson("{\"d\":1,\"b\":1}");
struct GeneratedQuery514 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery514::query("{\"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");    BSONObj GeneratedQuery514::projection = fromjson("{d:1}");
struct GeneratedQuery515 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery515::query("{\"$where\":'this.d != undefined'}");    Query GeneratedQuery515::sortedQuery = appendSort(GeneratedQuery515::query);    
struct GeneratedQuery516 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery516::query("{\"$or\":[{b:{\"$regex\":\"/\\d?[A-E]\\*/\"}}]}");    BSONObj GeneratedQuery516::projection = fromjson("{\"d\":1}");
struct GeneratedQuery517 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery517::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery518 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery518::query("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery519 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery519::query("{d:{\"$mod\":[314159275,314159255]}}");    BSONObj GeneratedQuery519::projection = fromjson("{\"c\":1}");
struct GeneratedQuery520 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery520::query("{\"$or\":[{\"arrayField\":314159265014}]}");    Query GeneratedQuery520::sortedQuery = appendSort(GeneratedQuery520::query);    
struct GeneratedQuery521 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery521::query("{\"arrayField\":{\"$elemMatch\":{\"b\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'ii'}}}}");    BSONObj GeneratedQuery521::projection = fromjson("{\"a\":1}");
struct GeneratedQuery522 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return -1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery522::query("{\"$or\":[{\"arrayField.b\":{\"$all\":[{\"$date\": 1202331498200},'You can do anything, but not everything.','You can do anything, but not everything.']}}]}");
struct GeneratedQuery523 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery523::query("{\"$nor\":[{\"a\":{\"$date\": 1500000}}]}");
struct GeneratedQuery524 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery524::query("{c:''}");
struct GeneratedQuery525 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery525::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery526 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery526::query("{\"c\":-314159265359}");    Query GeneratedQuery526::sortedQuery = appendSort(GeneratedQuery526::query);    BSONObj GeneratedQuery526::projection = fromjson("{\"c\":{$slice:2}}");
struct GeneratedQuery527 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery527::query("{\"c\":{\"$size\":NumberInt(-2147483648)}}");
struct GeneratedQuery528 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery528::query("{\"$nor\":[{d:{\"$date\": 1202331498200}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"b\":{\"$not\":{\"$not\":{\"$type\":3}}}}]}");
struct GeneratedQuery529 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery529::query("{c:{\"$date\": 1500000}}");
struct GeneratedQuery530 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery530::query("{\"$or\":[{\"a\":''},{\"arrayField\":{\"$all\":[{\"a\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']},1,{\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},'','']}},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"d\":314159265006},{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");
struct GeneratedQuery531 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery531::query("{\"arrayField._id.b\":{\"$all\":[{\"arrayField\":[],\"locLegacy\":[180,89.9]},{\"locHaystack\":[-180,90],\"b\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"locLegacy\":[180,90]},314159265015]}}");    Query GeneratedQuery531::sortedQuery = appendSort(GeneratedQuery531::query);    
struct GeneratedQuery532 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery532::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    Query GeneratedQuery532::sortedQuery = appendSort(GeneratedQuery532::query);    
struct GeneratedQuery533 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery533::query("{\"$or\":[{\"d\":{\"$regex\":\"/abc\\def/\"}}]}");
struct GeneratedQuery534 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery534::query("{\"arrayField\":0}");    BSONObj GeneratedQuery534::projection = fromjson("{d:1}");
struct GeneratedQuery535 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery535::query("{b:{\"locHaystack\":{ 'lng': -25, 'lat': -90}}}");
struct GeneratedQuery536 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery536::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery537 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery537::query("{\"arrayField\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}");
struct GeneratedQuery538 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a.c\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery538::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    Query GeneratedQuery538::sortedQuery = appendSort(GeneratedQuery538::query);    BSONObj GeneratedQuery538::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery539 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery539::query("{\"$nor\":[{\"arrayField\":1}]}");    BSONObj GeneratedQuery539::projection = fromjson("{\"b\":1}");
struct GeneratedQuery540 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery540::query("{\"arrayField\":{\"$size\":314159245}}");    BSONObj GeneratedQuery540::projection = fromjson("{\"b\":1}");
struct GeneratedQuery541 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery541::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery541::projection = fromjson("{_id:1}");
struct GeneratedQuery542 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery542::query("{\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");
struct GeneratedQuery543 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery543::query("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery544 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery544::query("{\"_id\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    Query GeneratedQuery544::sortedQuery = appendSort(GeneratedQuery544::query);    BSONObj GeneratedQuery544::projection = fromjson("{b:1,\"a\":1}");
struct GeneratedQuery545 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery545::query("{\"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");
struct GeneratedQuery546 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery546::query("{\"b\":{\"$not\":{\"$exists\":false}}}");    BSONObj GeneratedQuery546::projection = fromjson("{a:1}");
struct GeneratedQuery547 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery547::query("{a:'Usted debe ser el cambio que deseas ver en el mundo.'}");
struct GeneratedQuery548 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery548::query("{\"arrayField\":{\"$elemMatch\":{\"b\":{\"$not\":{\"$size\":NumberLong(314159265358979373)}}}}}");
struct GeneratedQuery549 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery549::query("{\"$nor\":[{d:[{\"c\":'The richest man is not he who has the most, but he who needs the least. anything',\"c\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,0.0]},\"c\":{\"$date\": 1202331498200}},{\"arrayField\":[-314159265359,0,null]}]}},{\"a\":{\"locHaystack\":[180,-25]}},{\"arrayField\":[{\"d\":'You can do anything, but not everything.'},'You can do anything, but not everything.',[['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],{\"locLegacy\":[0.0,0.0]}]]},['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']]},{_id:true}]}");
struct GeneratedQuery550 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery550::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery550::projection = fromjson("{\"b\":1}");
struct GeneratedQuery551 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery551::query("{\"$nor\":[{\"_id\":{\"$regex\":\"/^abc/\"}},{\"arrayField\":0}]}");
struct GeneratedQuery552 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery552::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery553 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery553::query("{\"$and\":[{c:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'}}]}");    Query GeneratedQuery553::sortedQuery = appendSort(GeneratedQuery553::query);    
struct GeneratedQuery554 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery554::query("{\"_id\":{\"$date\": -111100000}}");
struct GeneratedQuery555 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery555::query("{\"_id\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}");
struct GeneratedQuery556 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery556::query("{\"$nor\":[{_id:0},{\"a\":314159265009}]}");
struct GeneratedQuery557 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery557::query("{\"$or\":[{\"_id\":true},{\"b\":{\"$all\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}}]}");    Query GeneratedQuery557::sortedQuery = appendSort(GeneratedQuery557::query);    
struct GeneratedQuery558 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery558::query("{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery559 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return -10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery559::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery559::projection = fromjson("{\"b\":1}");
struct GeneratedQuery560 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery560::query("{\"c.d\":{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery561 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery561::query("{\"arrayField.b.d\":{\"$gt\":true,\"$exists\":1,\"$not\":{\"$size\":314159255}}}");
struct GeneratedQuery562 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery562::query("{\"arrayField\":0}");    Query GeneratedQuery562::sortedQuery = appendSort(GeneratedQuery562::query);    BSONObj GeneratedQuery562::projection = fromjson("{d:1}");
struct GeneratedQuery563 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery563::query("{\"d\":{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery564 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery564::query("{\"$or\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");    Query GeneratedQuery564::sortedQuery = appendSort(GeneratedQuery564::query);    
struct GeneratedQuery565 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery565::query("{\"c\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery565::projection = fromjson("{\"b\":1}");
struct GeneratedQuery566 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery566::query("{\"$or\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"arrayField\":314159265002}]}");
struct GeneratedQuery567 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery567::query("{\"$nor\":[{\"_id\":{\"$exists\":''}}]}");
struct GeneratedQuery568 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery568::query("{\"arrayField.c.b\":{\"$size\":314159265},\"b\":{\"$not\":{\"$not\":{\"$in\":[{\"arrayField\":[314159265005,null]}]}}},\"arrayField\":{\"$date\": 1391633433037}}");    Query GeneratedQuery568::sortedQuery = appendSort(GeneratedQuery568::query);    
struct GeneratedQuery569 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery569::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    Query GeneratedQuery569::sortedQuery = appendSort(GeneratedQuery569::query);    BSONObj GeneratedQuery569::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery570 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery570::query("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery571 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery571::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery572 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery572::query("{b:-3.14159265859}");
struct GeneratedQuery573 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery573::query("{\"$nor\":[{\"arrayField.c\":{\"$size\":NumberInt(314159205)}},{c:false}]}");
struct GeneratedQuery574 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery574::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery575 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery575::query("{\"$or\":[{\"b\":{\"$type\":7}}]}");
struct GeneratedQuery576 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{_id:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery576::query("{\"_id\":false}");    Query GeneratedQuery576::sortedQuery = appendSort(GeneratedQuery576::query);    
struct GeneratedQuery577 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery577::query("{\"c\":'You can do anything, but not everything.'}");
struct GeneratedQuery578 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery578::query("{a:{\"$mod\":[314159265,314159205]}}");
struct GeneratedQuery579 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery579::query("{\"$and\":[{\"$where\":'this.d != undefined'}]}");    BSONObj GeneratedQuery579::projection = fromjson("{\"b\":1,\"d\":1}");
struct GeneratedQuery580 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery580::query("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-179.9,0]}}}}");
struct GeneratedQuery581 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery581::query("{\"arrayField\":{\"$exists\":[{\"a\":null}],\"$mod\":[2147483647,314159205],\"$all\":[-3.14159265000]}}");
struct GeneratedQuery582 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery582::query("{\"$nor\":[{\"c\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}]}");
struct GeneratedQuery583 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery583::query("{\"d\":{\"$exists\":true}}");
struct GeneratedQuery584 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery584::query("{a:{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");    Query GeneratedQuery584::sortedQuery = appendSort(GeneratedQuery584::query);    BSONObj GeneratedQuery584::projection = fromjson("{\"c\":{$elemMatch:{c:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''},\"arrayField\":{\"$date\": 1391633433037},a:{\"$regex\":\"/cat/\"},\"arrayField\":-3.14159265000,\"b\":{\"$mod\":[314159255,2147483647]}}}}");
struct GeneratedQuery585 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery585::query("{\"arrayField\":'',\"c.c\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery586 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery586::query("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery587 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery587::query("{\"d\":{\"$mod\":[314159225,314159215]}}");
struct GeneratedQuery588 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery588::query("{\"arrayField\":'You can do anything, but not everything.'}");    Query GeneratedQuery588::sortedQuery = appendSort(GeneratedQuery588::query);    BSONObj GeneratedQuery588::projection = fromjson("{\"d\":1}");
struct GeneratedQuery589 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery589::query("{\"$and\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery590 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery590::query("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery591 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery591::query("{\"$nor\":[{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'s'}}]}");    Query GeneratedQuery591::sortedQuery = appendSort(GeneratedQuery591::query);    BSONObj GeneratedQuery591::projection = fromjson("{d:1}");
struct GeneratedQuery592 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery592::query("{\"arrayField\":true}");    BSONObj GeneratedQuery592::projection = fromjson("{\"b\":1,\"a\":1}");
struct GeneratedQuery593 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery593::query("{\"arrayField\":0}");
struct GeneratedQuery594 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery594::query("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");
struct GeneratedQuery595 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery595::query("{\"arrayField.d\":{\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}}}");    BSONObj GeneratedQuery595::projection = fromjson("{d:1}");
struct GeneratedQuery596 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery596::query("{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery597 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery597::query("{a:true}");    BSONObj GeneratedQuery597::projection = fromjson("{\"d\":{$elemMatch:{_id:314159265006}},b:1}");
struct GeneratedQuery598 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id.d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery598::query("{\"b\":{\"$mod\":[314159275,314159285]}}");    Query GeneratedQuery598::sortedQuery = appendSort(GeneratedQuery598::query);    
struct GeneratedQuery599 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery599::query("{\"arrayField.d\":{\"$mod\":[314159295,0],\"$exists\":0,\"$all\":[{\"b\":'You can do anything, but not everything.'}]}}");    BSONObj GeneratedQuery599::projection = fromjson("{\"a\":1}");
struct GeneratedQuery600 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery600::query("{\"b\":{\"$date\": 1391633433037}}");
struct GeneratedQuery601 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery601::query("{\"b\":{\"$type\":7}}");
struct GeneratedQuery602 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery602::query("{\"arrayField.b\":{\"$nin\":[{\"$date\": 1500000}]}}");
struct GeneratedQuery603 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery603::query("{\"arrayField.c.d\":{\"$all\":[{\"arrayField\":['',null,'You can do anything, but not everything.',true],\"locLegacy\":[-25,-33.3],\"a\":'',\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]}}]}}");
struct GeneratedQuery604 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery604::query("{\"$and\":[{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery605 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery605::query("{\"arrayField\":{\"$size\":NumberInt(-2147483648)}}");
struct GeneratedQuery606 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery606::query("{\"$nor\":[{\"$where\":'this.d != undefined'}]}");    Query GeneratedQuery606::sortedQuery = appendSort(GeneratedQuery606::query);    BSONObj GeneratedQuery606::projection = fromjson("{\"c\":1}");
struct GeneratedQuery607 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return -100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery607::query("{\"b\":{\"$regex\":\"/^abc/\"}}");    Query GeneratedQuery607::sortedQuery = appendSort(GeneratedQuery607::query);    BSONObj GeneratedQuery607::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery608 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery608::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery608::projection = fromjson("{\"b\":1,\"d\":1}");
struct GeneratedQuery609 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery609::query("{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery610 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery610::query("{c:{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery610::projection = fromjson("{\"arrayField.$\":1,a:1}");
struct GeneratedQuery611 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery611::query("{\"arrayField\":-3.14159265359}");    Query GeneratedQuery611::sortedQuery = appendSort(GeneratedQuery611::query);    BSONObj GeneratedQuery611::projection = fromjson("{\"c\":1}");
struct GeneratedQuery612 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery612::query("{\"$nor\":[{\"arrayField._id\":{\"$all\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"d\":[{\"arrayField\":['You can do anything, but not everything.',null,314159265012,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',0]},[1]]}]}},{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery613 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery613::query("{\"arrayField\":{\"$nin\":[{\"$date\": -111100000}]}}");
struct GeneratedQuery614 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery614::query("{\"arrayField\":null}");    Query GeneratedQuery614::sortedQuery = appendSort(GeneratedQuery614::query);    BSONObj GeneratedQuery614::projection = fromjson("{\"d\":1}");
struct GeneratedQuery615 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery615::query("{\"$nor\":[{\"arrayField\":{\"$type\":17,\"$mod\":[2147483647,314159285]}},{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[179.9,89.9],[33.3,-90.0]]}}}}]}");
struct GeneratedQuery616 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery616::query("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[3,0], [4,2], [2,3],[-2,5], [-4,9], [-10,10], [-11,20],[-3,-4], [-2,-8], [-1,-16],[1,-10], [2,-5], [3,-1],[0,0]]]}}}}");
struct GeneratedQuery617 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return -1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery617::query("{\"b\":false}");    BSONObj GeneratedQuery617::projection = fromjson("{\"a\":1}");
struct GeneratedQuery618 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery618::query("{\"d\":{\"$mod\":[314159255,314159205]}}");
struct GeneratedQuery619 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery619::query("{\"_id\":{\"$mod\":[314159285,314159255]}}");
struct GeneratedQuery620 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery620::query("{\"a\":{\"$date\": 1391633433037}}");
struct GeneratedQuery621 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery621::query("{d:{\"$not\":{\"$mod\":[314159285,314159235]}}}");    Query GeneratedQuery621::sortedQuery = appendSort(GeneratedQuery621::query);    
struct GeneratedQuery622 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery622::query("{\"$nor\":[{\"arrayField\":{\"$elemMatch\":{\"d\":0.00002225073858072014,\"arrayField\":{\"$date\": 1391633433037},\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''},\"c\":{\"$regex\":\"/abc\\def/\"}}}}]}");    BSONObj GeneratedQuery622::projection = fromjson("{b:1}");
struct GeneratedQuery623 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery623::query("{\"$and\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery624 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery624::query("{\"c\":{\"$mod\":[314159275,314159225]}}");    BSONObj GeneratedQuery624::projection = fromjson("{c:1}");
struct GeneratedQuery625 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery625::query("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]},\"$maxDistance\":314159265009}}}");    Query GeneratedQuery625::sortedQuery = appendSort(GeneratedQuery625::query);    
struct GeneratedQuery626 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery626::query("{\"a\":{\"$size\":NumberLong(314159265358979363)}}");    Query GeneratedQuery626::sortedQuery = appendSort(GeneratedQuery626::query);    
struct GeneratedQuery627 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery627::query("{\"$or\":[{\"d\":'You miss 100 percent of the shots you never take. anything'},{_id:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}]}");
struct GeneratedQuery628 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery628::query("{\"$nor\":[{b:314159265004}]}");    BSONObj GeneratedQuery628::projection = fromjson("{\"a\":1,a:1,\"a\":1}");
struct GeneratedQuery629 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery629::query("{\"$or\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}]}");
struct GeneratedQuery630 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery630::query("{\"$or\":[{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery631 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery631::query("{\"b\":{\"$not\":{\"$lt\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}}");
struct GeneratedQuery632 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery632::query("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery633 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery633::query("{\"arrayField\":1}");
struct GeneratedQuery634 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery634::query("{\"$nor\":[{\"arrayField\":{\"$mod\":[314159215,314159275]}}]}");
struct GeneratedQuery635 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery635::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery635::projection = fromjson("{\"c\":1}");
struct GeneratedQuery636 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery636::query("{\"$and\":[{\"b\":{\"$regex\":\"/(tang|tangerine|tan)/\"}},{\"c\":false},{\"a\":''},{\"d\":{\"$date\": 1391633433037}},{\"c\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}},{\"arrayField\":'You can do anything, but not everything.'}]}");    BSONObj GeneratedQuery636::projection = fromjson("{\"c\":1,c:1}");
struct GeneratedQuery637 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery637::query("{\"$or\":[{a:{\"locHaystack\":{ 'lng': -25, 'lat': 90}}},{\"arrayField\":{\"$date\": 1391633433037}}]}");    BSONObj GeneratedQuery637::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery638 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery638::query("{\"arrayField.b\":{\"$not\":{\"$exists\":1}}}");    BSONObj GeneratedQuery638::projection = fromjson("{\"d\":1,\"c\":1}");
struct GeneratedQuery639 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery639::query("{b:{\"$size\":314159285}}");    BSONObj GeneratedQuery639::projection = fromjson("{\"c\":1}");
struct GeneratedQuery640 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery640::query("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery641 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery641::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery642 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery642::query("{\"d\":{\"$type\":17}}");    BSONObj GeneratedQuery642::projection = fromjson("{\"d\":1}");
struct GeneratedQuery643 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery643::query("{\"$nor\":[{\"c\":{\"$all\":[0]}},{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[3,0], [4,2], [2,3],[-1,11], [-2,7], [-3,5], [-8,2],[-7,-2], [-5,-5], [-1,-19],[2,-9], [3,-6], [4,-2],[0,0]]]}}}}]}");
struct GeneratedQuery644 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery644::query("{\"$nor\":[{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[2,2], [1,4], [2,20],[-1,2], [-2,6], [-3,1],[-14,-1], [-10,-4], [-3,-20],[1,-20], [3,-10], [2,-3],[0,0]]]},\"$uniqueDocs\":false}}}]}");
struct GeneratedQuery645 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery645::query("{\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}");    Query GeneratedQuery645::sortedQuery = appendSort(GeneratedQuery645::query);    
struct GeneratedQuery646 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery646::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery646::projection = fromjson("{\"b\":1,\"b\":1}");
struct GeneratedQuery647 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery647::query("{c:true}");    BSONObj GeneratedQuery647::projection = fromjson("{\"b\":1,a:1}");
struct GeneratedQuery648 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery648::query("{\"b\":{\"$elemMatch\":{\"arrayField\":true,\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }',\"d\":0}}}");    BSONObj GeneratedQuery648::projection = fromjson("{c:1}");
struct GeneratedQuery649 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery649::query("{\"d\":''}");    Query GeneratedQuery649::sortedQuery = appendSort(GeneratedQuery649::query);    
struct GeneratedQuery650 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery650::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery651 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery651::query("{a:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'immiiim'}}");
struct GeneratedQuery652 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery652::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery653 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery653::query("{_id:{\"$all\":[{\"$date\": 1391633433037},null],\"$in\":[{\"locLegacy\":[-180,89.9]}],\"$exists\":true,\"$elemMatch\":{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }',\"$where\":'this.d != undefined'},\"$not\":{\"$exists\":'Usted puede hacer cualquier cosa, pero no todo.'},\"$gte\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}}");    Query GeneratedQuery653::sortedQuery = appendSort(GeneratedQuery653::query);    BSONObj GeneratedQuery653::projection = fromjson("{\"arrayField.$\":1,a:1}");
struct GeneratedQuery654 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery654::query("{\"$or\":[{\"arrayField\":{\"$date\": 1202331498200}}]}");    Query GeneratedQuery654::sortedQuery = appendSort(GeneratedQuery654::query);    BSONObj GeneratedQuery654::projection = fromjson("{\"c\":1,\"b\":{$elemMatch:{d:{\"$date\": 1500000},\"a\":false}}}");
struct GeneratedQuery655 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery655::query("{\"b\":[{\"$date\": 1391633433037},314159265012,'You can do anything, but not everything.']}");    BSONObj GeneratedQuery655::projection = fromjson("{\"a\":1}");
struct GeneratedQuery656 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery656::query("{\"c\":{\"$gt\":314159265009}}");    Query GeneratedQuery656::sortedQuery = appendSort(GeneratedQuery656::query);    
struct GeneratedQuery657 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery657::query("{\"$and\":[{\"_id\":{\"$size\":NumberInt(2147483647),\"$all\":[{\"locHaystack\":[25,90]},2225073858072009000.99],\"$ne\":{\"$date\": -111100000}}},{\"_id\":null}]}");
struct GeneratedQuery658 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery658::query("{\"b\":{\"$date\": 1391633433037}}");
struct GeneratedQuery659 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery659::query("{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [2,2],[3,3],[4,2],[2,2] ]]}}}}");    Query GeneratedQuery659::sortedQuery = appendSort(GeneratedQuery659::query);    
struct GeneratedQuery660 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery660::query("{\"arrayField.b\":{\"$mod\":[314159225,314159275]}}");    Query GeneratedQuery660::sortedQuery = appendSort(GeneratedQuery660::query);    BSONObj GeneratedQuery660::projection = fromjson("{\"b\":1}");
struct GeneratedQuery661 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery661::query("{\"$nor\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery662 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery662::query("{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    Query GeneratedQuery662::sortedQuery = appendSort(GeneratedQuery662::query);    BSONObj GeneratedQuery662::projection = fromjson("{\"a\":1,\"c\":1,\"d\":1,\"d\":1}");
struct GeneratedQuery663 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery663::query("{\"b\":{\"$mod\":[314159265,314159205]}}");
struct GeneratedQuery664 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery664::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery664::projection = fromjson("{\"b\":1}");
struct GeneratedQuery665 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery665::query("{\"d\":false}");
struct GeneratedQuery666 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery666::query("{\"$and\":[{a:{\"$mod\":[314159225,314159225]}},{\"arrayField\":{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}},{\"arrayField\":true},{\"arrayField\":{\"$size\":NumberInt(314159245),\"$type\":8,\"$mod\":[314159285,314159225],\"$exists\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}]}");
struct GeneratedQuery667 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery667::query("{\"arrayField\":[]}");
struct GeneratedQuery668 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return -10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery668::query("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery669 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery669::query("{\"arrayField.d\":{\"$in\":['You can do anything, but not everything.',''],\"$elemMatch\":{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'s'},\"d\":true},\"$all\":[{\"locHaystack\":{ 'lng': -25, 'lat': 0.0},\"locHaystack\":{ 'lng': -180.0, 'lat': 33.3}},{\"arrayField\":['You can do anything, but not everything.']},false]}}");
struct GeneratedQuery670 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery670::query("{\"c\":{\"$not\":{\"$nin\":[1]}}}");
struct GeneratedQuery671 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery671::query("{\"$and\":[{\"arrayField\":{\"a\":'You can do anything, but not everything.'}},{\"_id\":[{\"d\":'You can do anything, but not everything.'}]},{\"c\":314159265011},{\"a\":1},{\"arrayField\":{\"$all\":[{\"$date\": -111100000},{\"d\":314159265015}]}},{c:{\"$not\":{\"$not\":{\"$exists\":1}}}},{\"$where\":'this.d != undefined'},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"arrayField\":'Usted debe ser el cambio que deseas ver en el mundo.'},{b:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}},{\"c\":{\"$mod\":[314159265,314159225]}},{\"arrayField\":{\"$not\":{\"$mod\":[314159265,314159245]},\"$not\":{\"$elemMatch\":{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},\"arrayField\":{\"$date\": 1202331498200},\"arrayField\":{\"$all\":['Usted debe ser el cambio que deseas ver en el mundo.']},\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[25,-33.3],[179.9,89.9]]}}}}}}},{\"arrayField\":{\"$all\":[]}}]}");    Query GeneratedQuery671::sortedQuery = appendSort(GeneratedQuery671::query);    BSONObj GeneratedQuery671::projection = fromjson("{\"d\":1}");
struct GeneratedQuery672 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery672::query("{_id:false}");
struct GeneratedQuery673 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery673::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery673::projection = fromjson("{\"arrayField.$\":1,\"b\":1}");
struct GeneratedQuery674 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return -100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery674::query("{\"arrayField\":{\"$date\": 1391633433037}}");    Query GeneratedQuery674::sortedQuery = appendSort(GeneratedQuery674::query);    
struct GeneratedQuery675 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery675::query("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery676 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery676::query("{\"arrayField\":{\"$all\":['Usted puede hacer cualquier cosa, pero no todo.']}}");
struct GeneratedQuery677 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery677::query("{\"$nor\":[{b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}]}");    BSONObj GeneratedQuery677::projection = fromjson("{d:1}");
struct GeneratedQuery678 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery678::query("{_id:{\"$size\":314159225}}");
struct GeneratedQuery679 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery679::query("{\"$or\":[{c:{\"$mod\":[314159295,314159275]}},{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}]}");    BSONObj GeneratedQuery679::projection = fromjson("{\"d\":1}");
struct GeneratedQuery680 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery680::query("{\"$nor\":[{\"c\":{\"$type\":17}}]}");    BSONObj GeneratedQuery680::projection = fromjson("{\"a\":1}");
struct GeneratedQuery681 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery681::query("{\"$or\":[{\"arrayField.b\":{\"$mod\":[314159275,314159265]}},{\"d\":false},{d:{\"$date\": 1391633433037}}]}");    BSONObj GeneratedQuery681::projection = fromjson("{c:1}");
struct GeneratedQuery682 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery682::query("{\"arrayField\":1}");    BSONObj GeneratedQuery682::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery683 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery683::query("{\"$or\":[{\"arrayField\":314159265009}]}");
struct GeneratedQuery684 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return -100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery684::query("{\"a\":{\"$not\":{\"$size\":NumberLong(314159265358979383)}}}");
struct GeneratedQuery685 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery685::query("{\"$nor\":[{\"arrayField\":{\"$date\": 1391633433037}},{\"arrayField\":{\"$date\": 1391633433037}}]}");
struct GeneratedQuery686 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery686::query("{\"arrayField\":true}");
struct GeneratedQuery687 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery687::query("{\"d\":true}");
struct GeneratedQuery688 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery688::query("{\"arrayField\":'You miss 100 percent of the shots you never take. anything'}");
struct GeneratedQuery689 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery689::query("{b:'You miss 100 percent of the shots you never take. anything'}");    Query GeneratedQuery689::sortedQuery = appendSort(GeneratedQuery689::query);    BSONObj GeneratedQuery689::projection = fromjson("{\"b\":1}");
struct GeneratedQuery690 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery690::query("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}]}");
struct GeneratedQuery691 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery691::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    Query GeneratedQuery691::sortedQuery = appendSort(GeneratedQuery691::query);    BSONObj GeneratedQuery691::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery692 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery692::query("{\"arrayField\":{\"$not\":{\"$not\":{\"$not\":{\"$not\":{\"$not\":{\"$nin\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',314159265016]}}}}}}}");    BSONObj GeneratedQuery692::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery693 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery693::query("{\"arrayField\":{\"$elemMatch\":{\"d\":{\"$all\":[{\"$date\": 1202331498200},314159265013,'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"_id\":true}]},_id:{\"$size\":314159295}}}}");    BSONObj GeneratedQuery693::projection = fromjson("{\"d\":1}");
struct GeneratedQuery694 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery694::query("{\"a\":'You can do anything, but not everything.'}");
struct GeneratedQuery695 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery695::query("{d:'Usted puede hacer cualquier cosa, pero no todo.'}");
struct GeneratedQuery696 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery696::query("{\"$and\":[{b:{\"$date\": 1391633433037}}]}");    BSONObj GeneratedQuery696::projection = fromjson("{d:1}");
struct GeneratedQuery697 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery697::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery698 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery698::query("{\"c\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery699 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery699::query("{\"$nor\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");    BSONObj GeneratedQuery699::projection = fromjson("{\"a\":1}");
struct GeneratedQuery700 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery700::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery701 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery701::query("{a:{\"$type\":10}}");    BSONObj GeneratedQuery701::projection = fromjson("{c:1,\"d\":1}");
struct GeneratedQuery702 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery702::query("{\"arrayField.c\":{\"$not\":{\"$type\":16},\"$type\":7,\"$exists\":false}}");
struct GeneratedQuery703 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery703::query("{\"$nor\":[{\"b\":'You miss 100 percent of the shots you never take. anything'}]}");
struct GeneratedQuery704 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery704::query("{\"arrayField\":''}");
struct GeneratedQuery705 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery705::query("{\"d\":{\"$type\":2}}");
struct GeneratedQuery706 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery706::query("{\"a\":{\"$not\":{\"$all\":[[{\"arrayField\":[{\"locHaystack\":{ 'lng': -180.0, 'lat': 90}},true,{\"b\":'Usted puede hacer cualquier cosa, pero no todo.',\"locLegacy\":[-33.3,89.9]}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]}},{\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}],'',{\"arrayField\":[{\"$date\": 1391633433037}]},false]}}}");
struct GeneratedQuery707 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery707::query("{\"a\":{\"$mod\":[314159255,314159295]}}");
struct GeneratedQuery708 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery708::query("{d:{\"$not\":{\"$size\":NumberInt(314159255)}}}");    Query GeneratedQuery708::sortedQuery = appendSort(GeneratedQuery708::query);    
struct GeneratedQuery709 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery709::query("{\"a\":{\"$mod\":[314159285,314159205]}}");
struct GeneratedQuery710 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery710::query("{\"arrayField\":{\"$in\":[{\"locLegacy\":[-25,-90]}]}}");
struct GeneratedQuery711 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery711::query("{\"arrayField.b\":{\"$all\":[314159265016,'Usted debe ser el cambio que deseas ver en el mundo.']}}");
struct GeneratedQuery712 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery712::query("{\"d\":{\"$in\":[{\"locLegacy\":[180,0.0]}]}}");
struct GeneratedQuery713 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return -1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery713::query("{\"arrayField.c\":{\"$nin\":[1]}}");
struct GeneratedQuery714 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery714::query("{\"arrayField\":{\"$in\":[1,{\"$date\": -111100000}],\"$all\":[{},{\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"arrayField\":[0]}],\"$not\":{\"$type\":15}}}");
struct GeneratedQuery715 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery715::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery716 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery716::query("{\"b\":{\"$mod\":[314159235,314159245]}}");    BSONObj GeneratedQuery716::projection = fromjson("{\"arrayField.$\":1,\"c\":1}");
struct GeneratedQuery717 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery717::query("{d:{\"$regex\":\"/^abc/m\"}}");
struct GeneratedQuery718 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery718::query("{\"a\":{\"$exists\":0}}");
struct GeneratedQuery719 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery719::query("{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery720 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery720::query("{\"arrayField\":'You miss 100 percent of the shots you never take. anything'}");
struct GeneratedQuery721 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery721::query("{\"arrayField.b\":{\"$size\":NumberInt(314159285)}}");
struct GeneratedQuery722 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery722::query("{\"c\":2225073858072009000.99}");
struct GeneratedQuery723 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery723::query("{\"$nor\":[{\"a\":{\"$not\":{\"$gte\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}}]}");
struct GeneratedQuery724 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery724::query("{\"_id\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery724::projection = fromjson("{\"c\":1}");
struct GeneratedQuery725 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery725::query("{\"arrayField.c\":{\"$all\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',314159265017,1,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]}}]}}");
struct GeneratedQuery726 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery726::query("{\"$and\":[{\"arrayField\":{\"$date\": 1500000}}]}");    BSONObj GeneratedQuery726::projection = fromjson("{c:1,a:{$elemMatch:{\"arrayField\":{\"$all\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-25]}}]},\"b.d\":{\"$regex\":\"/abc\\def/\"}}}}");
struct GeneratedQuery727 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery727::query("{\"$or\":[{a:{\"$size\":NumberInt(-2147483648)}}]}");    BSONObj GeneratedQuery727::projection = fromjson("{\"a\":1}");
struct GeneratedQuery728 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery728::query("{\"c\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    BSONObj GeneratedQuery728::projection = fromjson("{\"a\":1,\"d\":1,\"d\":1}");
struct GeneratedQuery729 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery729::query("{\"c\":''}");    Query GeneratedQuery729::sortedQuery = appendSort(GeneratedQuery729::query);    
struct GeneratedQuery730 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery730::query("{\"d\":314159265007}");    BSONObj GeneratedQuery730::projection = fromjson("{\"a\":1}");
struct GeneratedQuery731 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery731::query("{\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");    Query GeneratedQuery731::sortedQuery = appendSort(GeneratedQuery731::query);    BSONObj GeneratedQuery731::projection = fromjson("{\"d\":1}");
struct GeneratedQuery732 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery732::query("{\"c\":{\"$exists\":false}}");
struct GeneratedQuery733 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery733::query("{a:''}");    BSONObj GeneratedQuery733::projection = fromjson("{\"d\":1}");
struct GeneratedQuery734 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery734::query("{\"loc\":{\"$nearSphere\":[33.3,89.9]}}");    Query GeneratedQuery734::sortedQuery = appendSort(GeneratedQuery734::query);    
struct GeneratedQuery735 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery735::query("{\"arrayField\":{\"$exists\":1,\"$mod\":[314159275,314159205]}}");
struct GeneratedQuery736 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery736::query("{\"c\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery737 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{_id:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery737::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    Query GeneratedQuery737::sortedQuery = appendSort(GeneratedQuery737::query);    BSONObj GeneratedQuery737::projection = fromjson("{\"c\":{$slice:0}}");
struct GeneratedQuery738 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery738::query("{\"a\":{\"$date\": 1202331498200}}");    Query GeneratedQuery738::sortedQuery = appendSort(GeneratedQuery738::query);    
struct GeneratedQuery739 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery739::query("{a:{\"$mod\":[314159295,314159205]}}");
struct GeneratedQuery740 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery740::query("{\"d\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery741 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery741::query("{\"a\":314159265008}");    BSONObj GeneratedQuery741::projection = fromjson("{\"c\":1}");
struct GeneratedQuery742 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery742::query("{\"$or\":[{\"arrayField\":{\"$date\": -111100000}},{\"b\":0},{\"c\":{\"$mod\":[314159215,314159225]}}]}");
struct GeneratedQuery743 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery743::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery743::projection = fromjson("{\"b\":{$slice:1}}");
struct GeneratedQuery744 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery744::query("{\"a\":'You miss 100 percent of the shots you never take. anything'}");
struct GeneratedQuery745 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery745::query("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery746 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery746::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery747 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery747::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery748 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery748::query("{\"$nor\":[{\"arrayField\":{\"$date\": -111100000}}]}");
struct GeneratedQuery749 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery749::query("{a:{\"$not\":{\"$nin\":[{\"$date\": -111100000},1]}}}");
struct GeneratedQuery750 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery750::query("{\"b\":0}");
struct GeneratedQuery751 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery751::query("{\"$nor\":[{\"c\":{\"$type\":127}},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");    BSONObj GeneratedQuery751::projection = fromjson("{b:1}");
struct GeneratedQuery752 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery752::query("{\"c\":1}");
struct GeneratedQuery753 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery753::query("{\"b\":null,\"arrayField.c\":{\"$not\":{\"$ne\":1},\"$ne\":false},a:{\"$mod\":[314159295,314159285]}}");    BSONObj GeneratedQuery753::projection = fromjson("{\"d\":{$slice:2}}");
struct GeneratedQuery754 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery754::query("{\"arrayField\":{\"$elemMatch\":{\"b\":{\"$type\":9},b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'i'}}}}");
struct GeneratedQuery755 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery755::query("{\"c\":{\"$regex\":\"/abc\\def/\"}}");
struct GeneratedQuery756 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery756::query("{\"a\":null}");    Query GeneratedQuery756::sortedQuery = appendSort(GeneratedQuery756::query);    
struct GeneratedQuery757 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery757::query("{\"b\":'You can do anything, but not everything.'}");
struct GeneratedQuery758 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery758::query("{\"$where\":'this.d != undefined'}");    Query GeneratedQuery758::sortedQuery = appendSort(GeneratedQuery758::query);    BSONObj GeneratedQuery758::projection = fromjson("{\"arrayField.$\":1,\"d\":1}");
struct GeneratedQuery759 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery759::query("{\"arrayField\":1}");    BSONObj GeneratedQuery759::projection = fromjson("{b:1}");
struct GeneratedQuery760 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery760::query("{b:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");    BSONObj GeneratedQuery760::projection = fromjson("{\"d\":1}");
struct GeneratedQuery761 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery761::query("{\"b.d\":{\"$date\": -111100000}}");
struct GeneratedQuery762 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery762::query("{\"$and\":[{\"d\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}},{\"d\":{\"$nin\":['',{\"$date\": -111100000},true],\"$type\":-1,\"$not\":{\"$all\":[{\"c\":{\"c\":''}},1,null,null]}}},{\"arrayField\":{\"$date\": 1500000}}]}");    Query GeneratedQuery762::sortedQuery = appendSort(GeneratedQuery762::query);    
struct GeneratedQuery763 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery763::query("{\"$or\":[{\"d.a\":{\"$regex\":\"/caseless/i\"}},{\"c\":314159265003},{\"arrayField\":{\"$size\":NumberLong(314159265358979343)}}]}");
struct GeneratedQuery764 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery764::query("{b:{\"$lte\":-314159265359}}");    Query GeneratedQuery764::sortedQuery = appendSort(GeneratedQuery764::query);    BSONObj GeneratedQuery764::projection = fromjson("{c:1,c:1,\"c\":1}");
struct GeneratedQuery765 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery765::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery766 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery766::query("{\"b\":null}");    Query GeneratedQuery766::sortedQuery = appendSort(GeneratedQuery766::query);    
struct GeneratedQuery767 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery767::query("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":{\"$date\": 1391633433037},c:{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}}}");
struct GeneratedQuery768 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery768::query("{\"arrayField\":''}");    Query GeneratedQuery768::sortedQuery = appendSort(GeneratedQuery768::query);    BSONObj GeneratedQuery768::projection = fromjson("{b:1}");
struct GeneratedQuery769 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery769::query("{\"arrayField\":{\"$size\":314159245}}");
struct GeneratedQuery770 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery770::query("{a:'You can do anything, but not everything.'}");
struct GeneratedQuery771 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery771::query("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery772 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery772::query("{\"$or\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'ismm'}}]}");
struct GeneratedQuery773 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery773::query("{\"b\":''}");
struct GeneratedQuery774 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery774::query("{a:'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery775 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery775::query("{\"a\":null}");
struct GeneratedQuery776 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery776::query("{\"arrayField\":1797693134862315799999}");
struct GeneratedQuery777 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery777::query("{\"$nor\":[{\"d\":{\"$date\": 1500000}}]}");
struct GeneratedQuery778 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery778::query("{\"$nor\":[{\"arrayField.a\":{\"$elemMatch\":{\"loc\":{\"$geoWithin\":{\"$box\":[[0,-33.3],[180.0,25]],\"$uniqueDocs\":1}},\"d\":{\"$not\":{\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"c\":{\"$regex\":\"/^abc/\"},\"_id\":{\"$not\":{\"$mod\":[314159285,314159285]}},\"a\":{\"$date\": 1202331498200}}}},\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }',\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}}},{\"b\":-3.14159265359},{\"c\":{\"$regex\":\"/^abc/\"}},{\"d\":{\"$date\": 1391633433037}},{c:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'si'}},{\"c\":{\"$exists\":false}}]}");    Query GeneratedQuery778::sortedQuery = appendSort(GeneratedQuery778::query);    
struct GeneratedQuery779 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery779::query("{\"$and\":[{\"b\":{\"$not\":{\"$gt\":'You can do anything, but not everything.'},\"$not\":{\"$mod\":[314159235,314159265]}}},{\"d\":{\"$ne\":{\"$date\": 1202331498200}}}]}");    BSONObj GeneratedQuery779::projection = fromjson("{\"b\":1}");
struct GeneratedQuery780 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery780::query("{\"$or\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{\"_id\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}]}");    Query GeneratedQuery780::sortedQuery = appendSort(GeneratedQuery780::query);    
struct GeneratedQuery781 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery781::query("{d:{\"$exists\":true}}");    Query GeneratedQuery781::sortedQuery = appendSort(GeneratedQuery781::query);    
struct GeneratedQuery782 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery782::query("{\"$nor\":[{c:{\"$not\":{\"$exists\":0}}}]}");
struct GeneratedQuery783 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{a:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery783::query("{\"$nor\":[{\"arrayField\":{\"$not\":{\"$not\":{\"$type\":3}},\"$gt\":false,\"$mod\":[2147483647,314159225],\"$exists\":false,\"$exists\":false,\"$elemMatch\":{\"$where\":'this.d != undefined',\"b\":{\"$regex\":\"/caseless/i\"}},\"$mod\":[314159265,314159275],\"$lt\":true}}]}");    Query GeneratedQuery783::sortedQuery = appendSort(GeneratedQuery783::query);    BSONObj GeneratedQuery783::projection = fromjson("{c:1}");
struct GeneratedQuery784 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery784::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery784::projection = fromjson("{_id:{$elemMatch:{\"c\":0}}}");
struct GeneratedQuery785 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery785::query("{\"arrayField\":false}");    Query GeneratedQuery785::sortedQuery = appendSort(GeneratedQuery785::query);    BSONObj GeneratedQuery785::projection = fromjson("{\"c\":1}");
struct GeneratedQuery786 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery786::query("{\"a\":314159265005}");    BSONObj GeneratedQuery786::projection = fromjson("{\"b\":1}");
struct GeneratedQuery787 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery787::query("{\"arrayField\":false}");    Query GeneratedQuery787::sortedQuery = appendSort(GeneratedQuery787::query);    
struct GeneratedQuery788 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery788::query("{\"$where\":'this.d != undefined',\"c\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery788::projection = fromjson("{c:1}");
struct GeneratedQuery789 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery789::query("{c:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'issm'}}");
struct GeneratedQuery790 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery790::query("{\"d\":{\"$mod\":[314159295,314159245]}}");    Query GeneratedQuery790::sortedQuery = appendSort(GeneratedQuery790::query);    BSONObj GeneratedQuery790::projection = fromjson("{a:1}");
struct GeneratedQuery791 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return -100; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery791::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery791::projection = fromjson("{\"c\":1}");
struct GeneratedQuery792 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery792::query("{\"c\":{\"$regex\":\"/abc\\def/\"}}");    Query GeneratedQuery792::sortedQuery = appendSort(GeneratedQuery792::query);    BSONObj GeneratedQuery792::projection = fromjson("{\"arrayField.$\":1,\"d\":1}");
struct GeneratedQuery793 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery793::query("{\"d\":{\"$not\":{\"$lte\":null}}}");
struct GeneratedQuery794 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery794::query("{\"$and\":[{\"d\":{\"$regex\":\"/caseless/i\"}}]}");
struct GeneratedQuery795 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery795::query("{\"d\":''}");
struct GeneratedQuery796 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery796::query("{\"$and\":[{\"arrayField\":false},{a:[{\"$date\": 1202331498200},'']}]}");
struct GeneratedQuery797 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery797::query("{\"$or\":[{\"d\":0.0},{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");    BSONObj GeneratedQuery797::projection = fromjson("{\"b\":1}");
struct GeneratedQuery798 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery798::query("{\"arrayField\":false}");
struct GeneratedQuery799 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery799::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery800 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery800::query("{\"$or\":[{\"arrayField.c\":{\"$elemMatch\":{d:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}}},{\"arrayField\":{\"$not\":{\"$type\":-1}}}]}");    Query GeneratedQuery800::sortedQuery = appendSort(GeneratedQuery800::query);    
struct GeneratedQuery801 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery801::query("{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}");
struct GeneratedQuery802 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery802::query("{\"$where\":'this.d != undefined'}");    Query GeneratedQuery802::sortedQuery = appendSort(GeneratedQuery802::query);    
struct GeneratedQuery803 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery803::query("{\"b\":{\"$not\":{\"$not\":{\"$mod\":[314159225,314159295]}}}}");    Query GeneratedQuery803::sortedQuery = appendSort(GeneratedQuery803::query);    BSONObj GeneratedQuery803::projection = fromjson("{\"arrayField.$\":1,\"a\":1}");
struct GeneratedQuery804 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery804::query("{\"$nor\":[{\"_id\":{\"$date\": 1500000}}]}");
struct GeneratedQuery805 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 100; }      static int nToLimit() { return 10; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery805::query("{\"a\":{\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9',\"arrayField\":'You can do anything, but not everything.',\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}}}");    BSONObj GeneratedQuery805::projection = fromjson("{\"c\":1}");
struct GeneratedQuery806 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery806::query("{\"$nor\":[{\"arrayField\":{\"$size\":NumberInt(314159245)}},{\"arrayField\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}");
struct GeneratedQuery807 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery807::query("{\"arrayField.a\":{\"$elemMatch\":{\"arrayField.d\":{\"$all\":[{\"arrayField\":[{\"arrayField\":[[false],true,[{\"arrayField\":[1797693134862315799999,['']]},0,false,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}},{\"a\":-3.14159265000}]]},'',314159265009,{\"d\":'Usted puede hacer cualquier cosa, pero no todo.'}]},null]},\"$where\":'this.d != undefined',\"a\":{\"$gt\":{\"$date\": 1391633433037}}}}}");
struct GeneratedQuery808 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery808::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery808::projection = fromjson("{\"d\":1}");
struct GeneratedQuery809 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery809::query("{\"arrayField\":0}");
struct GeneratedQuery810 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery810::query("{\"a\":{\"$gte\":''}}");
struct GeneratedQuery811 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery811::query("{b:{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery812 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery812::query("{a:false}");
struct GeneratedQuery813 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery813::query("{\"$nor\":[{\"b\":0}]}");    BSONObj GeneratedQuery813::projection = fromjson("{\"a\":1}");
struct GeneratedQuery814 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery814::query("{\"$and\":[{\"a\":1},{\"b\":null}]}");    Query GeneratedQuery814::sortedQuery = appendSort(GeneratedQuery814::query);    
struct GeneratedQuery815 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery815::query("{\"$or\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"d\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}]}");
struct GeneratedQuery816 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery816::query("{c:{\"a\":[{\"arrayField\":[{\"locHaystack\":[0.0,-90]}]}]}}");    BSONObj GeneratedQuery816::projection = fromjson("{a:1}");
struct GeneratedQuery817 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery817::query("{c:{\"$exists\":true}}");    BSONObj GeneratedQuery817::projection = fromjson("{\"b\":1}");
struct GeneratedQuery818 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery818::query("{\"d\":1,c:{\"$mod\":[314159235,314159225],\"$not\":{\"$elemMatch\":{_id:314159265004}},\"$all\":[{\"locHaystack\":[179.9,89.9]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0]}},null,{\"$date\": 1202331498200}],\"$elemMatch\":{b:'Usted debe ser el cambio que deseas ver en el mundo.'},\"$exists\":1,\"$mod\":[314159295,314159255]}}");    Query GeneratedQuery818::sortedQuery = appendSort(GeneratedQuery818::query);    BSONObj GeneratedQuery818::projection = fromjson("{\"_id\":1,c:1}");
struct GeneratedQuery819 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery819::query("{\"_id\":{\"$mod\":[314159215,314159295]}}");
struct GeneratedQuery820 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery820::query("{\"$and\":[{\"c\":{\"$date\": 1391633433037}}]}");
struct GeneratedQuery821 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery821::query("{\"$and\":[{\"arrayField\":null}]}");
struct GeneratedQuery822 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery822::query("{\"arrayField\":2225073858072009000.99}");    BSONObj GeneratedQuery822::projection = fromjson("{c:1}");
struct GeneratedQuery823 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery823::query("{\"b\":{\"$not\":{\"$mod\":[314159255,314159235]}}}");
struct GeneratedQuery824 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery824::query("{\"c\":[314159265012]}");    BSONObj GeneratedQuery824::projection = fromjson("{\"c\":1}");
struct GeneratedQuery825 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery825::query("{\"a\":-3.14159265000}");    Query GeneratedQuery825::sortedQuery = appendSort(GeneratedQuery825::query);    
struct GeneratedQuery826 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery826::query("{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'siims'}}");
struct GeneratedQuery827 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery827::query("{b:1}");    BSONObj GeneratedQuery827::projection = fromjson("{\"a\":1}");
struct GeneratedQuery828 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery828::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    Query GeneratedQuery828::sortedQuery = appendSort(GeneratedQuery828::query);    
struct GeneratedQuery829 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery829::query("{\"arrayField\":true}");    BSONObj GeneratedQuery829::projection = fromjson("{\"_id\":{$elemMatch:{\"arrayField\":{\"$date\": 1391633433037}}}}");
struct GeneratedQuery830 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery830::query("{\"c\":314159265010}");
struct GeneratedQuery831 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery831::query("{\"c\":{\"$size\":NumberLong(314159265358979333)}}");    BSONObj GeneratedQuery831::projection = fromjson("{\"a\":1}");
struct GeneratedQuery832 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery832::query("{\"arrayField\":'You can do anything, but not everything.'}");
struct GeneratedQuery833 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b.a\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery833::query("{b:314159265011}");    Query GeneratedQuery833::sortedQuery = appendSort(GeneratedQuery833::query);    BSONObj GeneratedQuery833::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery834 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery834::query("{\"c\":0}");
struct GeneratedQuery835 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery835::query("{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'s'}}");
struct GeneratedQuery836 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery836::query("{\"arrayField\":0}");
struct GeneratedQuery837 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery837::query("{\"$or\":[{a:{\"$exists\":1}},{\"arrayField\":{\"$date\": 1202331498200}}]}");
struct GeneratedQuery838 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery838::query("{\"_id\":{\"$date\": 1391633433037}}");
struct GeneratedQuery839 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery839::query("{\"c\":true}");    BSONObj GeneratedQuery839::projection = fromjson("{\"c\":1}");
struct GeneratedQuery840 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery840::query("{\"d\":''}");    Query GeneratedQuery840::sortedQuery = appendSort(GeneratedQuery840::query);    BSONObj GeneratedQuery840::projection = fromjson("{\"d\":1}");
struct GeneratedQuery841 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery841::query("{\"_id\":{\"$lte\":true}}");
struct GeneratedQuery842 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery842::query("{\"arrayField\":{\"$type\":16}}");
struct GeneratedQuery843 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery843::query("{\"a\":{\"$regex\":\"/cat/\"}}");    BSONObj GeneratedQuery843::projection = fromjson("{\"a\":1}");
struct GeneratedQuery844 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery844::query("{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'si'}}");
struct GeneratedQuery845 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery845::query("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery846 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery846::query("{\"$or\":[{\"c\":{\"$regex\":\"/^abc/m\"}}]}");
struct GeneratedQuery847 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery847::query("{\"arrayField\":{\"$exists\":true}}");
struct GeneratedQuery848 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery848::query("{b:{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery849 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery849::query("{\"arrayField\":'You can do anything, but not everything.'}");
struct GeneratedQuery850 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery850::query("{a:314159265001}");
struct GeneratedQuery851 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery851::query("{\"d\":0}");
struct GeneratedQuery852 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery852::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery852::projection = fromjson("{\"d\":1,d:1}");
struct GeneratedQuery853 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery853::query("{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'sss'}}");    Query GeneratedQuery853::sortedQuery = appendSort(GeneratedQuery853::query);    
struct GeneratedQuery854 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery854::query("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    Query GeneratedQuery854::sortedQuery = appendSort(GeneratedQuery854::query);    
struct GeneratedQuery855 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery855::query("{\"arrayField\":null}");
struct GeneratedQuery856 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery856::query("{\"_id\":{\"$regex\":\"/^abc/m\"}}");    Query GeneratedQuery856::sortedQuery = appendSort(GeneratedQuery856::query);    
struct GeneratedQuery857 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery857::query("{\"_id\":null}");
struct GeneratedQuery858 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery858::query("{\"$nor\":[{\"a\":{\"locHaystack\":[0.0,90.0],\"d\":{},\"locLegacy\":[-179.9,90],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,33.3]},\"locHaystack\":{ 'lng': 179.9, 'lat': 0.0}}}]}");
struct GeneratedQuery859 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery859::query("{\"b\":314159265017}");
struct GeneratedQuery860 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery860::query("{\"c.b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'si'}}");
struct GeneratedQuery861 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery861::query("{\"$or\":[{\"a\":true}]}");
struct GeneratedQuery862 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery862::query("{\"$and\":[{a:314159265008}]}");
struct GeneratedQuery863 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery863::query("{\"arrayField\":true}");    BSONObj GeneratedQuery863::projection = fromjson("{\"b\":1,\"c\":1}");
struct GeneratedQuery864 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery864::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    Query GeneratedQuery864::sortedQuery = appendSort(GeneratedQuery864::query);    
struct GeneratedQuery865 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery865::query("{\"_id\":'You can do anything, but not everything.'}");    Query GeneratedQuery865::sortedQuery = appendSort(GeneratedQuery865::query);    
struct GeneratedQuery866 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery866::query("{\"c\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery866::projection = fromjson("{\"b\":{$elemMatch:{\"a\":{\"$not\":{\"$all\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}},a:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}}}");
struct GeneratedQuery867 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery867::query("{\"arrayField\":''}");    BSONObj GeneratedQuery867::projection = fromjson("{\"a\":1}");
struct GeneratedQuery868 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery868::query("{b:{\"$all\":['You can do anything, but not everything.'],\"$mod\":[314159255,314159255],\"$mod\":[314159255,314159285],\"$in\":[]}}");
struct GeneratedQuery869 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery869::query("{\"a\":'You miss 100 percent of the shots you never take. anything'}");
struct GeneratedQuery870 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery870::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery871 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery871::query("{\"b\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery872 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery872::query("{\"arrayField.b\":{\"$elemMatch\":{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}}}");    Query GeneratedQuery872::sortedQuery = appendSort(GeneratedQuery872::query);    
struct GeneratedQuery873 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery873::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery874 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery874::query("{\"arrayField\":{\"$not\":{\"$gte\":true},\"$size\":NumberInt(314159265)}}");
struct GeneratedQuery875 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery875::query("{\"arrayField\":1}");    Query GeneratedQuery875::sortedQuery = appendSort(GeneratedQuery875::query);    BSONObj GeneratedQuery875::projection = fromjson("{\"a\":1}");
struct GeneratedQuery876 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery876::query("{\"arrayField\":true}");
struct GeneratedQuery877 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery877::query("{\"$or\":[{d:{\"a\":'You can do anything, but not everything.'}}]}");    BSONObj GeneratedQuery877::projection = fromjson("{\"d\":1,\"d\":1}");
struct GeneratedQuery878 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery878::query("{b:{\"$exists\":true}}");
struct GeneratedQuery879 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery879::query("{\"d\":{\"$mod\":[2147483647,314159255]}}");    BSONObj GeneratedQuery879::projection = fromjson("{\"b\":1}");
struct GeneratedQuery880 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery880::query("{c:{\"$regex\":\"/caseless/i\"}}");
struct GeneratedQuery881 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery881::query("{\"$or\":[{\"a\":{\"$type\":8}}]}");    Query GeneratedQuery881::sortedQuery = appendSort(GeneratedQuery881::query);    BSONObj GeneratedQuery881::projection = fromjson("{\"a\":1}");
struct GeneratedQuery882 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery882::query("{\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'ss'}}");    Query GeneratedQuery882::sortedQuery = appendSort(GeneratedQuery882::query);    BSONObj GeneratedQuery882::projection = fromjson("{b:1}");
struct GeneratedQuery883 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery883::query("{\"arrayField\":'Usted puede hacer cualquier cosa, pero no todo.'}");
struct GeneratedQuery884 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery884::query("{\"arrayField\":1}");
struct GeneratedQuery885 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery885::query("{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]}}}}");
struct GeneratedQuery886 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery886::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    Query GeneratedQuery886::sortedQuery = appendSort(GeneratedQuery886::query);    BSONObj GeneratedQuery886::projection = fromjson("{\"arrayField.$\":1,a:1}");
struct GeneratedQuery887 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery887::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery888 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery888::query("{\"$and\":[{\"a\":{\"$elemMatch\":{\"a\":{\"$date\": 1202331498200}}}},{a:{\"$mod\":[314159205,314159265]}},{a:0.00002225073858072014}]}");    Query GeneratedQuery888::sortedQuery = appendSort(GeneratedQuery888::query);    BSONObj GeneratedQuery888::projection = fromjson("{\"b\":1}");
struct GeneratedQuery889 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery889::query("{\"$or\":[{\"arrayField.c\":{\"$not\":{\"$not\":{\"$mod\":[314159285,2147483647]}}}},{\"_id\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'s'}},{\"_id\":{\"$not\":{\"$not\":{\"$lt\":{}}}}}]}");    Query GeneratedQuery889::sortedQuery = appendSort(GeneratedQuery889::query);    BSONObj GeneratedQuery889::projection = fromjson("{a:1}");
struct GeneratedQuery890 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery890::query("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery891 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery891::query("{\"a\":'You can do anything, but not everything.'}");    Query GeneratedQuery891::sortedQuery = appendSort(GeneratedQuery891::query);    BSONObj GeneratedQuery891::projection = fromjson("{\"arrayField.$\":1,\"c\":1,\"d\":1,\"_id\":1}");
struct GeneratedQuery892 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery892::query("{\"b\":null}");
struct GeneratedQuery893 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery893::query("{\"arrayField.c\":{\"$elemMatch\":{b:{\"$date\": 1202331498200}}}}");
struct GeneratedQuery894 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery894::query("{d:314159265015}");
struct GeneratedQuery895 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery895::query("{a:''}");
struct GeneratedQuery896 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery896::query("{\"c\":2225073858072009000.99}");    BSONObj GeneratedQuery896::projection = fromjson("{\"c\":1}");
struct GeneratedQuery897 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery897::query("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery898 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery898::query("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery898::projection = fromjson("{\"a\":1}");
struct GeneratedQuery899 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery899::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery900 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery900::query("{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'i'}}");
struct GeneratedQuery901 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery901::query("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    Query GeneratedQuery901::sortedQuery = appendSort(GeneratedQuery901::query);    BSONObj GeneratedQuery901::projection = fromjson("{\"c\":{$slice:0}}");
struct GeneratedQuery902 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery902::query("{\"b\":{\"$in\":[{\"arrayField\":[{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"b\":{\"_id\":'You can do anything, but not everything.'}},{\"$date\": 1202331498200},{\"a\":'Usted puede hacer cualquier cosa, pero no todo.'}],\"a\":'You miss 100 percent of the shots you never take. anything'},[314159265008]]},314159265018,314159265009]}}");    Query GeneratedQuery902::sortedQuery = appendSort(GeneratedQuery902::query);    
struct GeneratedQuery903 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery903::query("{\"b\":{\"$regex\":\"/^abc/\"}}");
struct GeneratedQuery904 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery904::query("{\"arrayField\":{\"$not\":{\"$lt\":'You can do anything, but not everything.'}}}");
struct GeneratedQuery905 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery905::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    Query GeneratedQuery905::sortedQuery = appendSort(GeneratedQuery905::query);    
struct GeneratedQuery906 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery906::query("{\"c\":true}");
struct GeneratedQuery907 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery907::query("{\"d\":{\"$mod\":[314159235,314159275]}}");    BSONObj GeneratedQuery907::projection = fromjson("{\"b\":{$elemMatch:{\"b\":{\"$date\": 1500000}}}}");
struct GeneratedQuery908 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery908::query("{_id:{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery908::projection = fromjson("{\"d.a\":1}");
struct GeneratedQuery909 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery909::query("{\"$nor\":[{\"arrayField\":'You must be the change you wish to see in the world. anything'},{\"arrayField\":''},{d:{\"$date\": -111100000}}]}");    BSONObj GeneratedQuery909::projection = fromjson("{\"_id\":{$elemMatch:{\"_id\":1}}}");
struct GeneratedQuery910 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery910::query("{\"b\":1}");
struct GeneratedQuery911 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery911::query("{d:'You can do anything, but not everything.'}");
struct GeneratedQuery912 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery912::query("{\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");
struct GeneratedQuery913 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery913::query("{\"arrayField\":[null]}");
struct GeneratedQuery914 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery914::query("{\"_id\":314159265002}");    BSONObj GeneratedQuery914::projection = fromjson("{\"d\":1}");
struct GeneratedQuery915 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery915::query("{b:[{\"arrayField\":[{\"a\":[{\"d\":314159265001}]},[''],{\"$date\": 1500000}],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,89.9]}},null]}");
struct GeneratedQuery916 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery916::query("{\"$and\":[{\"b\":314159265005},{a:'Usted debe ser el cambio que deseas ver en el mundo.'},{\"arrayField\":{\"$elemMatch\":{\"d\":{\"$regex\":\"/(a)|(b)/\"}}}},{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"a\":{\"$not\":{\"$not\":{\"$not\":{\"$nin\":[314159265008]}}}}},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{\"arrayField\":null},{\"c\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}},{\"c\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"b\":[314159265012],\"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]}}]},{\"arrayField.c\":{\"$size\":NumberInt(-314159265)}}]}");    BSONObj GeneratedQuery916::projection = fromjson("{\"arrayField.$\":1,c:1}");
struct GeneratedQuery917 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery917::query("{\"$nor\":[{\"arrayField\":{\"$all\":[{\"arrayField\":[]}]}},{\"arrayField\":{\"$elemMatch\":{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}}},{\"arrayField.a\":{\"$size\":NumberLong(314159265358979333)}},{\"$where\":'this.d != undefined'},{\"arrayField\":true},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"d\":{\"$not\":{\"$size\":314159245}}},{d:'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}}}}]}");    BSONObj GeneratedQuery917::projection = fromjson("{b:1}");
struct GeneratedQuery918 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery918::query("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery919 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery919::query("{b:{\"$all\":['You can do anything, but not everything.']}}");
struct GeneratedQuery920 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return -100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{b:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery920::query("{\"$nor\":[{\"arrayField.d.a\":{\"$size\":NumberLong(314159265358979383)}}]}");    Query GeneratedQuery920::sortedQuery = appendSort(GeneratedQuery920::query);    BSONObj GeneratedQuery920::projection = fromjson("{\"a\":1}");
struct GeneratedQuery921 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery921::query("{d:''}");    BSONObj GeneratedQuery921::projection = fromjson("{\"c\":1,c:1}");
struct GeneratedQuery922 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery922::query("{d:{\"$exists\":false}}");
struct GeneratedQuery923 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{d:1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery923::query("{\"c\":314159265015}");    Query GeneratedQuery923::sortedQuery = appendSort(GeneratedQuery923::query);    
struct GeneratedQuery924 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery924::query("{\"d\":0}");    BSONObj GeneratedQuery924::projection = fromjson("{\"d\":1}");
struct GeneratedQuery925 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery925::query("{\"$or\":[{\"_id\":{\"$ne\":314159265004}},{\"_id\":{\"locLegacy\":[180.0,-90.0],\"b\":{},\"c\":{\"a\":{\"arrayField\":['',true]},\"a\":'You can do anything, but not everything.',\"arrayField\":[{}]},\"b\":{\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"locLegacy\":[25,90.0]}}},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");
struct GeneratedQuery926 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery926::query("{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery927 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery927::query("{b:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'si'}}");    BSONObj GeneratedQuery927::projection = fromjson("{c:1}");
struct GeneratedQuery928 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery928::query("{\"a\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    Query GeneratedQuery928::sortedQuery = appendSort(GeneratedQuery928::query);    BSONObj GeneratedQuery928::projection = fromjson("{\"b\":1,\"c\":1}");
struct GeneratedQuery929 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery929::query("{\"c\":{\"$date\": -111100000}}");
struct GeneratedQuery930 {      static Query getQuery() { return query; }      static int nToSkip() { return 0; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery930::query("{\"$nor\":[{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}},{\"b\":{\"$date\": 1500000}},{\"arrayField.c\":{\"$elemMatch\":{\"a\":314159265002}}}]}");
struct GeneratedQuery931 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery931::query("{\"c\":null}");    Query GeneratedQuery931::sortedQuery = appendSort(GeneratedQuery931::query);    
struct GeneratedQuery932 {      static Query getQuery() { return query; }      static int nToSkip() { return 100; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery932::query("{c:{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery933 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery933::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery933::projection = fromjson("{\"arrayField.$\":1,\"c\":1}");
struct GeneratedQuery934 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery934::query("{\"arrayField\":true}");
struct GeneratedQuery935 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -10; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery935::query("{\"_id\":{\"$mod\":[314159265,314159245]}}");    Query GeneratedQuery935::sortedQuery = appendSort(GeneratedQuery935::query);    
struct GeneratedQuery936 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery936::query("{\"$nor\":[{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'s'}}]}");    BSONObj GeneratedQuery936::projection = fromjson("{a:1}");
struct GeneratedQuery937 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery937::query("{\"arrayField\":-3.14159265859}");
struct GeneratedQuery938 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 0; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery938::query("{\"_id\":{\"$date\": 1202331498200}}");
struct GeneratedQuery939 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery939::query("{\"a\":{\"$all\":[{\"b\":'Usted debe ser el cambio que deseas ver en el mundo.'},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]}}]}}");    Query GeneratedQuery939::sortedQuery = appendSort(GeneratedQuery939::query);    
struct GeneratedQuery940 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery940::query("{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[25,33.3]}}}}");    BSONObj GeneratedQuery940::projection = fromjson("{b:1}");
struct GeneratedQuery941 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery941::query("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery942 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery942::query("{\"a\":[{\"arrayField\":['',[{\"arrayField\":[{\"arrayField\":[]},null]}],[[314159265014],''],'',false,{\"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]}]}");
struct GeneratedQuery943 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery943::query("{\"$nor\":[{\"arrayField\":{\"$lte\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}}]}");    Query GeneratedQuery943::sortedQuery = appendSort(GeneratedQuery943::query);    BSONObj GeneratedQuery943::projection = fromjson("{\"b\":1,\"d\":1,\"d\":{$elemMatch:{c:'Usted debe ser el cambio que deseas ver en el mundo.'}}}");
struct GeneratedQuery944 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 100; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery944::query("{\"arrayField\":0}");
struct GeneratedQuery945 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery945::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery946 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery946::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery947 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery947::query("{\"$or\":[{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}]}");    Query GeneratedQuery947::sortedQuery = appendSort(GeneratedQuery947::query);    BSONObj GeneratedQuery947::projection = fromjson("{\"d\":1}");
struct GeneratedQuery948 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery948::query("{\"arrayField.d.a\":{\"$size\":NumberLong(0)}}");
struct GeneratedQuery949 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery949::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery950 {      static Query getQuery() { return query; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery950::query("{\"a\":314159265000}");
struct GeneratedQuery951 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery951::query("{\"b\":{\"$not\":{\"$type\":3}},\"d\":{\"$mod\":[314159235,314159235]},\"d\":true}");
struct GeneratedQuery952 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery952::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    Query GeneratedQuery952::sortedQuery = appendSort(GeneratedQuery952::query);    
struct GeneratedQuery953 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery953::query("{c:{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery953::projection = fromjson("{c:1}");
struct GeneratedQuery954 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery954::query("{\"$nor\":[{\"a\":{\"$date\": -111100000}},{\"d\":{\"$not\":{\"$type\":17},\"$gte\":'You can do anything, but not everything.'}},{d:{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}]}");    Query GeneratedQuery954::sortedQuery = appendSort(GeneratedQuery954::query);    
struct GeneratedQuery955 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery955::query("{\"b\":{\"$not\":{\"$size\":NumberLong(314159265358979373)}}}");
struct GeneratedQuery956 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery956::query("{\"$and\":[{\"c\":{\"$regex\":\"/cat/\"}}]}");
struct GeneratedQuery957 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery957::query("{\"b\":314159265006}");    Query GeneratedQuery957::sortedQuery = appendSort(GeneratedQuery957::query);    
struct GeneratedQuery958 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery958::query("{\"b\":false}");
struct GeneratedQuery959 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery959::query("{a:{\"$ne\":0}}");
struct GeneratedQuery960 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery960::query("{\"_id\":314159265006}");
struct GeneratedQuery961 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery961::query("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery962 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery962::query("{c:{\"$not\":{\"$exists\":0}}}");
struct GeneratedQuery963 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery963::query("{\"_id\":'The richest man is not he who has the most, but he who needs the least. anything'}");
struct GeneratedQuery964 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"b\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery964::query("{\"arrayField\":{\"$exists\":1}}");    Query GeneratedQuery964::sortedQuery = appendSort(GeneratedQuery964::query);    
struct GeneratedQuery965 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery965::query("{\"arrayField\":314159265005}");
struct GeneratedQuery966 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery966::query("{\"$or\":[{\"d\":{\"$mod\":[314159215,314159295]}}]}");    BSONObj GeneratedQuery966::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery967 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery967::query("{a:0}");    BSONObj GeneratedQuery967::projection = fromjson("{\"d\":{$slice:2},\"c\":1}");
struct GeneratedQuery968 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery968::query("{d:1}");    Query GeneratedQuery968::sortedQuery = appendSort(GeneratedQuery968::query);    
struct GeneratedQuery969 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return -1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery969::query("{\"d\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}");    Query GeneratedQuery969::sortedQuery = appendSort(GeneratedQuery969::query);    
struct GeneratedQuery970 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery970::query("{\"$or\":[{\"b\":{\"$all\":[{\"arrayField\":[{\"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}]},'You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}},null],\"$mod\":[314159285,314159295],\"$all\":[{}],\"$exists\":0}}]}");
struct GeneratedQuery971 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery971::query("{\"c\":{\"$date\": 1391633433037}}");
struct GeneratedQuery972 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery972::query("{\"b\":{\"$nin\":['You can do anything, but not everything.']}}");    BSONObj GeneratedQuery972::projection = fromjson("{\"b\":{$elemMatch:{\"arrayField\":314159265002}}}");
struct GeneratedQuery973 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery973::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    Query GeneratedQuery973::sortedQuery = appendSort(GeneratedQuery973::query);    BSONObj GeneratedQuery973::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery974 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return 10; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery974::query("{\"loc\":{\"$nearSphere\":[0.0,-90],\"$maxDistance\":314159265018}}");
struct GeneratedQuery975 {      static Query getQuery() { return query; }      static int nToSkip() { return 1; }      static int nToLimit() { return -1; }      static BSONObj* getProjection() { return NULL; }      static Query query;  }; Query GeneratedQuery975::query("{\"$nor\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery976 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery976::query("{\"a\":1}");    BSONObj GeneratedQuery976::projection = fromjson("{\"b\":1}");
struct GeneratedQuery977 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery977::query("{\"a\":{\"arrayField\":['']}}");
struct GeneratedQuery978 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery978::query("{\"$and\":[{\"_id\":{\"$regex\":\"/^abc(\\d+)/\"}}]}");    BSONObj GeneratedQuery978::projection = fromjson("{\"b\":1,\"d\":1,\"_id\":1}");
struct GeneratedQuery979 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery979::query("{b:''}");
struct GeneratedQuery980 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery980::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery981 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery981::query("{\"c\":{\"$mod\":[314159285,314159255],\"$mod\":[314159225,314159295],\"$ne\":314159265018}}");
struct GeneratedQuery982 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 10; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"_id\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery982::query("{\"$nor\":[{a:{\"$regex\":\"/caseless/i\"}}]}");    Query GeneratedQuery982::sortedQuery = appendSort(GeneratedQuery982::query);    
struct GeneratedQuery983 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery983::query("{\"$and\":[{a:{\"$date\": 1500000}},{\"d\":314159265010}]}");
struct GeneratedQuery984 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery984::query("{c:'You can do anything, but not everything.'}");
struct GeneratedQuery985 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery985::query("{\"arrayField\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery985::projection = fromjson("{\"b\":{$elemMatch:{c:'',\"$where\":'(this.a || this.b || this.c || this.d) > 10'}}}");
struct GeneratedQuery986 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery986::query("{a:''}");
struct GeneratedQuery987 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery987::query("{\"d\":314159265009}");
struct GeneratedQuery988 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{c:-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery988::query("{\"a\":[]}");    Query GeneratedQuery988::sortedQuery = appendSort(GeneratedQuery988::query);    
struct GeneratedQuery989 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery989::query("{\"$and\":[{\"arrayField\":null}]}");
struct GeneratedQuery990 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 1; }      static int nToLimit() { return -100; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"d\":-1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery990::query("{\"$or\":[{b:{\"$exists\":false}},{a:314159265013},{\"a\":0},{\"arrayField\":{\"$date\": 1391633433037}},{\"b\":314159265005}]}");    Query GeneratedQuery990::sortedQuery = appendSort(GeneratedQuery990::query);    BSONObj GeneratedQuery990::projection = fromjson("{\"d\":1}");
struct GeneratedQuery991 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"a\":1}")); }      static Query query;      static Query sortedQuery;      static BSONObj projection;  }; Query GeneratedQuery991::query("{\"$nor\":[{\"c\":false}]}");    Query GeneratedQuery991::sortedQuery = appendSort(GeneratedQuery991::query);    BSONObj GeneratedQuery991::projection = fromjson("{\"a\":1}");
struct GeneratedQuery992 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery992::query("{\"arrayField\":{\"_id\":[{\"arrayField\":['']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,33.3]}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}}");    BSONObj GeneratedQuery992::projection = fromjson("{\"b\":1}");
struct GeneratedQuery993 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery993::query("{\"arrayField\":{\"$in\":[{\"a\":'You can do anything, but not everything.'},{}]}}");
struct GeneratedQuery994 {      static Query getQuery() { return sortedQuery; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 1; }      static int nToLimit() { return 1; }      static Query& appendSort(Query& query) { return query.sort(fromjson("{\"c\":-1}")); }      static Query query;      static Query sortedQuery;  }; Query GeneratedQuery994::query("{\"a\":1}");    Query GeneratedQuery994::sortedQuery = appendSort(GeneratedQuery994::query);    
struct GeneratedQuery995 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery995::query("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery995::projection = fromjson("{a:1}");
struct GeneratedQuery996 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery996::query("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery997 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery997::query("{b:0,\"b\":{\"$date\": 1202331498200},\"arrayField\":{\"$size\":NumberLong(314159265358979363)}}");
struct GeneratedQuery998 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery998::query("{\"b\":{\"$date\": 1202331498200}}");
struct GeneratedQuery999 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;      static BSONObj projection;  }; Query GeneratedQuery999::query("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery999::projection = fromjson("{\"c\":1}");
struct GeneratedQuery1000 {      static Query getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static int nToSkip() { return 0; }      static int nToLimit() { return 0; }      static Query query;  }; Query GeneratedQuery1000::query("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");


    class All : public Suite {
    public:
        All() : Suite( "GeneratedQueries" ) { }
        void setupTests() {
            add< InsertDocuments >();   // must be run before the generated queries
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();

            add< InsertDocuments >();
            add< AscendingIdx >();
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();

            add< InsertDocuments >();
            add< DescendingIdx >();
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();

            add< InsertDocuments >();
            add< Compound1Idx >();
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();

            add< InsertDocuments >();
            add< Compound2Idx >();
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();

            add< InsertDocuments >();
            add< HashIdx >();
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();

            add< InsertDocuments >();
            add< GeoIdx >();
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();

            add< InsertDocuments >();
            add< TextIdx >();
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();
        }
    } myall;

}
