/** @file boiler_direct_test.cpp
*/

/**
 *    Copyright (C) 2008 10gen Inc.
 *
 *    This program is free software: you can redistribute it and/or  modify
 *    it under the terms of the GNU Affero General Public License, version 3,
 *    as published by the Free Software Foundation.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the GNU Affero General Public License in all respects
 *    for all of the code used other than as permitted herein. If you modify
 *    file(s) with this exception, you may extend this exception to your
 *    version of the file(s), but you are not obligated to do so. If you do not
 *    wish to do so, delete this exception statement from your version. If you
 *    delete this exception statement from all source files in the program,
 *    then also delete it in the license file.
 */

#include "mongo/pch.h"

#include "mongo/db/db.h"
#include "mongo/db/instance.h"
#include "mongo/db/json.h"
#include "mongo/db/lasterror.h"
#include "mongo/dbtests/dbtests.h"
#include "mongo/unittest/scoped_probe.h"

// NOTE: The queries within this file are automatically generated from the NLTK grammer
//       defined in QA-352.  Changes to the infrastructure should be made in the boiler
//       plate code; otherwise they may be overwritten.
namespace GeneratedTests {

    static const std::string& kNameSpace = "qry.QA401";

    // helper
    std::string getNextId() {
        static int id = 0;
        stringstream s;
        s << id++;
        return s.str();
    }

    // Base client helper
    struct ClientBase {
        ClientBase() { mongo::lastError.reset(new LastError()); }
        virtual ~ClientBase() { }

    protected:
        static bool error() {
            return !_client.getPrevError().getField( "err" ).isNull();
        }
        static DBDirectClient _client;
    };
    DBDirectClient ClientBase::_client;

    // Runner for generated queries
    template <typename Q>
    struct GeneratedQueryRunner : ClientBase {
        virtual void run(){
            auto_ptr<DBClientCursor> cursor = _client.query(kNameSpace, Q::getQuery(), 0, 0, Q::getProjection());
            ASSERT(!error());
            int count = 0;
            while (cursor->more()) {
                ++count;
                cursor->next();
            }
            ::mongo::unittest::ScopedProbe::lastQuery = Q::getQuery();
            ::mongo::unittest::ScopedProbe::lastProjection = Q::getProjection();
            ::mongo::unittest::ScopedProbe::lastCount = count;
        }
    };

    // Dataset used by generated queries
    struct InsertDocuments : ClientBase {
        virtual void run() {
            _client.dropCollection(kNameSpace);
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{},null]}],\"locHaystack\":[-25,89.9],\"arrayField\":[{\"arrayField\":[{\"locHaystack\":[-25,90.0]},false,[null],{\"$date\": 1391633433037}],\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',{\"b\":'You must be the change you wish to see in the world. anything'},{},{\"$date\": 1391633433037},['',{\"arrayField\":[false],\"locLegacy\":[-33.3,-25]},{\"b\":'You can do anything, but not everything.'},314159265007,null,'You miss 100 percent of the shots you never take. anything'],{\"arrayField\":[314159265000,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']},'I quit therapy because my analyst was trying to help me behind my back. anything']},314159265008]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[25,25]},\"loc\":{\"type\":\"Point\",\"coordinates\":[25,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1202331498200},\"arrayField\":['',{\"$date\": 1202331498200},{\"a\":true}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[1,{\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything'],\"arrayField\":[{\"$date\": 1500000},0,true,'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}]},\"b\":'',\"a\":'',\"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null,{\"b\":''},[{\"arrayField\":[[{\"b\":[true,{\"$date\": 1500000}]},'',{\"locLegacy\":[-180,0.0]}],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,89.9]}}]},{\"locLegacy\":[-25,-90]}],'']},{\"$date\": 1202331498200},'The richest man is not he who has the most, but he who needs the least. anything'],\"locLegacy\":[0.0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,0.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":-3.14159265000,\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]},\"locLegacy\":[-179.9,89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"d\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},{\"$date\": 1391633433037}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]},\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',{\"locLegacy\":[0.0,33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"locHaystack\":{ 'lng': -180.0, 'lat': -90.0},\"d\":{\"_id\":{\"a\":'Usted puede hacer cualquier cosa, pero no todo.',\"locHaystack\":[180.0,-90.0],\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'},\"a\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-25]}}]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[0],'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 0},\"c\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]},\"b\":{\"c\":{\"locHaystack\":[180,0]}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"d\":'You can do anything, but not everything.',\"arrayField\":[null],\"arrayField\":[{},null,'You can do anything, but not everything.',null],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[0],\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything'],\"arrayField\":['']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}],\"d\":'You can do anything, but not everything.',\"_id\":{\"locHaystack\":[0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.','','You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,0.0],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"locLegacy\":[-180,33.3]},{\"arrayField\":[{\"arrayField\":[{\"arrayField\":['You can do anything, but not everything.']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90]}}]},null,null]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": 1500000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,90]}},{\"$date\": 1391633433037}]]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037}],\"arrayField\":[{\"$date\": 1202331498200},[null,{\"arrayField\":[1797693134862315799999,{\"arrayField\":['You can do anything, but not everything.',0,'',{\"b\":{\"locHaystack\":[33.3,-25],\"locHaystack\":[180,0.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]}},null],\"arrayField\":[null],\"arrayField\":[314159265004,'You can do anything, but not everything.']}],\"arrayField\":[null]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":314159265016}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"d\":''}]},\"b\":314159265002}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": 1500000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'',\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null],\"arrayField\":[[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',314159265000],\"a\":0},{\"arrayField\":[],\"arrayField\":[]}],[{\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}],'Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265004,false,'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037}],\"locHaystack\":{ 'lng': -25, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locLegacy\":[180.0,0.0]},\"locHaystack\":{ 'lng': 180, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['You can do anything, but not everything.'],\"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,90],\"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null,\"arrayField\":[314159265011]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":{ 'lng': 180, 'lat': 0.0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-180.0,0]}],\"arrayField\":[{\"locLegacy\":[-33.3,33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0.0]},\"b\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',1,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['The richest man is not he who has the most, but he who needs the least. anything',{\"arrayField\":[-314159265359,''],\"arrayField\":[{},{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"c\":''}]}]},'The richest man is not he who has the most, but he who needs the least. anything'],false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"arrayField\":[[{\"$date\": 1500000},{\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]}}]},'You can do anything, but not everything.',false,1,{}]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[-3.14159265859,0,'',{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[0.0,-33.3]},0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":{ 'lng': -180.0, 'lat': 90},\"arrayField\":[{\"a\":1}],\"c\":'You miss 100 percent of the shots you never take. anything',\"locHaystack\":[-180.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}},1],\"locHaystack\":{ 'lng': 0, 'lat': -90}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-180,0.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}},1,{\"locHaystack\":{ 'lng': -180, 'lat': 0.0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','',false],\"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,-33.3],\"locHaystack\":[180.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"locHaystack\":{ 'lng': 25, 'lat': 90.0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"_id\":null,\"b\":{\"arrayField\":[{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]}}}],[{\"arrayField\":['']},'','The richest man is not he who has the most, but he who needs the least. anything','',null,{\"locHaystack\":[-25,-89.9]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"d\":{\"$date\": 1391633433037}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.','Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]}},null,314159265014,null],\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"locLegacy\":[-33.3,89.9]},1,{\"arrayField\":[{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"locLegacy\":[25,33.3]}]}]},'You miss 100 percent of the shots you never take. anything']}],\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"arrayField\":[314159265002,{\"arrayField\":[{\"arrayField\":[314159265017,true]},['The richest man is not he who has the most, but he who needs the least. anything',null,{\"c\":0.0},{\"a\":'You can do anything, but not everything.'}],[{\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"arrayField\":['You can do anything, but not everything.','You miss 100 percent of the shots you never take. anything']}]]}],\"b\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"arrayField\":[null,'',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]},\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"d\":0},\"arrayField\":[1,[['You can do anything, but not everything.',{\"$date\": 1391633433037}],''],314159265010,null,'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['','','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything','',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0.0]},\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},'You can do anything, but not everything.'],\"locHaystack\":{ 'lng': -33.3, 'lat': 25},\"arrayField\":[{\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',[0]],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":[{\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]}]}],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[['Echa de menos el 100 por ciento de los tiros que nunca toma.']]},\"arrayField\":[[['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"$date\": 1202331498200}],{\"locHaystack\":[-179.9,-25],\"locHaystack\":[-179.9,-89.9]},{\"$date\": 1202331498200},1,0.0,null,{\"a\":'The richest man is not he who has the most, but he who needs the least. anything'},314159265000],0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null,\"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[[''],0,[['You can do anything, but not everything.','',{\"locHaystack\":[25,90.0]}]],{\"locHaystack\":{ 'lng': 180, 'lat': 0}},[0,314159265002,314159265017,{\"$date\": 1500000}],{\"$date\": 1391633433037}],{},{\"locHaystack\":[180,25],\"c\":'You can do anything, but not everything.'},{\"locHaystack\":[0.0,25]},{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":[-180.0,33.3],\"b\":1}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":314159265011,\"locHaystack\":{ 'lng': -180.0, 'lat': 90},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,-33.3],\"locHaystack\":{ 'lng': 179.9, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0.0]},\"locHaystack\":{ 'lng': 0.0, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"b\":true}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[],{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"arrayField\":[]}],\"arrayField\":[{\"arrayField\":[{\"$date\": 1202331498200}],\"_id\":1,\"d\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'},-314159265359,false,{\"locLegacy\":[-33.3,-33.3]},314159265000,{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything','The richest man is not he who has the most, but he who needs the least. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.'],\"a\":{\"arrayField\":[{\"locHaystack\":[-33.3,90],\"arrayField\":[true,314159265010,1]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[],1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":0.00002225073858072014}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265013,{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0.0]}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',null,{\"locLegacy\":[0.0,0.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}}]},''],{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',[null,{\"arrayField\":[{\"b\":'You can do anything, but not everything.'}],\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"locHaystack\":[-179.9,-89.9]},[{\"locHaystack\":[-179.9,0]},314159265019,'You can do anything, but not everything.',314159265005,{\"$date\": 1391633433037},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]},\"locLegacy\":[-25,89.9]}]],0],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"arrayField\":[{\"arrayField\":['You must be the change you wish to see in the world. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":'Usted puede hacer cualquier cosa, pero no todo.'}],\"locHaystack\":{ 'lng': -180.0, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":[[[{\"$date\": 1391633433037},''],['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],{\"d\":{\"$date\": 1202331498200}}],'You miss 100 percent of the shots you never take. anything',null,{\"d\":{\"arrayField\":[{\"$date\": 1500000}]}},'You can do anything, but not everything.',{\"b\":0.0}],\"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"locLegacy\":[-180.0,-90],\"locHaystack\":[179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":''}],\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,25],\"d\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":{ 'lng': 25, 'lat': -89.9}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 25},\"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]},\"locLegacy\":[0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locLegacy\":[-33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locLegacy\":[33.3,-33.3]},\"locHaystack\":[-179.9,-89.9],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]},\"arrayField\":[314159265009,{\"arrayField\":[{\"$date\": 1500000}],\"a\":{\"arrayField\":[true]}},{\"arrayField\":[{\"_id\":'You can do anything, but not everything.'}],\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"arrayField\":[{},{\"d\":{\"c\":{\"b\":{\"locLegacy\":[-25,0.0]},\"locHaystack\":[0.0,0.0]}}},{\"$date\": -111100000}]},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,89.9]}},{\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},[2225073858072009000.99],{\"$date\": 1500000},{\"locHaystack\":[33.3,0]}]},{\"$date\": 1500000},['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything','You can do anything, but not everything.',{\"arrayField\":['','You can do anything, but not everything.']},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',314159265002,null]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{},'You can do anything, but not everything.',{\"c\":'Usted debe ser el cambio que deseas ver en el mundo.'},314159265012]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null,\"arrayField\":[{\"arrayField\":[[{\"a\":{\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}},\"c\":'You must be the change you wish to see in the world. anything'}],{\"locLegacy\":[-33.3,90],\"d\":0},[{\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}],0.00002225073858072014,'You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-89.9]}},{\"_id\":{\"locHaystack\":[-179.9,-33.3],\"d\":1}}],\"_id\":'You can do anything, but not everything.',\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[-314159265359,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-25]},\"locHaystack\":{ 'lng': 180, 'lat': -90}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":'The richest man is not he who has the most, but he who needs the least. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": 1500000},\"arrayField\":[1,{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]},\"arrayField\":[[null],[]],\"arrayField\":[{\"locLegacy\":[179.9,-33.3]}]}]},{\"locHaystack\":{ 'lng': -25, 'lat': 90}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"d\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]},\"locHaystack\":[179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265013,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": 1500000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[314159265011]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]},\"locHaystack\":{ 'lng': 180.0, 'lat': 89.9}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":['',{\"arrayField\":[{\"locLegacy\":[33.3,89.9]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000}],\"arrayField\":['',{\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You must be the change you wish to see in the world. anything','You can do anything, but not everything.',[314159265012,null,'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],0.00000000049406564841,{\"c\":{\"$date\": 1202331498200}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',null,'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'',\"locHaystack\":{ 'lng': -33.3, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],\"d\":{\"$date\": 1500000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},0.00000000049406564841,'',{\"$date\": 1391633433037},{\"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': 25},\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0.0]},\"arrayField\":['']}],\"locLegacy\":[-33.3,-90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You miss 100 percent of the shots you never take. anything','You can do anything, but not everything.',{\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},1,'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null]}],\"locHaystack\":[180,0],\"arrayField\":[{\"c\":'The richest man is not he who has the most, but he who needs the least. anything',\"b\":314159265016}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}},'Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":true,\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'],\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"locHaystack\":{ 'lng': 179.9, 'lat': 90},\"arrayField\":[]},\"a\":[{\"_id\":{\"arrayField\":[314159265007]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',{\"arrayField\":['You can do anything, but not everything.',null,{\"locHaystack\":[180,-90],\"locLegacy\":[-180,0.0],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]},\"arrayField\":[{\"arrayField\":[{}]},'Usted debe ser el cambio que deseas ver en el mundo.',{}]},{\"$date\": 1500000},false,'You can do anything, but not everything.']},{\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},{\"$date\": 1391633433037}]},{\"arrayField\":[0]},{\"arrayField\":[],\"locLegacy\":[-180.0,89.9]},{\"c\":314159265003,\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},{\"locHaystack\":{ 'lng': 180.0, 'lat': 25}},{\"locLegacy\":[-180,89.9],\"locHaystack\":[0.0,0]},{\"arrayField\":['You can do anything, but not everything.'],\"d\":false},'',{\"c\":'I quit therapy because my analyst was trying to help me behind my back. anything'},{\"locHaystack\":{ 'lng': 180, 'lat': -90}},[314159265005],{\"arrayField\":[314159265012]},false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Usted debe ser el cambio que deseas ver en el mundo.',\"locHaystack\":{ 'lng': 180, 'lat': -25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":['Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"locHaystack\":[-25,90],\"locLegacy\":[25,89.9]},{\"$date\": -111100000},{\"d\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},[314159265015,'You can do anything, but not everything.',null],null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]}},null,'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-180.0,89.9],\"arrayField\":[0,{\"arrayField\":[{}]}]},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":{ 'lng': 180.0, 'lat': 25}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[],\"arrayField\":['You miss 100 percent of the shots you never take. anything',{\"b\":{\"$date\": 1391633433037}}],\"locLegacy\":[180.0,-90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,-33.3],\"arrayField\":[{\"$date\": -111100000},[{\"arrayField\":['']},{\"$date\": 1500000}]],\"locHaystack\":[-33.3,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]}},{\"locLegacy\":[-180.0,25]},{\"locHaystack\":[0,0.0],\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"$date\": 1202331498200},1797693134862315799999,314159265012,null]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":1,\"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"locHaystack\":[-179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -89.9},\"locHaystack\":{ 'lng': 0.0, 'lat': -33.3},\"d\":{},\"locHaystack\":{ 'lng': 179.9, 'lat': 90},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[0.0,33.3]},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}},true,{\"$date\": -111100000},{\"$date\": -111100000},{\"locLegacy\":[25,90.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":['',{\"a\":true},{\"d\":true}]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-25,25]},314159265015,{\"d\":'You must be the change you wish to see in the world. anything'},{\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-25],\"arrayField\":[true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"c\":{\"locHaystack\":{ 'lng': 180.0, 'lat': -33.3}},\"a\":'Usted puede hacer cualquier cosa, pero no todo.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265017,\"locHaystack\":{ 'lng': -33.3, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,{\"b\":''}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[0,{\"locLegacy\":[-33.3,-25]}]],\"a\":{\"arrayField\":[{\"locHaystack\":[25,90.0],\"arrayField\":[{\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"_id\":'You can do anything, but not everything.'},{\"locHaystack\":[33.3,0.0],\"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}]},\"arrayField\":['You can do anything, but not everything.',null,{},{\"d\":'You can do anything, but not everything.',\"arrayField\":[[{\"a\":0},[['The richest man is not he who has the most, but he who needs the least. anything']]]]}],\"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"a\":{\"$date\": 1202331498200}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,0.0],\"a\":{\"locHaystack\":[33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"locLegacy\":[-33.3,0]},{\"locHaystack\":{ 'lng': 179.9, 'lat': 0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"c\":true}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":[{\"$date\": -111100000}],\"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[0.0,-33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1202331498200},\"b\":{\"arrayField\":[{\"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},'You can do anything, but not everything.'],\"d\":314159265011}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]},\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]},\"arrayField\":['',{\"$date\": 1202331498200},['']],\"arrayField\":[{\"locHaystack\":[179.9,25]},'You can do anything, but not everything.',false],\"arrayField\":[false],\"b\":'You can do anything, but not everything.'},'',{\"_id\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,-33.3],\"_id\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]},\"a\":{\"locLegacy\":[-25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"$date\": -111100000}]},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"a\":0.0},null,'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]},\"arrayField\":[{\"$date\": 1202331498200},false,{\"$date\": 1500000},{\"arrayField\":['You can do anything, but not everything.'],\"locHaystack\":{ 'lng': -33.3, 'lat': 90}}],\"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',true,{\"$date\": -111100000}],\"locLegacy\":[180,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":-314159265359}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,'You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"locHaystack\":{ 'lng': 180, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[null,'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',{\"locLegacy\":[179.9,-25]}],\"arrayField\":[{\"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"d\":null},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]},\"arrayField\":[null,0,[0],'']},{\"a\":'You can do anything, but not everything.'},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]},\"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[null,0.0],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]}},{\"arrayField\":[null]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037}],\"b\":{\"c\":{\"arrayField\":['',[]]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',1],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"b\":'You miss 100 percent of the shots you never take. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":[-180,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"arrayField\":[{\"locHaystack\":{ 'lng': 0, 'lat': 90}},[{\"b\":'',\"arrayField\":[0,[{\"a\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"arrayField\":[314159265004]}]]},'You miss 100 percent of the shots you never take. anything',0,true,null]]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': 89.9},\"locHaystack\":{ 'lng': 25, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'',\"locLegacy\":[-180.0,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,89.9]},\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"c\":{\"$date\": 1202331498200}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265000,null],\"arrayField\":['You can do anything, but not everything.','Usted puede hacer cualquier cosa, pero no todo.',-3.14159265859],\"locHaystack\":{ 'lng': 180, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":[314159265009]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},null,{\"arrayField\":['You can do anything, but not everything.',{\"a\":'You can do anything, but not everything.',\"d\":{\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90.0]}}}},{\"arrayField\":[false]},{\"locHaystack\":{ 'lng': -33.3, 'lat': -89.9},\"arrayField\":[{},314159265002,null]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[['',{\"locLegacy\":[0.0,-89.9],\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,25]}},1,{\"arrayField\":['',{\"arrayField\":[null]}]},{\"locHaystack\":{ 'lng': -33.3, 'lat': 0}}],{\"b\":{\"locHaystack\":{ 'lng': -179.9, 'lat': 89.9}}},{\"a\":[null]}],\"b\":[1,314159265016,{\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},'You can do anything, but not everything.',null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,0.0],\"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,33.3],\"locLegacy\":[0.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"a\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},\"d\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"d\":'You can do anything, but not everything.',\"arrayField\":[{\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]},\"b\":{\"arrayField\":[{\"locHaystack\":[180,33.3]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]},\"arrayField\":[]},{}]},'','You can do anything, but not everything.'],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,89.9],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0]},\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -90.0},\"arrayField\":[['You can do anything, but not everything.',[null],{\"a\":{\"d\":{\"arrayField\":[[{\"$date\": 1202331498200}]]},\"locHaystack\":[-33.3,0],\"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]}}},'Usted puede hacer cualquier cosa, pero no todo.',{}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":['You can do anything, but not everything.']},{\"locHaystack\":{ 'lng': 179.9, 'lat': -90}}]},{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90]}},\"locHaystack\":{ 'lng': -180.0, 'lat': -25}},{\"arrayField\":['You must be the change you wish to see in the world. anything',false]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"locLegacy\":[180.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',314159265008],\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',''],\"locLegacy\":[25,-90],\"c\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"locHaystack\":{ 'lng': -33.3, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"c\":{\"b\":'You can do anything, but not everything.'}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',{\"$date\": 1202331498200}],\"locLegacy\":[-25,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"c\":'You miss 100 percent of the shots you never take. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[''],\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"$date\": 1500000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locLegacy\":[179.9,0],\"locHaystack\":{ 'lng': 0.0, 'lat': 33.3}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',\"locHaystack\":{ 'lng': 179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null,\"arrayField\":['You can do anything, but not everything.'],\"arrayField\":[],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":{ 'lng': 179.9, 'lat': 25},\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[[{\"c\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90]}}]]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,-90],\"locHaystack\":{ 'lng': -180.0, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': 180.0, 'lat': 89.9}},'You must be the change you wish to see in the world. anything','You can do anything, but not everything.','',null,null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"locHaystack\":{ 'lng': -33.3, 'lat': -89.9},\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-25]}}],\"a\":{\"$date\": 1202331498200}},\"arrayField\":[314159265017,{\"b\":{\"arrayField\":[{\"$date\": -111100000},'You must be the change you wish to see in the world. anything',{}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000},314159265007,{\"b\":null}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":[180,33.3],\"arrayField\":[{\"arrayField\":[0]}],\"arrayField\":['']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[['']],\"arrayField\":[{\"arrayField\":[314159265000]},'You can do anything, but not everything.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":[{\"a\":{\"locLegacy\":[180.0,0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"a\":{\"arrayField\":[{\"locHaystack\":[0.0,-33.3]},{\"arrayField\":[314159265002,{\"d\":'Usted puede hacer cualquier cosa, pero no todo.'},{\"arrayField\":[[null]]}],\"d\":null},['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',{\"locLegacy\":[-25,90.0]}]],\"arrayField\":[[''],-3.14159265359,2225073858072009000.99]}},\"d\":{\"b\":false},\"locHaystack\":{ 'lng': -33.3, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[180,0.0]},''],\"arrayField\":[{\"locHaystack\":[180.0,90.0],\"arrayField\":['',{\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']},'Usted puede hacer cualquier cosa, pero no todo.',{\"locLegacy\":[179.9,89.9]}]}],\"locLegacy\":[0,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265002]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"b\":{\"locLegacy\":[-33.3,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[33.3,-90.0],\"_id\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":1,\"d\":314159265007}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[0],{\"c\":[null]}],\"arrayField\":[{\"locHaystack\":[-33.3,-25],\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0.0]}},{\"arrayField\":[{\"$date\": 1500000}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":[{\"d\":[''],\"locHaystack\":{ 'lng': -179.9, 'lat': 33.3}},null,'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',{\"b\":{\"locHaystack\":{ 'lng': 180.0, 'lat': -90}}},[false],{\"c\":[],\"c\":'You miss 100 percent of the shots you never take. anything'},{\"arrayField\":[{\"arrayField\":['']}],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,25]}},'You can do anything, but not everything.']},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}],\"a\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -25, 'lat': 0.0}},'',{\"locHaystack\":{ 'lng': 180, 'lat': -25}},''],\"locLegacy\":[-179.9,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything','I quit therapy because my analyst was trying to help me behind my back. anything',[314159265001]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,25],\"arrayField\":[{\"d\":{\"locLegacy\":[180,-90],\"c\":{\"locLegacy\":[180.0,90],\"arrayField\":[[1797693134862315799999,false]],\"locHaystack\":{ 'lng': 33.3, 'lat': -89.9},\"d\":{}},\"locHaystack\":[25,-33.3],\"arrayField\":[1,'You miss 100 percent of the shots you never take. anything',1,true,{\"locHaystack\":[0,0]}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',{\"b\":'You can do anything, but not everything.'},null,'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['To the man who only has a hammer, everything he encounters begins to look like a nail. anything']],\"arrayField\":[{\"locHaystack\":{ 'lng': -180.0, 'lat': -90}},{\"b\":{\"a\":{\"$date\": -111100000}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":['',0,'You can do anything, but not everything.',false,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]},\"arrayField\":[null],\"arrayField\":[['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',[{\"arrayField\":['']}],{\"_id\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"d\":{\"c\":''}},{\"arrayField\":[1,'You must be the change you wish to see in the world. anything',{\"arrayField\":[]},{\"arrayField\":[314159265008],\"a\":{\"arrayField\":[false]}}]},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything','You can do anything, but not everything.',{\"arrayField\":[{\"a\":null,\"arrayField\":[314159265001]}]}],314159265017,{\"locHaystack\":{ 'lng': -25, 'lat': 89.9}},[{\"locHaystack\":[-25,90]}],{\"locHaystack\":{ 'lng': -179.9, 'lat': -33.3}},{\"arrayField\":[{\"locLegacy\":[0.0,0]}],\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.','','',{\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}]},0,1,[]]}],\"arrayField\":[[1],true,0,314159265001,'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything','You can do anything, but not everything.']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,25],\"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-89.9]}},[{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]},\"locHaystack\":{ 'lng': 25, 'lat': -89.9}},\"d\":'You can do anything, but not everything.',\"b\":null},'']],1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"d\":{\"arrayField\":[{\"arrayField\":[1,'You can do anything, but not everything.',{\"$date\": 1202331498200},null]}],\"b\":'Usted puede hacer cualquier cosa, pero no todo.'}},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']},\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"locHaystack\":{ 'lng': 179.9, 'lat': 25},\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[false,{\"a\":null,\"a\":'You must be the change you wish to see in the world. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.','When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"b\":'Usted puede hacer cualquier cosa, pero no todo.',\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}],\"d\":'',\"a\":{\"d\":'',\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You miss 100 percent of the shots you never take. anything',{},['I quit therapy because my analyst was trying to help me behind my back. anything']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":false},{\"locLegacy\":[-179.9,89.9]},{\"a\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[25,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":[314159265012]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.','You can do anything, but not everything.'],{\"arrayField\":[0,'You can do anything, but not everything.',314159265004]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"locLegacy\":[180,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"c\":314159265004}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-180.0,90],\"locLegacy\":[179.9,0]},{\"arrayField\":[null]},['',314159265009,'You can do anything, but not everything.','',{\"arrayField\":[{\"b\":{\"arrayField\":[{\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']},1,{\"arrayField\":[null],\"locHaystack\":[-180.0,-89.9]}]}}]},'',null,null,0,{\"arrayField\":[''],\"arrayField\":[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}}]},{\"$date\": 1500000},'',{\"b\":'You can do anything, but not everything.'}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0]},\"c\":{\"locHaystack\":{ 'lng': 25, 'lat': 0.0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1500000},\"d\":{\"arrayField\":[0,{},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]}}]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265014,\"locHaystack\":[-180,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":314159265007}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null,''],{\"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': -90},\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]},\"c\":{\"b\":{\"$date\": 1391633433037}}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":false}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-89.9],\"a\":{\"d\":1}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":['',{}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"d\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"c\":'The richest man is not he who has the most, but he who needs the least. anything'},\"arrayField\":[true,[]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[true,null]},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[-3.14159265859]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',0,{\"locLegacy\":[180.0,33.3],\"arrayField\":[{\"a\":{\"locLegacy\":[-33.3,33.3]}},-3.14159265859,{\"arrayField\":[{\"arrayField\":[{\"arrayField\":['The richest man is not he who has the most, but he who needs the least. anything',{\"$date\": 1202331498200},'',{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}]},314159265002,{\"arrayField\":[null]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}},{\"arrayField\":['','']},{\"arrayField\":[314159265003],\"_id\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},{\"$date\": 1391633433037}]},{\"a\":null},{}]}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0.00002225073858072014,{\"d\":{\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}},{},{\"$date\": 1500000},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': 33.3}},'',{\"locHaystack\":[180,90.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":''}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[{\"locHaystack\":{ 'lng': 25, 'lat': -25},\"arrayField\":[{\"b\":null},false]}]},\"locHaystack\":{ 'lng': 180.0, 'lat': -89.9},\"c\":{\"arrayField\":[1]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90]},\"arrayField\":[1]}],\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[[{\"a\":{\"d\":2225073858072009000.99,\"arrayField\":[314159265005]},\"d\":{\"a\":'The richest man is not he who has the most, but he who needs the least. anything',\"locHaystack\":{ 'lng': 180, 'lat': 0.0}},\"b\":'You can do anything, but not everything.',\"b\":'You miss 100 percent of the shots you never take. anything'},{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.'],\"arrayField\":[['','']]},1,'I quit therapy because my analyst was trying to help me behind my back. anything'],{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','',{\"b\":[{\"a\":{\"locLegacy\":[180.0,0]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-90.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]}}],\"locHaystack\":{ 'lng': 179.9, 'lat': 90}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[],\"locHaystack\":{ 'lng': -180, 'lat': -33.3}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': -25},\"locHaystack\":{ 'lng': 0.0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"c\":{\"locLegacy\":[-25,33.3]},\"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You miss 100 percent of the shots you never take. anything',\"locHaystack\":{ 'lng': 0.0, 'lat': 25},\"locLegacy\":[180.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-33.3,33.3]},[{\"locHaystack\":[-25,90]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[true,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]}},true,314159265008,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-25]}},{\"arrayField\":[{\"$date\": 1202331498200},false,{\"d\":''}]},{\"locHaystack\":{ 'lng': -180, 'lat': -25},\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"d\":314159265015}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":[0],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]},\"_id\":314159265000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"c\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"c\":1}]}],\"arrayField\":[null,true,{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]}},{\"$date\": -111100000},{\"c\":{\"a\":'Usted puede hacer cualquier cosa, pero no todo.'}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":{\"arrayField\":[]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"locHaystack\":[-33.3,90],\"arrayField\":[{\"$date\": 1391633433037}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything',{\"arrayField\":[{\"arrayField\":[{\"locHaystack\":[180,0.0]},{\"arrayField\":[[{\"arrayField\":[['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],{\"d\":'You miss 100 percent of the shots you never take. anything',\"arrayField\":[''],\"arrayField\":[{\"$date\": 1500000},{\"a\":null}]},'You can do anything, but not everything.']},{\"a\":''},'Usted puede hacer cualquier cosa, pero no todo.',{\"$date\": 1202331498200},[{\"$date\": -111100000}],null]]}]}]},{\"locLegacy\":[180,-90]},{\"c\":{\"b\":-3.14159265000},\"locHaystack\":{ 'lng': -33.3, 'lat': 0.0}},null,{\"locHaystack\":[180.0,0]},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]}}]}],\"_id\":{\"locLegacy\":[33.3,33.3]},\"b\":{\"locHaystack\":[-33.3,89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0.0]},\"b\":{\"c\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,33.3]}},{\"$date\": 1391633433037}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,314159265011,{\"$date\": 1500000}],\"arrayField\":[{\"d\":'The richest man is not he who has the most, but he who needs the least. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',[-314159265359]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',\"a\":{\"c\":1}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,89.9]},\"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0.00002225073858072014,{\"arrayField\":['You can do anything, but not everything.',{\"arrayField\":['You can do anything, but not everything.']},{\"locHaystack\":[33.3,25]},null]},'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"locHaystack\":[179.9,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"locHaystack\":{ 'lng': -179.9, 'lat': 0.0},\"b\":{\"arrayField\":[false,{\"arrayField\":[{\"b\":0},{\"$date\": 1500000}]},{}]},\"b\":null}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locLegacy\":[0.0,-90]},\"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180.0, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',[{\"arrayField\":[{\"locHaystack\":[-180.0,-33.3]},{\"arrayField\":[{\"$date\": 1500000},null]},314159265001,{\"locHaystack\":[-33.3,0],\"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'},null,{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0]}},{\"d\":'You can do anything, but not everything.'},{\"locHaystack\":[-180.0,25],\"locLegacy\":[25,-90]},'You miss 100 percent of the shots you never take. anything',{},'I quit therapy because my analyst was trying to help me behind my back. anything'],\"b\":{\"$date\": 1391633433037}}]},314159265005,{\"locHaystack\":{ 'lng': -33.3, 'lat': -89.9}},{\"locHaystack\":{ 'lng': 180.0, 'lat': -90.0}}],{\"$date\": 1391633433037},314159265012,'The richest man is not he who has the most, but he who needs the least. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[314159265007]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":{ 'lng': -180, 'lat': -25}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-90]},\"c\":'You can do anything, but not everything.',\"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': -33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":false,\"arrayField\":[{\"arrayField\":[{\"b\":'You miss 100 percent of the shots you never take. anything'},null]},{\"a\":{\"$date\": 1202331498200}},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"c\":'You can do anything, but not everything.'},{\"a\":{\"$date\": 1391633433037}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[0.0,33.3]},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"$date\": 1391633433037}]},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"arrayField\":['']}],\"arrayField\":[{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265006,\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-25],\"arrayField\":[false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"b\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,-25],\"arrayField\":['',{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":{ 'lng': 25, 'lat': 90.0}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"a\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything',\"locLegacy\":[-180,89.9],\"locHaystack\":{ 'lng': 179.9, 'lat': 90}},true]}],{\"a\":{\"arrayField\":[314159265007,'Usted puede hacer cualquier cosa, pero no todo.']},\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90.0]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.',\"arrayField\":[[1797693134862315799999]],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90]}},{\"arrayField\":[{\"arrayField\":[1797693134862315799999,{\"b\":{\"locHaystack\":[0.0,-89.9]},\"locLegacy\":[180.0,-90.0]}]},{\"arrayField\":[{\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}],\"locHaystack\":[0.0,0]},{\"locHaystack\":[0.0,-33.3]},false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',1,{\"arrayField\":['You must be the change you wish to see in the world. anything']}],\"c\":314159265017},0,{\"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"arrayField\":[null,{\"locHaystack\":{ 'lng': 0, 'lat': -90}}]}],{\"d\":''},-3.14159265859,{\"arrayField\":['']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,{\"locLegacy\":[-33.3,25],\"arrayField\":[null]},1,null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,0],\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-89.9]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"arrayField\":[{\"$date\": 1391633433037},{\"arrayField\":[{\"c\":{\"arrayField\":['You miss 100 percent of the shots you never take. anything']},\"locLegacy\":[180.0,-89.9]}],\"b\":''}]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":0,\"c\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":[[{\"c\":{\"locHaystack\":{ 'lng': 180, 'lat': 90.0}}},{\"d\":{\"arrayField\":[1,[null],false],\"a\":'You can do anything, but not everything.',\"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":'You must be the change you wish to see in the world. anything'},3.14159265359,314159265012]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000},{\"b\":{\"arrayField\":[{\"arrayField\":[{\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90.0]}}},{\"locHaystack\":[180.0,90.0]}]}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000},'','I quit therapy because my analyst was trying to help me behind my back. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":{\"b\":{\"c\":null,\"d\":{\"b\":0},\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},\"c\":{}},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]}},null,null,{\"$date\": 1500000}],\"locLegacy\":[180.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]}}],\"c\":'',\"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"a\":{\"locLegacy\":[0,25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'],\"locHaystack\":[0,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1,'You must be the change you wish to see in the world. anything',{\"$date\": 1202331498200},'',{\"$date\": 1202331498200},{\"arrayField\":[null,{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]}}},{\"d\":null,\"d\":'You can do anything, but not everything.'},null]},false,314159265007,{\"a\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}},{\"arrayField\":[{\"locHaystack\":{ 'lng': 33.3, 'lat': -25},\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-90.0]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}}],\"_id\":'',\"c\":{\"$date\": -111100000}}]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"_id\":{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"arrayField\":[{\"locHaystack\":[-25,-25]}]},\"arrayField\":[['',{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]}}}]]},'You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": -111100000}],\"arrayField\":[],\"_id\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[['Echa de menos el 100 por ciento de los tiros que nunca toma.',null]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"a\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[25,0]},\"locLegacy\":[25,89.9],\"a\":1,\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-90.0]},\"arrayField\":['',{\"locLegacy\":[0,-90]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]},\"c\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locLegacy\":[0.0,89.9],\"d\":false}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,-33.3],\"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,90]},\"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"arrayField\":[false]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"d\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You must be the change you wish to see in the world. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]},\"arrayField\":['You can do anything, but not everything.',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,89.9]}},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',[null]]},'','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[true,{\"$date\": 1202331498200},{\"$date\": 1391633433037}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265003,\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,90]},\"arrayField\":[[{\"locLegacy\":[-180,33.3]},{\"arrayField\":[{\"arrayField\":[{\"$date\": -111100000},{\"locHaystack\":[179.9,0]}],\"b\":{\"b\":[{\"locLegacy\":[179.9,-90.0]}]}},{\"locHaystack\":{ 'lng': 0.0, 'lat': 89.9}}]},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',314159265008,{\"locLegacy\":[25,-90.0]},{\"locHaystack\":[-25,89.9],\"arrayField\":[true,1]}],{\"arrayField\":[null]},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']},{\"b\":{\"$date\": -111100000}}]},true,'',[{\"arrayField\":['You can do anything, but not everything.'],\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']},{\"$date\": 1500000},null],{\"b\":'You miss 100 percent of the shots you never take. anything',\"a\":0.00000000049406564841}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[]},'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',null,{\"$date\": 1391633433037}],\"arrayField\":[1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.',\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',''],\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 90},\"locHaystack\":{ 'lng': 33.3, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-25,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.',\"loc\":{\"type\":\"Point\",\"coordinates\":[180,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"a\":{\"locHaystack\":{ 'lng': -33.3, 'lat': 33.3},\"arrayField\":['',null],\"a\":'You miss 100 percent of the shots you never take. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"locHaystack\":[0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -33.3},\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'',\"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.'],\"_id\":{\"b\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":0}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"locLegacy\":[33.3,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"b\":null}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'',\"arrayField\":[null,{\"arrayField\":[{\"arrayField\":[false,'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',null,314159265015,0]},false],\"arrayField\":[{\"_id\":'You can do anything, but not everything.'}]},'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Echa de menos el 100 por ciento de los tiros que nunca toma.',\"_id\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"b\":1},0,[{\"$date\": 1202331498200}]]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'',\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]},\"arrayField\":[null],\"_id\":'You can do anything, but not everything.',\"locLegacy\":[-25,33.3],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"arrayField\":[{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"arrayField\":[{\"locHaystack\":{ 'lng': 179.9, 'lat': -90}}]},\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"locLegacy\":[180.0,-33.3]},{\"$date\": -111100000},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[[1,'']]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[314159265002],{\"$date\": 1500000}],\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0.0]},\"a\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":[{}]},{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"locHaystack\":{ 'lng': -33.3, 'lat': 90}}],\"c\":'',\"locHaystack\":{ 'lng': -25, 'lat': -89.9}},{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[-3.14159265359,{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You miss 100 percent of the shots you never take. anything',\"arrayField\":[314159265009,[{\"$date\": 1202331498200},{\"locHaystack\":[180.0,-33.3],\"_id\":{\"$date\": 1500000},\"arrayField\":[null,{\"arrayField\":[{\"a\":null}]}]},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[0.0,90],\"arrayField\":[314159265004,{\"$date\": 1391633433037}],\"_id\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],\"a\":{\"b\":null}},true]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"d\":true}],\"arrayField\":[{\"$date\": -111100000},{\"a\":{\"arrayField\":[]}},null,'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,'You can do anything, but not everything.'],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"locHaystack\":[-179.9,90.0]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,0.0],\"arrayField\":[314159265001,{\"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},[314159265019],[{\"b\":'You miss 100 percent of the shots you never take. anything'}],{\"arrayField\":[{\"arrayField\":[{},[]]},'',null],\"c\":'You can do anything, but not everything.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":314159265017}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,'You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,33.3]}},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"d\":{\"arrayField\":[]}},{\"locLegacy\":[0.0,0.0]},{\"$date\": 1391633433037}],\"_id\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['You can do anything, but not everything.']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': -89.9},\"d\":{\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},\"_id\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.','You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265007,314159265003]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,-33.3]}},{\"locHaystack\":[-25,33.3]},'You miss 100 percent of the shots you never take. anything'],\"arrayField\":['',{\"$date\": 1391633433037},'You can do anything, but not everything.',{\"b\":{\"a\":{\"locHaystack\":[-25,-90.0]}},\"locHaystack\":{ 'lng': -25, 'lat': 0}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265007,\"c\":314159265013,\"c\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[33.3,33.3],\"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,25]}}],\"locHaystack\":{ 'lng': -180, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,89.9],\"a\":{\"locHaystack\":{ 'lng': 0.0, 'lat': -90}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'The richest man is not he who has the most, but he who needs the least. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[{\"b\":{\"arrayField\":[{\"$date\": 1202331498200}]}},{\"c\":{\"arrayField\":[[{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.',\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}},{\"$date\": 1391633433037}],{\"a\":'Usted puede hacer cualquier cosa, pero no todo.'}]}}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',314159265014,{\"arrayField\":['',{\"locHaystack\":[180.0,-33.3]},{\"d\":''},{\"b\":{\"locHaystack\":{ 'lng': -180, 'lat': 90},\"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}}],\"_id\":'You miss 100 percent of the shots you never take. anything'}]]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":'You can do anything, but not everything.'},314159265007,3.14159265359,'']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.',\"arrayField\":[{\"$date\": 1500000}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"arrayField\":['',{\"locHaystack\":[33.3,0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[null]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"$date\": 1500000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1391633433037},{\"b\":'You must be the change you wish to see in the world. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"b\":''},{\"$date\": 1391633433037},'','You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265001}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":0,\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"arrayField\":[{\"$date\": -111100000}]},\"b\":'Usted puede hacer cualquier cosa, pero no todo.',\"arrayField\":[{\"arrayField\":[{\"a\":null,\"b\":{\"arrayField\":[{\"b\":314159265002,\"arrayField\":[{\"b\":'The richest man is not he who has the most, but he who needs the least. anything',\"locHaystack\":[-25,0]},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything','The richest man is not he who has the most, but he who needs the least. anything'],\"b\":{\"b\":'You must be the change you wish to see in the world. anything'}}]}}]},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,-33.3],\"locHaystack\":[179.9,0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[true,{\"$date\": 1202331498200}],\"arrayField\":[[{\"locHaystack\":{ 'lng': 0, 'lat': -33.3}},null,[{\"$date\": 1202331498200},null,'']]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',null]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null,null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[33.3,0]}],\"_id\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"locHaystack\":[179.9,-90],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}]},null,'The richest man is not he who has the most, but he who needs the least. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]},\"locHaystack\":[-179.9,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[179.9,89.9],\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":null}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"d\":null}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},314159265011]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,25]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90.0]}},{\"$date\": -111100000}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'I quit therapy because my analyst was trying to help me behind my back. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-33.3]},\"locHaystack\":[0.0,0.0],\"locLegacy\":[-179.9,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locLegacy\":[-25,90],\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-33.3]},\"arrayField\":['',{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything','You can do anything, but not everything.']}]}},'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You must be the change you wish to see in the world. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":'You can do anything, but not everything.'},{\"locHaystack\":{ 'lng': -33.3, 'lat': 0},\"arrayField\":[0],\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'},{\"d\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-89.9]}},'Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}},\"locHaystack\":{ 'lng': 179.9, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265004}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-25,-90.0],\"arrayField\":[314159265017,null,'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',{\"$date\": -111100000},'You can do anything, but not everything.',{\"arrayField\":[''],\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90.0]}},{\"arrayField\":['',0,314159265018,1,314159265001,1]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0]},\"locHaystack\":{ 'lng': -180.0, 'lat': 90.0}},{\"c\":''},'',{\"$date\": 1500000}],\"locHaystack\":{ 'lng': 25, 'lat': -33.3}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":0.00002225073858072014}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',[]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"$date\": 1500000}]},'Echa de menos el 100 por ciento de los tiros que nunca toma.','']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180.0, 'lat': -25},\"arrayField\":[-314159265359]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":true}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[180,90.0]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,0],\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90.0]},\"arrayField\":[{\"b\":'You can do anything, but not everything.',\"c\":{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-33.3]}},[{},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,0.0]}}],null,null]}},'You can do anything, but not everything.','Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null,\"locHaystack\":{ 'lng': -180.0, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,0]},\"arrayField\":[{\"$date\": 1202331498200}],\"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locLegacy\":[-33.3,89.9],\"arrayField\":[{\"locLegacy\":[-25,-33.3]},true],\"arrayField\":[314159265010,{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-33.3]}}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":314159265006}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 33.3},\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":['You must be the change you wish to see in the world. anything']},\"_id\":{\"arrayField\":[0],\"arrayField\":[['',{\"b\":'The richest man is not he who has the most, but he who needs the least. anything'}]]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Usted puede hacer cualquier cosa, pero no todo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,0.0]},\"d\":{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[]},'You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-33.3]},\"arrayField\":['You can do anything, but not everything.']}]}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"$date\": 1500000},\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything',\"locHaystack\":[-180,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":{\"$date\": 1500000}}],\"d\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -179.9, 'lat': 0.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 25, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[null],'Echa de menos el 100 por ciento de los tiros que nunca toma.'],\"a\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"c\":'You must be the change you wish to see in the world. anything'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[314159265009,{\"$date\": -111100000},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-25]},\"arrayField\":[true]}],\"a\":{\"d\":''}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0,'You can do anything, but not everything.','',{\"locLegacy\":[-25,90]},{\"$date\": 1391633433037},{\"b\":'You can do anything, but not everything.'},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',{\"c\":null},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"locHaystack\":{ 'lng': -179.9, 'lat': 33.3}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[1797693134862315799999],\"b\":{\"locHaystack\":[-25,0]},\"locHaystack\":{ 'lng': 0.0, 'lat': -90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,33.3]},\"arrayField\":[314159265010],\"b\":{\"arrayField\":['']}},{\"b\":'The richest man is not he who has the most, but he who needs the least. anything'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 33.3, 'lat': -90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]},\"arrayField\":[[{\"arrayField\":[{\"arrayField\":[1]}]},{\"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"arrayField\":['You miss 100 percent of the shots you never take. anything','',{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'],\"a\":{\"arrayField\":[314159265016]}},false,{\"locLegacy\":[-180,0.0]}]},{\"a\":{}}]]},1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,-90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180,-89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,90.0]},\"arrayField\":[false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': 33.3}}],\"arrayField\":[{\"locHaystack\":{ 'lng': 180, 'lat': 89.9},\"d\":{\"locLegacy\":[0,-33.3]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 33.3},\"d\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,0.0]},\"arrayField\":[{\"b\":{}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You miss 100 percent of the shots you never take. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180,-89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 180, 'lat': 90}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90.0]},\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',{\"b\":'You can do anything, but not everything.'},'',{\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'],\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-180,-25],\"locHaystack\":[180,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"locLegacy\":[33.3,33.3]},null,{\"$date\": 1500000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":314159265007}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265019]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":314159265016}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',{},'You can do anything, but not everything.',null,314159265000,'You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,-33.3]}},-314159265359]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":{ 'lng': -33.3, 'lat': 89.9}},\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000},{\"$date\": 1500000}],\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"arrayField\":[-3.14159265000,'You miss 100 percent of the shots you never take. anything'],\"arrayField\":[{\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},{\"$date\": 1500000},{\"c\":'',\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":{ 'lng': 33.3, 'lat': 90.0}},null,false]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0.0,89.9]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"d\":{\"$date\": -111100000}}]},'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[{\"$date\": -111100000},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,90.0]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0]}}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 90},\"d\":'You can do anything, but not everything.',\"locHaystack\":{ 'lng': -33.3, 'lat': -25},\"a\":''}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.',[0]],\"locHaystack\":[-33.3,-90.0],\"arrayField\":[[[null]],false,{\"c\":[{\"b\":{\"$date\": -111100000}}],\"arrayField\":[{\"$date\": 1500000}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1500000},{\"$date\": 1500000}],\"arrayField\":[314159265017]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[['Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,89.9]}},[{\"arrayField\":['']}],{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}},{\"d\":{\"b\":'You can do anything, but not everything.'}}],\"c\":null,\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-25]},\"locHaystack\":[0.0,33.3],\"a\":{\"arrayField\":['You can do anything, but not everything.',{\"$date\": 1391633433037}]}}]]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":[{\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"a\":'You can do anything, but not everything.'}],\"arrayField\":[true,{\"b\":{\"b\":'You miss 100 percent of the shots you never take. anything'}},'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"b\":'You can do anything, but not everything.'}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"arrayField\":[1,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,90]}}]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":null,\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['','Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0.0, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":false,\"d\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,25]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'You can do anything, but not everything.',\"a\":{\"locHaystack\":[-180,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-25,25]},{\"$date\": 1391633433037},'You can do anything, but not everything.',{\"$date\": 1391633433037},{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 179.9, 'lat': 33.3},\"b\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":['']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You can do anything, but not everything.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": -111100000}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['You miss 100 percent of the shots you never take. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[314159265000,{\"d\":'You can do anything, but not everything.'},'',{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"c\":314159265004},\"arrayField\":[{\"arrayField\":[0,0,{\"a\":{\"$date\": 1391633433037}},'']},{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'You can do anything, but not everything.',\"locHaystack\":{ 'lng': 25, 'lat': -89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"$date\": 1500000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 33.3},\"a\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"$date\": 1500000},0,{\"$date\": 1500000},{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-25]}}],{\"$date\": 1202331498200}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"b\":'You miss 100 percent of the shots you never take. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":false,\"a\":false}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[0.0,33.3],\"arrayField\":[0.00002225073858072014,{\"c\":{\"d\":{\"locLegacy\":[33.3,33.3],\"a\":{\"locHaystack\":[-33.3,0]}}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,-90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1202331498200},null]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":314159265015}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":['You miss 100 percent of the shots you never take. anything']},false,{\"arrayField\":[]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-33.3,-25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":1}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"locHaystack\":{ 'lng': 0.0, 'lat': 25}},\"arrayField\":[{\"b\":'I quit therapy because my analyst was trying to help me behind my back. anything'},{\"locLegacy\":[-25,-90]},{\"arrayField\":[null,{\"arrayField\":[{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything']}]}]},{\"$date\": 1500000},{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',1,'The richest man is not he who has the most, but he who needs the least. anything',{\"$date\": 1500000},[314159265018,'You must be the change you wish to see in the world. anything','You can do anything, but not everything.'],{\"arrayField\":[null]}],\"arrayField\":[]},null],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":{\"locHaystack\":[33.3,-90]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[179.9,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -33.3, 'lat': 89.9},\"b\":[314159265016],\"b\":{\"$date\": 1391633433037}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":{\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},\"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"c\":null,\"loc\":{\"type\":\"Point\",\"coordinates\":[25,25]}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[-33.3,-33.3]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,-25],\"locLegacy\":[-180.0,0.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.',{\"locHaystack\":{ 'lng': -33.3, 'lat': 90},\"arrayField\":['You can do anything, but not everything.']}],\"arrayField\":['You can do anything, but not everything.'],\"d\":'',\"arrayField\":[1,'The richest man is not he who has the most, but he who needs the least. anything']}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[25,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[314159265019]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',true,'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[],\"arrayField\":[{\"arrayField\":[{\"$date\": 1500000}]},'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'],\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Usted debe ser el cambio que deseas ver en el mundo.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,90.0]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[''],\"d\":[{\"locHaystack\":[180.0,0.0]},314159265012,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]},\"c\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,90.0]}}}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"a\":{\"arrayField\":[''],\"d\":{\"b\":{\"b\":'You miss 100 percent of the shots you never take. anything'},\"locHaystack\":{ 'lng': -33.3, 'lat': 33.3}}}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"arrayField\":[1]},'Usted debe ser el cambio que deseas ver en el mundo.'],\"arrayField\":['']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":{\"$date\": -111100000}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[0,-33.3]},\"arrayField\":[314159265002]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"locHaystack\":[0.0,25],\"_id\":''}],'Usted puede hacer cualquier cosa, pero no todo.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"$date\": 1202331498200},'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"arrayField\":[{\"b\":{\"$date\": -111100000},\"locHaystack\":{ 'lng': 0.0, 'lat': -89.9},\"loc\":{\"type\":\"Point\",\"coordinates\":[25,33.3]}},{\"a\":'You must be the change you wish to see in the world. anything'},'You must be the change you wish to see in the world. anything']}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': 0, 'lat': 90.0}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[[{\"arrayField\":[{\"arrayField\":[{\"locLegacy\":[-180,-33.3]}],\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}},'']},{\"locHaystack\":[180.0,33.3]},null],{\"arrayField\":[]},{\"$date\": 1391633433037}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"_id\":'',\"locHaystack\":{ 'lng': 180.0, 'lat': 89.9}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":{\"$date\": 1202331498200}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{},'',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,33.3]}}]},null,[[]]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locLegacy\":[180.0,90]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[{\"locHaystack\":[-25,33.3]}]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":[1],\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,-89.9]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[180.0,-33.3],\"locHaystack\":[25,-33.3],\"b\":'You can do anything, but not everything.'}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":[-179.9,90.0]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -180, 'lat': 25}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,33.3]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,25]}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',{\"b\":1},{\"$date\": -111100000}],\"arrayField\":[[{\"arrayField\":[{\"$date\": 1202331498200},['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'],'']},{\"$date\": 1500000},{\"locHaystack\":[0,33.3]}]]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":['',''],\"loc\":{\"type\":\"Point\",\"coordinates\":[0,33.3]},\"locLegacy\":[179.9,-25],\"locHaystack\":[0,25]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"arrayField\":[-3.14159265859,314159265011,1]}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"c\":null}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"locHaystack\":{ 'lng': -25, 'lat': 33.3}}" ));
_client.insert(kNameSpace, fromjson("{_id:" + getNextId() + ", \"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}" ));
        }
    };

    // Queries generated from NLTK are in the following format:
    // struct GeneratedQueryN {
    //     static BSONObj getQuery() { return query; }
    //     static BSONObj query;
    // };
    // BSONObj GeneratedQueryN::query = fromjson("{a:1}");

struct GeneratedQuery1 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery1::query = fromjson("{\"$and\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{b:314159265011},{\"arrayField\":''}]}");    BSONObj GeneratedQuery1::projection = fromjson("{c:1}");
struct GeneratedQuery2 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery2::query = fromjson("{\"arrayField\":0.00002225073858072014}");
struct GeneratedQuery3 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery3::query = fromjson("{\"arrayField\":314159265006}");
struct GeneratedQuery4 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery4::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'},{\"d\":{\"$lt\":{\"$date\": 1202331498200}}},{\"a\":{\"$date\": 1391633433037}},{\"d\":{\"$regex\":\"/^abc/\"}}]}");
struct GeneratedQuery5 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery5::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery5::projection = fromjson("{\"a\":1}");
struct GeneratedQuery6 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery6::query = fromjson("{\"$or\":[{\"\":'You miss 100 percent of the shots you never take. anything'},{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'si'}},{\"c\":'The richest man is not he who has the most, but he who needs the least. anything'}]}");
struct GeneratedQuery7 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery7::query = fromjson("{\"a\":-3.14159265359}");
struct GeneratedQuery8 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery8::query = fromjson("{\"arrayField.a\":{\"$size\":NumberLong(314159265358979363)}}");    BSONObj GeneratedQuery8::projection = fromjson("{\"b\":1}");
struct GeneratedQuery9 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery9::query = fromjson("{\"arrayField\":{\"$all\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-25,90.0]}}]}]}}");
struct GeneratedQuery10 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery10::query = fromjson("{\"a\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");    BSONObj GeneratedQuery10::projection = fromjson("{c:1}");
struct GeneratedQuery11 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery11::query = fromjson("{d:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''},\"arrayField\":'You can do anything, but not everything.',_id:1}");
struct GeneratedQuery12 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery12::query = fromjson("{\"c\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");
struct GeneratedQuery13 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery13::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery13::projection = fromjson("{\"d\":1}");
struct GeneratedQuery14 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery14::query = fromjson("{_id:0.00002225073858072014}");
struct GeneratedQuery15 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery15::query = fromjson("{\"b\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery15::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery16 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery16::query = fromjson("{\"d\":{\"$ne\":1}}");
struct GeneratedQuery17 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery17::query = fromjson("{_id:{\"$regex\":\"/(a)|(b)/\"}}");    BSONObj GeneratedQuery17::projection = fromjson("{\"c\":1,a:1}");
struct GeneratedQuery18 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery18::query = fromjson("{\"_id\":0}");
struct GeneratedQuery19 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery19::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery20 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery20::query = fromjson("{\"arrayField\":[]}");
struct GeneratedQuery21 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery21::query = fromjson("{\"_id\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'}}");
struct GeneratedQuery22 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery22::query = fromjson("{\"$or\":[{\"\":true},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery23 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery23::query = fromjson("{\"arrayField.a._id\":{\"$all\":[{\"$date\": -111100000},{\"arrayField\":[null,{\"b\":{\"arrayField\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]},\"locHaystack\":{ 'lng': 0, 'lat': 0.0}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-25]},\"locLegacy\":[180.0,-25]}],\"b\":{\"b\":{\"a\":null}}},'You can do anything, but not everything.']}}],\"c\":'You miss 100 percent of the shots you never take. anything',\"arrayField\":[[{\"locLegacy\":[-33.3,-25]},['Echa de menos el 100 por ciento de los tiros que nunca toma.','The richest man is not he who has the most, but he who needs the least. anything']]]}]}}");
struct GeneratedQuery24 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery24::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery25 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery25::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery25::projection = fromjson("{\"arrayField.$\":1,\"c\":1}");
struct GeneratedQuery26 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery26::query = fromjson("{\"$or\":[{\"arrayField\":{\"$not\":{\"$not\":{\"$size\":NumberInt(-2147483648)}},\"$not\":{\"$elemMatch\":{\"arrayField.c\":{\"$elemMatch\":{\"c\":314159265014,\"a\":-314159265359,\"$where\":'function myFunction() { return this.d != undefined; }'}},\"arrayField._id\":{\"$not\":{\"$not\":{\"$exists\":0}}}}}}}]}");
struct GeneratedQuery27 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery27::query = fromjson("{\"$or\":[{\"arrayField\":{\"$size\":NumberLong(314159265358979373)}}]}");
struct GeneratedQuery28 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery28::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}}}}");
struct GeneratedQuery29 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery29::query = fromjson("{\"a\":{\"$size\":NumberInt(0)}}");    BSONObj GeneratedQuery29::projection = fromjson("{\"a\":1}");
struct GeneratedQuery30 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery30::query = fromjson("{\"$or\":[{\"b\":[{\"c\":{\"arrayField\":[{\"locHaystack\":{ 'lng': 25, 'lat': -25},\"arrayField\":['']}]},\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.',[314159265002,false]],\"d\":{\"c\":{\"locHaystack\":{ 'lng': 25, 'lat': 90}}},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-90]}},{\"d\":{\"d\":[{\"locLegacy\":[0,33.3]},{\"arrayField\":[{\"$date\": -111100000}]}],\"d\":{\"c\":{\"arrayField\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]},\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90]}}]]},\"locHaystack\":{ 'lng': -180.0, 'lat': 33.3}}},\"arrayField\":[]},null]}]}");    BSONObj GeneratedQuery30::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery31 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery31::query = fromjson("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery32 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery32::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery33 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery33::query = fromjson("{\"b\":{\"$size\":314159215}}");    BSONObj GeneratedQuery33::projection = fromjson("{\"a\":{$elemMatch:{\"a\":null}}}");
struct GeneratedQuery34 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery34::query = fromjson("{\"d\":{\"$exists\":true}}");
struct GeneratedQuery35 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery35::query = fromjson("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery36 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery36::query = fromjson("{\"\":314159265011}");    BSONObj GeneratedQuery36::projection = fromjson("{b:1}");
struct GeneratedQuery37 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery37::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery38 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery38::query = fromjson("{\"$nor\":[{\"c\":{\"$date\": 1202331498200}},{\"arrayField.b\":{\"$size\":NumberLong(0)}}]}");
struct GeneratedQuery39 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery39::query = fromjson("{\"b\":1797693134862315799999}");    BSONObj GeneratedQuery39::projection = fromjson("{\"d\":1}");
struct GeneratedQuery40 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery40::query = fromjson("{\"$nor\":[{\"c\":'Usted puede hacer cualquier cosa, pero no todo.'}]}");
struct GeneratedQuery41 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery41::query = fromjson("{c:{\"$not\":{\"$size\":314159225}}}");    BSONObj GeneratedQuery41::projection = fromjson("{\"a\":1}");
struct GeneratedQuery42 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery42::query = fromjson("{\"b\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery43 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery43::query = fromjson("{a:{\"$not\":{\"$size\":NumberInt(314159205)}}}");
struct GeneratedQuery44 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery44::query = fromjson("{\"$or\":[{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[179.9,-90],[0.0,-90.0]]}}}},{\"d\":{\"$regex\":\"/^abc/m\"}},{_id:{\"$regex\":\"/\\d?[A-E]\\*/\"}},{\"arrayField.c\":{\"$mod\":[314159285,0],\"$mod\":[314159275,0]}},{\"arrayField\":314159265004},{\"_id\":{\"$exists\":true}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{a:{\"$lt\":[{\"$date\": 1391633433037}]}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"b\":{\"$date\": 1391633433037}},{\"arrayField\":'You can do anything, but not everything.'}]}");    BSONObj GeneratedQuery44::projection = fromjson("{c:1}");
struct GeneratedQuery45 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery45::query = fromjson("{\"a.d\":{\"$not\":{\"$type\":5}}}");
struct GeneratedQuery46 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery46::query = fromjson("{\"a\":{\"$date\": 1500000}}");
struct GeneratedQuery47 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery47::query = fromjson("{\"c\":[{\"$date\": -111100000}]}");
struct GeneratedQuery48 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery48::query = fromjson("{\"$nor\":[{\"arrayField\":1}]}");    BSONObj GeneratedQuery48::projection = fromjson("{\"_id\":1,\"\":1}");
struct GeneratedQuery49 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery49::query = fromjson("{\"c\":'You can do anything, but not everything.'}");
struct GeneratedQuery50 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery50::query = fromjson("{\"b\":{\"$date\": -111100000},\"arrayField\":{\"$date\": 1202331498200},\"_id\":null}");
struct GeneratedQuery51 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery51::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery52 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery52::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'},{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}},{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}]}");
struct GeneratedQuery53 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery53::query = fromjson("{\"c\":{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery54 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery54::query = fromjson("{\"c\":''}");    BSONObj GeneratedQuery54::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery55 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery55::query = fromjson("{\"c\":{\"$size\":NumberLong(314159265358979333)}}");
struct GeneratedQuery56 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery56::query = fromjson("{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'m'}}");
struct GeneratedQuery57 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery57::query = fromjson("{\"arrayField\":['',null,{\"b\":'You can do anything, but not everything.'}]}");    BSONObj GeneratedQuery57::projection = fromjson("{a:1}");
struct GeneratedQuery58 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery58::query = fromjson("{\"$or\":[{\"a\":{\"$type\":5}},{\"a\":{\"$mod\":[314159255,314159205]}},{\"d\":{\"$exists\":null}}]}");
struct GeneratedQuery59 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery59::query = fromjson("{d:{\"$not\":{\"$exists\":0}}}");    BSONObj GeneratedQuery59::projection = fromjson("{d:1}");
struct GeneratedQuery60 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery60::query = fromjson("{\"c\":0.00002225073858072014}");    BSONObj GeneratedQuery60::projection = fromjson("{\"c\":1}");
struct GeneratedQuery61 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery61::query = fromjson("{\"arrayField.a\":{\"$elemMatch\":{\"\":''}}}");    BSONObj GeneratedQuery61::projection = fromjson("{\"_id\":{$elemMatch:{\"arrayField\":0,\"\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'mis'},\"c\":0,\"c\":{\"$not\":{\"$type\":8}}}},\"_id\":1,a:1,b:1}");
struct GeneratedQuery62 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery62::query = fromjson("{\"arrayField\":''}");
struct GeneratedQuery63 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery63::query = fromjson("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{\"arrayField\":0}]}");    BSONObj GeneratedQuery63::projection = fromjson("{\"c\":1}");
struct GeneratedQuery64 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery64::query = fromjson("{\"$or\":[{\"arrayField\":{\"$date\": 1500000}},{\"b\":3.14159265359}]}");    BSONObj GeneratedQuery64::projection = fromjson("{d:1}");
struct GeneratedQuery65 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery65::query = fromjson("{\"d\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery65::projection = fromjson("{\"c\":1}");
struct GeneratedQuery66 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery66::query = fromjson("{\"$or\":[{c:{\"$date\": 1391633433037}}]}");
struct GeneratedQuery67 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery67::query = fromjson("{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery67::projection = fromjson("{\"\":1}");
struct GeneratedQuery68 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery68::query = fromjson("{b:{\"$not\":{\"$elemMatch\":{c:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'s'}}}}}");
struct GeneratedQuery69 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery69::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery70 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery70::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery71 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery71::query = fromjson("{\"\":'You can do anything, but not everything.'}");
struct GeneratedQuery72 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery72::query = fromjson("{\"$or\":[{\"loc\":{\"$nearSphere\":[180.0,-89.9],\"$maxDistance\":314159265003}}]}");
struct GeneratedQuery73 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery73::query = fromjson("{d:{\"$nin\":[{\"$date\": -111100000},1,1]}}");    BSONObj GeneratedQuery73::projection = fromjson("{\"\":1}");
struct GeneratedQuery74 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery74::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery74::projection = fromjson("{\"b\":1}");
struct GeneratedQuery75 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery75::query = fromjson("{\"\":{\"$mod\":[314159295,314159245]}}");
struct GeneratedQuery76 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery76::query = fromjson("{\"arrayField\":''}");    BSONObj GeneratedQuery76::projection = fromjson("{\"b\":1,\"\":1}");
struct GeneratedQuery77 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery77::query = fromjson("{\"d\":314159265007}");
struct GeneratedQuery78 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery78::query = fromjson("{\"$or\":[{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-180,33.3]},\"$maxDistance\":314159265006}}}]}");
struct GeneratedQuery79 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery79::query = fromjson("{\"$or\":[{\"c\":{\"$regex\":\"/^abc/\"}}]}");    BSONObj GeneratedQuery79::projection = fromjson("{\"a\":1}");
struct GeneratedQuery80 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery80::query = fromjson("{\"a\":'You can do anything, but not everything.'}");
struct GeneratedQuery81 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery81::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery82 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery82::query = fromjson("{\"c\":{\"$date\": 1500000}}");
struct GeneratedQuery83 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery83::query = fromjson("{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'m'}}");
struct GeneratedQuery84 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery84::query = fromjson("{\"$nor\":[{\"arrayField.a\":{\"$mod\":[314159245,314159235],\"$mod\":[314159225,314159275],\"$mod\":[314159205,0]}}]}");
struct GeneratedQuery85 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery85::query = fromjson("{\"$or\":[{\"d\":{\"$regex\":\"/^abc/m\"}}]}");    BSONObj GeneratedQuery85::projection = fromjson("{\"a\":{$slice:1}}");
struct GeneratedQuery86 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery86::query = fromjson("{\"$or\":[{d:[1,'']}]}");
struct GeneratedQuery87 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery87::query = fromjson("{\"arrayField\":''}");
struct GeneratedQuery88 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery88::query = fromjson("{\"a\":314159265001}");
struct GeneratedQuery89 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery89::query = fromjson("{\"$nor\":[{\"$where\":'this.d != undefined'},{\"arrayField\":'The richest man is not he who has the most, but he who needs the least. anything'}]}");
struct GeneratedQuery90 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery90::query = fromjson("{\"d\":{\"arrayField\":['You can do anything, but not everything.']}}");
struct GeneratedQuery91 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery91::query = fromjson("{\"arrayField._id\":{\"$mod\":[314159225,0],\"$type\":-1}}");
struct GeneratedQuery92 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery92::query = fromjson("{\"$nor\":[{\"a\":{\"$exists\":{\"$date\": 1202331498200}}},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");    BSONObj GeneratedQuery92::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery93 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery93::query = fromjson("{\"a\":{\"$date\": -111100000}}");
struct GeneratedQuery94 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery94::query = fromjson("{\"b\":{\"$mod\":[314159275,314159255]}}");
struct GeneratedQuery95 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery95::query = fromjson("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery96 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery96::query = fromjson("{\"_id.a.b\":false}");
struct GeneratedQuery97 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery97::query = fromjson("{b:{\"$regex\":\"/(a)|(b)/\"}}");    BSONObj GeneratedQuery97::projection = fromjson("{\"c\":1}");
struct GeneratedQuery98 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery98::query = fromjson("{\"a\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery98::projection = fromjson("{\"a\":1}");
struct GeneratedQuery99 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery99::query = fromjson("{\"$nor\":[{\"\":{\"$not\":{\"$gte\":{\"$date\": 1202331498200}}}},{\"a\":{\"$regex\":\"/(a|bc)x+yz/\"}},{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery100 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery100::query = fromjson("{\"d\":-3.14159265359}");    BSONObj GeneratedQuery100::projection = fromjson("{b:1}");
struct GeneratedQuery101 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery101::query = fromjson("{\"$nor\":[{\"c\":1},{\"b\":{\"$date\": 1500000}},{b:{\"$date\": 1202331498200}}]}");
struct GeneratedQuery102 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery102::query = fromjson("{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery103 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery103::query = fromjson("{\"arrayField\":''}");
struct GeneratedQuery104 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery104::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery105 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery105::query = fromjson("{\"\":{\"$not\":{\"$exists\":false}}}");
struct GeneratedQuery106 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery106::query = fromjson("{\"c\":true}");    BSONObj GeneratedQuery106::projection = fromjson("{d:1}");
struct GeneratedQuery107 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery107::query = fromjson("{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");    BSONObj GeneratedQuery107::projection = fromjson("{\"b\":1}");
struct GeneratedQuery108 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery108::query = fromjson("{\"\":314159265010}");
struct GeneratedQuery109 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery109::query = fromjson("{a:'The richest man is not he who has the most, but he who needs the least. anything'}");    BSONObj GeneratedQuery109::projection = fromjson("{\"b\":1}");
struct GeneratedQuery110 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery110::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery111 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery111::query = fromjson("{\"b\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery112 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery112::query = fromjson("{\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[25,0.0]},\"$maxDistance\":2225073858072009000.99}}}");    BSONObj GeneratedQuery112::projection = fromjson("{_id:1}");
struct GeneratedQuery113 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery113::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"\":-314159265359,\"arrayField\":{\"$mod\":[314159215,2147483647]},\"c\":{\"$mod\":[314159215,314159215]},\"b\":1797693134862315799999}}}");
struct GeneratedQuery114 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery114::query = fromjson("{\"arrayField\":[null]}");
struct GeneratedQuery115 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery115::query = fromjson("{\"arrayField\":{\"$all\":[]}}");
struct GeneratedQuery116 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery116::query = fromjson("{\"$nor\":[{\"b\":1},{\"arrayField\":{\"$date\": 1391633433037}}]}");    BSONObj GeneratedQuery116::projection = fromjson("{\"c\":1}");
struct GeneratedQuery117 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery117::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery118 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery118::query = fromjson("{\"$nor\":[{a:{\"d\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}]}");    BSONObj GeneratedQuery118::projection = fromjson("{\"arrayField.$\":1,\"c\":1}");
struct GeneratedQuery119 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery119::query = fromjson("{\"b\":null}");
struct GeneratedQuery120 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery120::query = fromjson("{\"b\":''}");    BSONObj GeneratedQuery120::projection = fromjson("{\"b\":1}");
struct GeneratedQuery121 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery121::query = fromjson("{\"_id\":{\"$type\":13}}");
struct GeneratedQuery122 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery122::query = fromjson("{\"a\":''}");
struct GeneratedQuery123 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery123::query = fromjson("{\"_id\":{\"$not\":{\"$exists\":true}}}");
struct GeneratedQuery124 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery124::query = fromjson("{\"d\":{\"$regex\":\"/abc\\def/\"}}");    BSONObj GeneratedQuery124::projection = fromjson("{\"b\":1,\"a\":1}");
struct GeneratedQuery125 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery125::query = fromjson("{\"$or\":[{\"_id\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'m'}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery126 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery126::query = fromjson("{\"$or\":[{\"d\":0},{\"a\":{\"$regex\":\"/^abc(\\d+)/\"}},{\"arrayField\":1}]}");
struct GeneratedQuery127 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery127::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery128 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery128::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery129 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery129::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":{\"$date\": 1202331498200},\"d\":314159265006}}}");
struct GeneratedQuery130 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery130::query = fromjson("{a:314159265014}");
struct GeneratedQuery131 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery131::query = fromjson("{\"arrayField.b\":{\"$lt\":314159265002}}");
struct GeneratedQuery132 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery132::query = fromjson("{a:{\"$mod\":[314159225,314159215]}}");    BSONObj GeneratedQuery132::projection = fromjson("{\"arrayField.$\":1,a:1}");
struct GeneratedQuery133 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery133::query = fromjson("{\"b._id.b\":true}");
struct GeneratedQuery134 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery134::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery134::projection = fromjson("{\"a\":1}");
struct GeneratedQuery135 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery135::query = fromjson("{b:{\"$date\": -111100000}}");    BSONObj GeneratedQuery135::projection = fromjson("{d:{$slice:2}}");
struct GeneratedQuery136 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery136::query = fromjson("{\"$and\":[{\"arrayField\":false}]}");
struct GeneratedQuery137 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery137::query = fromjson("{\"$nor\":[{d:2225073858072009000.99},{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");    BSONObj GeneratedQuery137::projection = fromjson("{c:1}");
struct GeneratedQuery138 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery138::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery139 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery139::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery140 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery140::query = fromjson("{\"a\":0}");
struct GeneratedQuery141 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery141::query = fromjson("{\"arrayField\":[[{\"locLegacy\":[180,25]},null]]}");
struct GeneratedQuery142 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery142::query = fromjson("{\"d\":false}");
struct GeneratedQuery143 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery143::query = fromjson("{c:'Usted puede hacer cualquier cosa, pero no todo.'}");
struct GeneratedQuery144 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery144::query = fromjson("{a:{\"$regex\":\"/(tang|tangerine|tan)/\"}}");
struct GeneratedQuery145 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery145::query = fromjson("{\"arrayField\":0}");    BSONObj GeneratedQuery145::projection = fromjson("{\"a\":1}");
struct GeneratedQuery146 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery146::query = fromjson("{\"b\":{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery147 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery147::query = fromjson("{d:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery147::projection = fromjson("{\"d\":1}");
struct GeneratedQuery148 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery148::query = fromjson("{a:0}");
struct GeneratedQuery149 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery149::query = fromjson("{\"\":{\"$ne\":false}}");
struct GeneratedQuery150 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery150::query = fromjson("{\"$and\":[{\"arrayField.a\":{\"$mod\":[314159265,314159255]}},{\"arrayField\":{\"$size\":NumberInt(314159215)}}]}");    BSONObj GeneratedQuery150::projection = fromjson("{\"a\":1}");
struct GeneratedQuery151 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery151::query = fromjson("{\"$or\":[{\"loc\":{\"$nearSphere\":[-180.0,0.0],\"$maxDistance\":314159265009}}]}");    BSONObj GeneratedQuery151::projection = fromjson("{\"\":1}");
struct GeneratedQuery152 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery152::query = fromjson("{\"arrayField\":-3.14159265859}");
struct GeneratedQuery153 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery153::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery154 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery154::query = fromjson("{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'iim'}}");
struct GeneratedQuery155 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery155::query = fromjson("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery156 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery156::query = fromjson("{_id:'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");    BSONObj GeneratedQuery156::projection = fromjson("{\"c\":1}");
struct GeneratedQuery157 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery157::query = fromjson("{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'mi'}}");    BSONObj GeneratedQuery157::projection = fromjson("{\"\":{$elemMatch:{\"d\":0,\"loc\":{\"$near\":[-180,-90.0]}}}}");
struct GeneratedQuery158 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery158::query = fromjson("{\"arrayField.c\":{\"$not\":{\"$not\":{\"$size\":NumberLong(314159265358979313)}}}}");    BSONObj GeneratedQuery158::projection = fromjson("{\"\":1}");
struct GeneratedQuery159 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery159::query = fromjson("{\"$and\":[{\"arrayField\":314159265008},{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}]}");    BSONObj GeneratedQuery159::projection = fromjson("{\"c\":1,\"d\":1}");
struct GeneratedQuery160 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery160::query = fromjson("{\"\":{\"$exists\":0}}");
struct GeneratedQuery161 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery161::query = fromjson("{a:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery162 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery162::query = fromjson("{\"_id\":{\"$mod\":[314159245,314159225]}}");
struct GeneratedQuery163 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery163::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery164 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery164::query = fromjson("{b:{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery165 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery165::query = fromjson("{\"a\":0}");
struct GeneratedQuery166 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery166::query = fromjson("{c:{\"$all\":[true]}}");    BSONObj GeneratedQuery166::projection = fromjson("{\"c\":1}");
struct GeneratedQuery167 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery167::query = fromjson("{c:{\"$date\": -111100000}}");
struct GeneratedQuery168 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery168::query = fromjson("{\"$nor\":[{\"_id\":{\"$size\":NumberInt(314159245)}},{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[3,6],[6,1],[0,0] ]]}}}}]}");    BSONObj GeneratedQuery168::projection = fromjson("{b:1}");
struct GeneratedQuery169 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery169::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery170 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery170::query = fromjson("{\"$or\":[{\"arrayField\":{\"$elemMatch\":{\"b\":{\"$mod\":[314159295,314159255]}}}},{\"arrayField\":1},{\"_id\":0.00000000049406564841},{\"arrayField\":{\"$lt\":''}}]}");
struct GeneratedQuery171 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery171::query = fromjson("{\"arrayField.d\":{\"$mod\":[314159235,314159255]}}");
struct GeneratedQuery172 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery172::query = fromjson("{\"arrayField\":null}");
struct GeneratedQuery173 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery173::query = fromjson("{\"b\":{\"$exists\":false}}");
struct GeneratedQuery174 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery174::query = fromjson("{\"d\":'You can do anything, but not everything.'}");
struct GeneratedQuery175 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery175::query = fromjson("{\"\":''}");
struct GeneratedQuery176 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery176::query = fromjson("{\"a\":{\"$gte\":0.00002225073858072014}}");
struct GeneratedQuery177 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery177::query = fromjson("{\"a\":314159265012}");
struct GeneratedQuery178 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery178::query = fromjson("{\"_id\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery179 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery179::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery180 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery180::query = fromjson("{a:{\"$date\": 1391633433037}}");
struct GeneratedQuery181 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery181::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery181::projection = fromjson("{\"\":1}");
struct GeneratedQuery182 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery182::query = fromjson("{\"$and\":[{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}]}");    BSONObj GeneratedQuery182::projection = fromjson("{b:1,\"b\":1}");
struct GeneratedQuery183 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery183::query = fromjson("{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery183::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery184 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery184::query = fromjson("{\"_id\":{\"$date\": 1202331498200}}");
struct GeneratedQuery185 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery185::query = fromjson("{\"$nor\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,0]}},{},null]}]}");    BSONObj GeneratedQuery185::projection = fromjson("{c:1,b:1}");
struct GeneratedQuery186 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery186::query = fromjson("{\"arrayField.a\":{\"$elemMatch\":{\"d\":null,\"$where\":'function myFunction() { var x = 1 + 2; }',\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");    BSONObj GeneratedQuery186::projection = fromjson("{\"\":1}");
struct GeneratedQuery187 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery187::query = fromjson("{\"$or\":[{\"arrayField\":''}]}");
struct GeneratedQuery188 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery188::query = fromjson("{\"_id\":['',{\"arrayField\":[{\"a\":{\"arrayField\":[{\"arrayField\":['Echa de menos el 100 por ciento de los tiros que nunca toma.','You must be the change you wish to see in the world. anything',{\"arrayField\":[{\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,0]}},\"d\":'You can do anything, but not everything.'}]},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,0.0]}}]},{\"arrayField\":[{\"a\":''}]}]},{\"d\":null},null]}}]}]}");
struct GeneratedQuery189 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery189::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery190 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery190::query = fromjson("{\"a\":{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery190::projection = fromjson("{c:1}");
struct GeneratedQuery191 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery191::query = fromjson("{\"a\":{\"$regex\":\"/^abc/\"}}");    BSONObj GeneratedQuery191::projection = fromjson("{\"_id\":1,\"d\":1}");
struct GeneratedQuery192 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery192::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery193 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery193::query = fromjson("{\"$or\":[{\"c\":{\"$mod\":[2147483647,314159265]}}]}");    BSONObj GeneratedQuery193::projection = fromjson("{\"b\":1}");
struct GeneratedQuery194 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery194::query = fromjson("{\"\":{\"$not\":{\"$exists\":0}}}");
struct GeneratedQuery195 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery195::query = fromjson("{\"arrayField.a.a\":{\"$all\":[]}}");    BSONObj GeneratedQuery195::projection = fromjson("{\"c\":1}");
struct GeneratedQuery196 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery196::query = fromjson("{\"arrayField\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery197 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery197::query = fromjson("{\"arrayField\":0}");    BSONObj GeneratedQuery197::projection = fromjson("{\"arrayField.$\":1,\"a\":{$elemMatch:{\"a\":'You can do anything, but not everything.'}}}");
struct GeneratedQuery198 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery198::query = fromjson("{\"arrayField.b\":{\"$type\":10}}");    BSONObj GeneratedQuery198::projection = fromjson("{\"a\":1}");
struct GeneratedQuery199 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery199::query = fromjson("{\"arrayField\":1}");    BSONObj GeneratedQuery199::projection = fromjson("{\"a\":1}");
struct GeneratedQuery200 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery200::query = fromjson("{\"$and\":[{\"arrayField\":{\"$mod\":[314159265,314159295],\"$elemMatch\":{b:{\"arrayField\":[1,{\"$date\": 1500000},'You can do anything, but not everything.']}}}}]}");
struct GeneratedQuery201 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery201::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":-3.14159265000,c:{\"$regex\":\"/(tang|tangerine|tan)/\"},a:{\"$not\":{\"$mod\":[314159215,2147483647]}},d:null,\"_id\":{\"$type\":4},\"b\":{\"$regex\":\"/cat/\"}}}}");    BSONObj GeneratedQuery201::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery202 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery202::query = fromjson("{\"_id\":{\"$all\":[{\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}]}}");
struct GeneratedQuery203 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery203::query = fromjson("{\"c\":['You can do anything, but not everything.']}");    BSONObj GeneratedQuery203::projection = fromjson("{\"a\":1,c:1}");
struct GeneratedQuery204 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery204::query = fromjson("{\"arrayField\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}");    BSONObj GeneratedQuery204::projection = fromjson("{\"a\":{$elemMatch:{\"$where\":'(this.a || this.b || this.c || this.d) > 10',\"$where\":'function myFunction() { return this.d != undefined; }'}}}");
struct GeneratedQuery205 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery205::query = fromjson("{\"$or\":[{\"arrayField\":{\"$date\": -111100000}},{\"d\":'You can do anything, but not everything.'}]}");
struct GeneratedQuery206 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery206::query = fromjson("{\"$nor\":[{\"\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'s'}}]}");
struct GeneratedQuery207 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery207::query = fromjson("{\"\":314159265013}");
struct GeneratedQuery208 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery208::query = fromjson("{\"b\":{\"$date\": 1391633433037}}");
struct GeneratedQuery209 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery209::query = fromjson("{\"$and\":[{b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}]}");
struct GeneratedQuery210 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery210::query = fromjson("{a:0.00000000049406564841}");    BSONObj GeneratedQuery210::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery211 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery211::query = fromjson("{\"$or\":[{a:false},{\"c\":314159265008}]}");
struct GeneratedQuery212 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery212::query = fromjson("{\"arrayField\":314159265011}");    BSONObj GeneratedQuery212::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery213 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery213::query = fromjson("{\"\":{\"$exists\":1}}");
struct GeneratedQuery214 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery214::query = fromjson("{\"arrayField.d\":{\"$nin\":[3.14159265359]}}");
struct GeneratedQuery215 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery215::query = fromjson("{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'s'}}");
struct GeneratedQuery216 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery216::query = fromjson("{\"$or\":[{\"arrayField\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'},{\"c\":314159265011}]}");
struct GeneratedQuery217 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery217::query = fromjson("{\"b\":[{\"c\":'You must be the change you wish to see in the world. anything'}]}");    BSONObj GeneratedQuery217::projection = fromjson("{\"arrayField.$\":1,c:{$elemMatch:{\"arrayField\":false}},\"a\":{$slice:2}}");
struct GeneratedQuery218 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery218::query = fromjson("{\"_id\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    BSONObj GeneratedQuery218::projection = fromjson("{\"a\":1}");
struct GeneratedQuery219 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery219::query = fromjson("{\"a\":0}");    BSONObj GeneratedQuery219::projection = fromjson("{\"b\":1}");
struct GeneratedQuery220 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery220::query = fromjson("{\"arrayField\":null}");    BSONObj GeneratedQuery220::projection = fromjson("{\"b\":1}");
struct GeneratedQuery221 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery221::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery221::projection = fromjson("{\"_id\":{$slice:1}}");
struct GeneratedQuery222 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery222::query = fromjson("{\"a\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery223 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery223::query = fromjson("{\"d\":''}");
struct GeneratedQuery224 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery224::query = fromjson("{\"arrayField\":null}");    BSONObj GeneratedQuery224::projection = fromjson("{\"\":1}");
struct GeneratedQuery225 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery225::query = fromjson("{\"_id\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery226 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery226::query = fromjson("{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery226::projection = fromjson("{d:1}");
struct GeneratedQuery227 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery227::query = fromjson("{\"_id\":{\"$lt\":'You can do anything, but not everything.'}}");
struct GeneratedQuery228 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery228::query = fromjson("{\"a\":{\"$date\": 1391633433037}}");
struct GeneratedQuery229 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery229::query = fromjson("{\"b\":0}");
struct GeneratedQuery230 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery230::query = fromjson("{\"c\":-314159265359}");
struct GeneratedQuery231 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery231::query = fromjson("{\"$and\":[{\"arrayField\":null},{c:0},{\"c.d\":true},{\"d\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}]}");
struct GeneratedQuery232 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery232::query = fromjson("{\"\":{\"$regex\":\"/caseless/i\"}}");
struct GeneratedQuery233 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery233::query = fromjson("{\"\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery233::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery234 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery234::query = fromjson("{\"$nor\":[{\"arrayField\":[{\"$date\": -111100000}]},{\"b\":-3.14159265859}]}");
struct GeneratedQuery235 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery235::query = fromjson("{\"a\":{\"$not\":{\"$mod\":[314159285,314159255]}}}");    BSONObj GeneratedQuery235::projection = fromjson("{\"\":1,\"b\":1}");
struct GeneratedQuery236 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery236::query = fromjson("{a:{\"$date\": 1391633433037}}");
struct GeneratedQuery237 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery237::query = fromjson("{c:{\"$not\":{\"$not\":{\"$type\":2}}}}");    BSONObj GeneratedQuery237::projection = fromjson("{d:1}");
struct GeneratedQuery238 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery238::query = fromjson("{\"_id\":314159265015}");
struct GeneratedQuery239 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery239::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery239::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery240 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery240::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery241 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery241::query = fromjson("{\"$or\":[{\"c\":{\"$date\": -111100000}},{\"_id\":{\"$regex\":\"/(a|bc)x+yz/\"}}]}");
struct GeneratedQuery242 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery242::query = fromjson("{\"arrayField\":{\"$all\":[[314159265001,{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]},\"a\":{\"a\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},\"locHaystack\":{ 'lng': 25, 'lat': -90.0}}]]}}");    BSONObj GeneratedQuery242::projection = fromjson("{_id:1}");
struct GeneratedQuery243 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery243::query = fromjson("{\"a\":{\"$not\":{\"$not\":{\"$type\":15}}}}");
struct GeneratedQuery244 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery244::query = fromjson("{\"b\":1}");
struct GeneratedQuery245 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery245::query = fromjson("{\"$or\":[{\"a\":{\"$type\":8,\"$not\":{\"$mod\":[314159235,314159285]}}},{\"arrayField\":{\"$date\": 1202331498200}},{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'mi'}}]}");    BSONObj GeneratedQuery245::projection = fromjson("{\"c\":1,d:1}");
struct GeneratedQuery246 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery246::query = fromjson("{\"arrayField\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery246::projection = fromjson("{\"_id\":1,\"_id\":1}");
struct GeneratedQuery247 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery247::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");    BSONObj GeneratedQuery247::projection = fromjson("{b:1,_id:1,c:1}");
struct GeneratedQuery248 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery248::query = fromjson("{\"d\":{\"$type\":2}}");
struct GeneratedQuery249 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery249::query = fromjson("{\"$or\":[{\"arrayField\":314159265003},{\"arrayField\":1},{\"$where\":'function myFunction() { return this.d != undefined; }'},{a:1}]}");
struct GeneratedQuery250 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery250::query = fromjson("{\"$nor\":[{\"arrayField\":true}]}");    BSONObj GeneratedQuery250::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery251 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery251::query = fromjson("{\"arrayField\":314159265017}");    BSONObj GeneratedQuery251::projection = fromjson("{\"c\":1}");
struct GeneratedQuery252 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery252::query = fromjson("{\"$or\":[{\"a\":1},{\"arrayField.a\":{\"$all\":['You can do anything, but not everything.']}},{\"c\":{\"$in\":[null]}},{\"arrayField\":''}]}");
struct GeneratedQuery253 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery253::query = fromjson("{b:{\"$size\":2147483647,\"$not\":{\"$elemMatch\":{\"a\":3.14159265359}}}}");
struct GeneratedQuery254 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery254::query = fromjson("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery255 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery255::query = fromjson("{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'i'}}");
struct GeneratedQuery256 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery256::query = fromjson("{\"$nor\":[{\"c.c\":''},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery257 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery257::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery258 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery258::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery259 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery259::query = fromjson("{\"a\":{\"$elemMatch\":{\"a\":{\"$regex\":\"/caseless/i\"},\"arrayField\":'You can do anything, but not everything.'}}}");
struct GeneratedQuery260 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery260::query = fromjson("{\"a\":314159265016}");
struct GeneratedQuery261 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery261::query = fromjson("{\"$and\":[{\"b\":{\"a\":null,\"loc\":{\"type\":\"Point\",\"coordinates\":[25,89.9]}}},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery262 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery262::query = fromjson("{\"a\":true}");
struct GeneratedQuery263 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery263::query = fromjson("{\"a\":{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery263::projection = fromjson("{\"a\":{$slice:100}}");
struct GeneratedQuery264 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery264::query = fromjson("{\"\":314159265005}");
struct GeneratedQuery265 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery265::query = fromjson("{\"arrayField.d\":{\"$not\":{\"$exists\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}}}");
struct GeneratedQuery266 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery266::query = fromjson("{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery267 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery267::query = fromjson("{\"\":314159265005}");
struct GeneratedQuery268 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery268::query = fromjson("{\"a\":false}");
struct GeneratedQuery269 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery269::query = fromjson("{\"\":{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery270 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery270::query = fromjson("{c:{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery270::projection = fromjson("{b:1,\"_id\":1}");
struct GeneratedQuery271 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery271::query = fromjson("{\"arrayField\":false}");    BSONObj GeneratedQuery271::projection = fromjson("{b:1,c:1}");
struct GeneratedQuery272 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery272::query = fromjson("{\"b\":{\"$mod\":[314159205,314159265]}}");    BSONObj GeneratedQuery272::projection = fromjson("{\"d\":1}");
struct GeneratedQuery273 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery273::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery273::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery274 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery274::query = fromjson("{\"arrayField\":{\"$all\":[{\"a\":null,\"arrayField\":[],\"locHaystack\":{ 'lng': 180, 'lat': 25},\"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},'Echa de menos el 100 por ciento de los tiros que nunca toma.',{\"d\":{\"d\":null},\"arrayField\":[['When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything']]}]}}");
struct GeneratedQuery275 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery275::query = fromjson("{c:{\"$not\":{\"$mod\":[314159285,314159205]}}}");    BSONObj GeneratedQuery275::projection = fromjson("{\"a\":1,\"b\":1}");
struct GeneratedQuery276 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery276::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery277 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery277::query = fromjson("{\"_id\":{\"$ne\":314159265009}}");
struct GeneratedQuery278 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery278::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'},{\"arrayField\":[[null],null]},{\"d\":{\"$not\":{\"$exists\":true}}},{\"arrayField\":{\"$date\": 1202331498200}},{\"arrayField\":''},{\"b\":{\"$date\": 1500000}}]}");
struct GeneratedQuery279 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery279::query = fromjson("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery280 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery280::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery281 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery281::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery282 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery282::query = fromjson("{\"$nor\":[{a:{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}},{\"arrayField.b\":{\"$elemMatch\":{\"a\":{\"$type\":1},\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}}},{\"a\":{\"$date\": 1500000}}]}");    BSONObj GeneratedQuery282::projection = fromjson("{\"a.b\":{$elemMatch:{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");
struct GeneratedQuery283 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery283::query = fromjson("{\"$or\":[{\"d\":314159265012},{\"\":{\"$lte\":true}},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}]}");
struct GeneratedQuery284 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery284::query = fromjson("{\"$or\":[{\"a\":{\"$gt\":null}},{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'siismm'}}]}");
struct GeneratedQuery285 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery285::query = fromjson("{\"_id\":{\"$date\": 1500000}}");
struct GeneratedQuery286 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery286::query = fromjson("{\"a\":0}");
struct GeneratedQuery287 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery287::query = fromjson("{\"$nor\":[{\"\":314159265009},{d:{\"$regex\":\"/(tang|tangerine|tan)/\"}},{c:{\"$date\": 1202331498200}}]}");
struct GeneratedQuery288 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery288::query = fromjson("{\"\":null}");    BSONObj GeneratedQuery288::projection = fromjson("{\"d\":{$elemMatch:{\"arrayField\":{\"$date\": 1391633433037},\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-33.3,-90.0]}}}}}}");
struct GeneratedQuery289 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery289::query = fromjson("{\"b\":{\"$regex\":\"/^abc/m\"}}");
struct GeneratedQuery290 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery290::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery290::projection = fromjson("{\"a\":1}");
struct GeneratedQuery291 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery291::query = fromjson("{\"b\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");
struct GeneratedQuery292 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery292::query = fromjson("{\"c\":{\"$mod\":[314159295,0]}}");    BSONObj GeneratedQuery292::projection = fromjson("{\"a\":1}");
struct GeneratedQuery293 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery293::query = fromjson("{d:{\"$size\":314159255}}");
struct GeneratedQuery294 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery294::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery295 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery295::query = fromjson("{\"b\":{\"$exists\":0}}");
struct GeneratedQuery296 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery296::query = fromjson("{a:{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery296::projection = fromjson("{\"c\":1}");
struct GeneratedQuery297 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery297::query = fromjson("{\"d\":1}");    BSONObj GeneratedQuery297::projection = fromjson("{\"\":{$slice:1}}");
struct GeneratedQuery298 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery298::query = fromjson("{\"a\":3.14159265359}");
struct GeneratedQuery299 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery299::query = fromjson("{b:{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery300 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery300::query = fromjson("{_id:{\"$mod\":[314159215,314159225]}}");
struct GeneratedQuery301 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery301::query = fromjson("{\"$or\":[{\"arrayField\":0}]}");
struct GeneratedQuery302 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery302::query = fromjson("{\"arrayField.d.c.c\":{\"$size\":NumberInt(-314159265)}}");
struct GeneratedQuery303 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery303::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery304 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery304::query = fromjson("{\"a\":1}");    BSONObj GeneratedQuery304::projection = fromjson("{a:1}");
struct GeneratedQuery305 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery305::query = fromjson("{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'ssisss'}}");    BSONObj GeneratedQuery305::projection = fromjson("{\"b.a\":1}");
struct GeneratedQuery306 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery306::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery306::projection = fromjson("{\"d\":1}");
struct GeneratedQuery307 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery307::query = fromjson("{\"b\":{\"$mod\":[314159205,314159215]}}");    BSONObj GeneratedQuery307::projection = fromjson("{\"d\":1}");
struct GeneratedQuery308 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery308::query = fromjson("{\"$or\":[{\"arrayField\":-3.14159265000}]}");
struct GeneratedQuery309 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery309::query = fromjson("{\"$or\":[{\"arrayField.c\":{\"$not\":{\"$not\":{\"$mod\":[314159285,314159285]}},\"$exists\":true,\"$not\":{\"$not\":{\"$exists\":0}},\"$nin\":['',{\"$date\": 1202331498200}],\"$nin\":[0],\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9',\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"\":'',\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',\"arrayField\":314159265008,\"arrayField\":{\"$date\": -111100000},\"arrayField\":0,\"a\":{\"$date\": 1202331498200}}}}]}");
struct GeneratedQuery310 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery310::query = fromjson("{\"$and\":[{\"d\":314159265007}]}");    BSONObj GeneratedQuery310::projection = fromjson("{\"a\":{$slice:2}}");
struct GeneratedQuery311 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery311::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery312 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery312::query = fromjson("{b:false}");
struct GeneratedQuery313 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery313::query = fromjson("{\"arrayField\":{\"$size\":NumberInt(0)}}");    BSONObj GeneratedQuery313::projection = fromjson("{c:1}");
struct GeneratedQuery314 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery314::query = fromjson("{d:{\"$size\":314159285}}");
struct GeneratedQuery315 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery315::query = fromjson("{\"d\":{\"$regex\":\"/^abc/m\"}}");
struct GeneratedQuery316 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery316::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery316::projection = fromjson("{\"b\":1}");
struct GeneratedQuery317 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery317::query = fromjson("{\"d\":{\"$date\": 1202331498200}}");
struct GeneratedQuery318 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery318::query = fromjson("{_id:{\"$regex\":\"c a t #looks for cats\",\"$options\":'ssi'}}");
struct GeneratedQuery319 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery319::query = fromjson("{\"$or\":[{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery320 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery320::query = fromjson("{d:{\"$regex\":\"c a t #looks for cats\",\"$options\":'ms'}}");
struct GeneratedQuery321 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery321::query = fromjson("{\"$or\":[{\"arrayField\":{\"$date\": 1391633433037}}]}");    BSONObj GeneratedQuery321::projection = fromjson("{\"\":{$slice:100}}");
struct GeneratedQuery322 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery322::query = fromjson("{\"$or\":[{\"arrayField\":''}]}");
struct GeneratedQuery323 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery323::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery323::projection = fromjson("{\"d.d\":1}");
struct GeneratedQuery324 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery324::query = fromjson("{b:{\"$size\":NumberInt(-314159265)},\"$where\":'this.d != undefined'}");
struct GeneratedQuery325 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery325::query = fromjson("{b:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}");
struct GeneratedQuery326 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery326::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery327 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery327::query = fromjson("{\"$or\":[{\"arrayField\":{\"$size\":NumberLong(314159265358979313)}}]}");
struct GeneratedQuery328 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery328::query = fromjson("{\"arrayField\":{\"$size\":NumberInt(0)}}");    BSONObj GeneratedQuery328::projection = fromjson("{\"d\":{$elemMatch:{\"c\":{\"$mod\":[314159205,314159215]},\"arrayField\":{\"$size\":314159225}}},d:1,\"\":1}");
struct GeneratedQuery329 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery329::query = fromjson("{\"d\":{\"$date\": 1202331498200}}");
struct GeneratedQuery330 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery330::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery330::projection = fromjson("{d:{$elemMatch:{\"arrayField\":1,\"arrayField.d\":{\"$exists\":true}}}}");
struct GeneratedQuery331 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery331::query = fromjson("{\"arrayField\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");    BSONObj GeneratedQuery331::projection = fromjson("{\"c\":1}");
struct GeneratedQuery332 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery332::query = fromjson("{\"arrayField\":{\"$type\":10}}");    BSONObj GeneratedQuery332::projection = fromjson("{\"c\":1}");
struct GeneratedQuery333 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery333::query = fromjson("{\"\":{\"$mod\":[2147483647,314159295]}}");    BSONObj GeneratedQuery333::projection = fromjson("{d:1,\"b\":1}");
struct GeneratedQuery334 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery334::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery334::projection = fromjson("{\"a\":1}");
struct GeneratedQuery335 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery335::query = fromjson("{\"$and\":[{\"b\":[{\"$date\": 1391633433037}]}]}");    BSONObj GeneratedQuery335::projection = fromjson("{\"a\":1,\"c\":1}");
struct GeneratedQuery336 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery336::query = fromjson("{\"$and\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"arrayField\":true}]}");
struct GeneratedQuery337 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery337::query = fromjson("{\"d.b\":314159265019}");
struct GeneratedQuery338 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery338::query = fromjson("{\"$and\":[{\"b\":''},{_id:314159265018}]}");
struct GeneratedQuery339 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery339::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'},{\"arrayField\":true}]}");    BSONObj GeneratedQuery339::projection = fromjson("{\"d\":1}");
struct GeneratedQuery340 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery340::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery341 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery341::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery342 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery342::query = fromjson("{b:''}");
struct GeneratedQuery343 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery343::query = fromjson("{\"c\":{\"$type\":18}}");
struct GeneratedQuery344 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery344::query = fromjson("{\"$and\":[{b:''}]}");
struct GeneratedQuery345 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery345::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery345::projection = fromjson("{\"c\":1,b:1,\"d\":1,\"c\":1}");
struct GeneratedQuery346 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery346::query = fromjson("{\"arrayField\":{\"$all\":[{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,90.0]}}]},'You miss 100 percent of the shots you never take. anything',{},null,{\"arrayField\":[{\"arrayField\":[[''],{\"b\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'},'']},'Usted puede hacer cualquier cosa, pero no todo.',0]}]}}");    BSONObj GeneratedQuery346::projection = fromjson("{a:1}");
struct GeneratedQuery347 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery347::query = fromjson("{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'m'}}");    BSONObj GeneratedQuery347::projection = fromjson("{\"arrayField.$\":1,\"\":1}");
struct GeneratedQuery348 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery348::query = fromjson("{\"$and\":[{\"c\":'You can do anything, but not everything.'}]}");
struct GeneratedQuery349 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery349::query = fromjson("{\"a\":{\"locLegacy\":[-33.3,-25]}}");
struct GeneratedQuery350 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery350::query = fromjson("{\"a\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery351 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery351::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery351::projection = fromjson("{\"c\":1}");
struct GeneratedQuery352 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery352::query = fromjson("{\"b\":{\"$regex\":\"/caseless/i\"}}");
struct GeneratedQuery353 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery353::query = fromjson("{\"\":''}");
struct GeneratedQuery354 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery354::query = fromjson("{\"\":314159265010}");    BSONObj GeneratedQuery354::projection = fromjson("{\"d\":1,\"c\":{$elemMatch:{b:'You can do anything, but not everything.'}}}");
struct GeneratedQuery355 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery355::query = fromjson("{a:[{\"b\":0},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-90.0]}},{\"$date\": 1500000}]}");
struct GeneratedQuery356 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery356::query = fromjson("{\"$nor\":[{\"_id\":{\"$gt\":{\"$date\": 1202331498200}}}]}");    BSONObj GeneratedQuery356::projection = fromjson("{a:1}");
struct GeneratedQuery357 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery357::query = fromjson("{\"a\":{\"$regex\":\"/cat/\"}}");    BSONObj GeneratedQuery357::projection = fromjson("{c:1}");
struct GeneratedQuery358 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery358::query = fromjson("{a:{\"$not\":{\"$in\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',null]}}}");
struct GeneratedQuery359 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery359::query = fromjson("{\"b\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'m'}}");
struct GeneratedQuery360 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery360::query = fromjson("{\"a\":{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery360::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery361 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery361::query = fromjson("{\"d\":{\"$date\": 1391633433037}}");
struct GeneratedQuery362 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery362::query = fromjson("{\"a\":{\"$mod\":[314159225,314159255]}}");    BSONObj GeneratedQuery362::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery363 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery363::query = fromjson("{\"c\":{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery363::projection = fromjson("{_id:1,\"d._id\":1}");
struct GeneratedQuery364 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery364::query = fromjson("{\"c\":{\"$date\": 1202331498200}}");
struct GeneratedQuery365 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery365::query = fromjson("{\"$nor\":[{\"b\":-3.14159265359}]}");
struct GeneratedQuery366 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery366::query = fromjson("{\"b\":314159265009}");    BSONObj GeneratedQuery366::projection = fromjson("{\"b\":1}");
struct GeneratedQuery367 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery367::query = fromjson("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{\"b.d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}]}");
struct GeneratedQuery368 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery368::query = fromjson("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery369 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery369::query = fromjson("{\"d\":{\"$date\": 1500000}}");
struct GeneratedQuery370 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery370::query = fromjson("{c:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery370::projection = fromjson("{\"\":1}");
struct GeneratedQuery371 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery371::query = fromjson("{\"b\":0}");
struct GeneratedQuery372 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery372::query = fromjson("{\"c\":{\"$date\": -111100000}}");
struct GeneratedQuery373 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery373::query = fromjson("{\"arrayField\":{\"$size\":314159245}}");
struct GeneratedQuery374 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery374::query = fromjson("{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'si'}}");
struct GeneratedQuery375 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery375::query = fromjson("{\"a\":null}");
struct GeneratedQuery376 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery376::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [0,0],[3,1], [3,2], [2,7],[-1,10], [-2,5], [-3,2],[-7,-2], [-5,-5], [-1,-19],[2,-8], [2,-5],[0,0]]]}}}}");
struct GeneratedQuery377 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery377::query = fromjson("{\"\":{\"$date\": 1500000}}");
struct GeneratedQuery378 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery378::query = fromjson("{\"$nor\":[{\"_id\":{\"$gt\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',[{\"locHaystack\":[25,0]},2225073858072009000.99]]}}]}");    BSONObj GeneratedQuery378::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery379 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery379::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery380 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery380::query = fromjson("{\"d\":true}");    BSONObj GeneratedQuery380::projection = fromjson("{\"arrayField.$\":1,\"_id\":{$slice:1},\"d\":{$elemMatch:{\"arrayField\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}}}");
struct GeneratedQuery381 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery381::query = fromjson("{\"arrayField.c\":{\"$exists\":0}}");
struct GeneratedQuery382 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery382::query = fromjson("{\"c\":1}");
struct GeneratedQuery383 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery383::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery384 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery384::query = fromjson("{\"d\":314159265007}");
struct GeneratedQuery385 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery385::query = fromjson("{\"c\":{\"$mod\":[2147483647,314159225]}}");
struct GeneratedQuery386 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery386::query = fromjson("{\"\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    BSONObj GeneratedQuery386::projection = fromjson("{d:1}");
struct GeneratedQuery387 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery387::query = fromjson("{c:{\"$regex\":\"/^abc/\"}}");
struct GeneratedQuery388 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery388::query = fromjson("{a:{\"$mod\":[314159235,314159295]}}");
struct GeneratedQuery389 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery389::query = fromjson("{d:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");    BSONObj GeneratedQuery389::projection = fromjson("{\"c\":1}");
struct GeneratedQuery390 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery390::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[0,-89.9],[180,89.9]]}}},\"arrayField\":0}");
struct GeneratedQuery391 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery391::query = fromjson("{\"a\":{\"$regex\":\"/^abc(\\d+)/\"}}");    BSONObj GeneratedQuery391::projection = fromjson("{\"a\":1}");
struct GeneratedQuery392 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery392::query = fromjson("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery393 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery393::query = fromjson("{\"b\":314159265017}");    BSONObj GeneratedQuery393::projection = fromjson("{a:1,\"\":1}");
struct GeneratedQuery394 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery394::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery394::projection = fromjson("{\"b\":1}");
struct GeneratedQuery395 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery395::query = fromjson("{\"$or\":[{a:true},{\"c\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'},{\"b\":{\"$lt\":0.00000000049406564841}}]}");
struct GeneratedQuery396 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery396::query = fromjson("{\"arrayField\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");    BSONObj GeneratedQuery396::projection = fromjson("{\"c\":1}");
struct GeneratedQuery397 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery397::query = fromjson("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery398 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery398::query = fromjson("{c:{\"$mod\":[314159255,314159255],\"$all\":[1],\"$not\":{\"$not\":{\"$mod\":[314159205,314159225]}}}}");    BSONObj GeneratedQuery398::projection = fromjson("{\"\":1}");
struct GeneratedQuery399 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery399::query = fromjson("{a:{\"$not\":{\"$all\":['','To the man who only has a hammer, everything he encounters begins to look like a nail. anything']}}}");
struct GeneratedQuery400 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery400::query = fromjson("{\"d\":{\"$exists\":true}}");
struct GeneratedQuery401 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery401::query = fromjson("{\"loc\":{\"$nearSphere\":[180,0],\"$maxDistance\":314159265016}}");
struct GeneratedQuery402 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery402::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$polygon\":[[25,0],[-180,89.9],[0.0,90.0]],\"$uniqueDocs\":true}}}");    BSONObj GeneratedQuery402::projection = fromjson("{\"a\":1,\"d\":1}");
struct GeneratedQuery403 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery403::query = fromjson("{\"arrayField\":{\"$not\":{\"$gte\":false}}}");
struct GeneratedQuery404 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery404::query = fromjson("{a:['']}");
struct GeneratedQuery405 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery405::query = fromjson("{\"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");
struct GeneratedQuery406 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery406::query = fromjson("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery407 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery407::query = fromjson("{\"d\":{\"$all\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-90]}},''],\"$mod\":[314159275,314159295],\"$mod\":[314159275,314159285]}}");
struct GeneratedQuery408 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery408::query = fromjson("{\"a\":1}");    BSONObj GeneratedQuery408::projection = fromjson("{\"a\":1}");
struct GeneratedQuery409 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery409::query = fromjson("{a:[[{\"arrayField\":['You can do anything, but not everything.','You can do anything, but not everything.','You can do anything, but not everything.']}]]}");
struct GeneratedQuery410 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery410::query = fromjson("{\"b\":true}");
struct GeneratedQuery411 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery411::query = fromjson("{\"c\":{\"$type\":13}}");    BSONObj GeneratedQuery411::projection = fromjson("{\"arrayField.$\":1,b:1}");
struct GeneratedQuery412 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery412::query = fromjson("{\"a\":''}");    BSONObj GeneratedQuery412::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery413 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery413::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}]}");    BSONObj GeneratedQuery413::projection = fromjson("{\"\":1}");
struct GeneratedQuery414 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery414::query = fromjson("{\"d\":{\"$nin\":[true,{\"$date\": 1500000},{\"$date\": -111100000},314159265007]}}");
struct GeneratedQuery415 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery415::query = fromjson("{\"c\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'i'}}");
struct GeneratedQuery416 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery416::query = fromjson("{\"arrayField\":314159265006}");
struct GeneratedQuery417 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery417::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery418 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery418::query = fromjson("{b:{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery419 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery419::query = fromjson("{\"d\":0}");
struct GeneratedQuery420 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery420::query = fromjson("{\"arrayField\":314159265004}");
struct GeneratedQuery421 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery421::query = fromjson("{\"d\":{\"$mod\":[314159285,314159205]}}");
struct GeneratedQuery422 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery422::query = fromjson("{\"a\":1}");    BSONObj GeneratedQuery422::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery423 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery423::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery424 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery424::query = fromjson("{\"a\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery424::projection = fromjson("{\"d\":1}");
struct GeneratedQuery425 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery425::query = fromjson("{\"a\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'m'}}");
struct GeneratedQuery426 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery426::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery427 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery427::query = fromjson("{\"$and\":[{\"c\":{\"$type\":9}}]}");    BSONObj GeneratedQuery427::projection = fromjson("{\"d\":{$slice:1}}");
struct GeneratedQuery428 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery428::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery429 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery429::query = fromjson("{\"a\":0}");    BSONObj GeneratedQuery429::projection = fromjson("{b:1,b:1}");
struct GeneratedQuery430 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery430::query = fromjson("{\"$and\":[{b:{\"$regex\":\"/\\Big(\\w\\w)i/\"}},{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}},{\"arrayField.c\":{\"$size\":NumberLong(314159265358979343)}},{\"c\":{\"$exists\":{\"$date\": 1202331498200}}}]}");
struct GeneratedQuery431 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery431::query = fromjson("{\"a\":{\"$lt\":null}}");
struct GeneratedQuery432 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery432::query = fromjson("{\"a\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}");    BSONObj GeneratedQuery432::projection = fromjson("{\"arrayField.$\":1,a:1}");
struct GeneratedQuery433 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery433::query = fromjson("{\"arrayField\":{\"$not\":{\"$ne\":['']}}}");    BSONObj GeneratedQuery433::projection = fromjson("{d:1}");
struct GeneratedQuery434 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery434::query = fromjson("{\"arrayField\":[{\"arrayField\":['You can do anything, but not everything.']}]}");    BSONObj GeneratedQuery434::projection = fromjson("{\"a\":1}");
struct GeneratedQuery435 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery435::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery436 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery436::query = fromjson("{\"$nor\":[{\"c\":true},{\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'s'}}]}");
struct GeneratedQuery437 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery437::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery437::projection = fromjson("{\"a\":1}");
struct GeneratedQuery438 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery438::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery439 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery439::query = fromjson("{\"_id\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'}");
struct GeneratedQuery440 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery440::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery440::projection = fromjson("{c:1}");
struct GeneratedQuery441 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery441::query = fromjson("{c:{\"_id\":'I quit therapy because my analyst was trying to help me behind my back. anything'}}");    BSONObj GeneratedQuery441::projection = fromjson("{\"arrayField.$\":1,\"a\":1}");
struct GeneratedQuery442 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery442::query = fromjson("{\"$and\":[{\"arrayField.b\":{\"$type\":14}},{\"arrayField\":{\"$date\": 1391633433037}},{\"c\":314159265018},{\"b\":{\"$date\": 1391633433037}}]}");
struct GeneratedQuery443 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery443::query = fromjson("{\"arrayField\":{\"$all\":[{}]}}");    BSONObj GeneratedQuery443::projection = fromjson("{\"a\":{$slice:2},b:1}");
struct GeneratedQuery444 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery444::query = fromjson("{\"d\":{\"$date\": 1500000}}");
struct GeneratedQuery445 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery445::query = fromjson("{\"c\":true}");    BSONObj GeneratedQuery445::projection = fromjson("{\"b\":1}");
struct GeneratedQuery446 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery446::query = fromjson("{a:''}");    BSONObj GeneratedQuery446::projection = fromjson("{c:1}");
struct GeneratedQuery447 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery447::query = fromjson("{\"\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    BSONObj GeneratedQuery447::projection = fromjson("{\"c\":1}");
struct GeneratedQuery448 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery448::query = fromjson("{\"_id\":314159265015}");
struct GeneratedQuery449 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery449::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery450 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery450::query = fromjson("{\"d.b\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery451 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery451::query = fromjson("{\"$nor\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");
struct GeneratedQuery452 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery452::query = fromjson("{\"\":{\"$regex\":\"/\\Big(\\w\\w)i/\"}}");
struct GeneratedQuery453 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery453::query = fromjson("{\"b\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'},\"arrayField\":{\"$date\": 1391633433037},\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery454 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery454::query = fromjson("{c:'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");
struct GeneratedQuery455 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery455::query = fromjson("{\"$and\":[{\"_id\":1}]}");
struct GeneratedQuery456 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery456::query = fromjson("{\"arrayField.a\":{\"$size\":NumberInt(314159255)}}");
struct GeneratedQuery457 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery457::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery458 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery458::query = fromjson("{a:314159265008}");    BSONObj GeneratedQuery458::projection = fromjson("{\"\":1,a:{$slice:1}}");
struct GeneratedQuery459 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery459::query = fromjson("{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}}}");
struct GeneratedQuery460 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery460::query = fromjson("{\"$nor\":[{\"arrayField.c\":{\"$mod\":[314159275,314159235],\"$mod\":[314159235,314159215]}},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},{a:{\"$size\":NumberInt(0)}}]}");
struct GeneratedQuery461 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery461::query = fromjson("{\"$nor\":[{c:null}]}");
struct GeneratedQuery462 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery462::query = fromjson("{c:false}");
struct GeneratedQuery463 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery463::query = fromjson("{a:-314159265359}");
struct GeneratedQuery464 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery464::query = fromjson("{\"$nor\":[{\"c\":null},{\"arrayField\":''}]}");
struct GeneratedQuery465 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery465::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");
struct GeneratedQuery466 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery466::query = fromjson("{\"arrayField\":-314159265359}");    BSONObj GeneratedQuery466::projection = fromjson("{c:1}");
struct GeneratedQuery467 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery467::query = fromjson("{\"_id\":314159265005}");
struct GeneratedQuery468 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery468::query = fromjson("{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery469 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery469::query = fromjson("{\"\":{\"$date\": 1500000}}");
struct GeneratedQuery470 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery470::query = fromjson("{d:{\"$date\": 1500000}}");
struct GeneratedQuery471 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery471::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"arrayField\":{\"$not\":{\"$not\":{\"$mod\":[314159245,314159295]}}},\"arrayField\":1,\"arrayField.d._id\":{\"$type\":7}}}}");    BSONObj GeneratedQuery471::projection = fromjson("{\"\":1}");
struct GeneratedQuery472 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery472::query = fromjson("{\"arrayField.d\":{\"$type\":14,\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'},\"$type\":127,\"$in\":[2225073858072009000.99],\"$mod\":[314159205,314159295]}}");    BSONObj GeneratedQuery472::projection = fromjson("{c:1}");
struct GeneratedQuery473 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery473::query = fromjson("{\"b\":{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery474 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery474::query = fromjson("{a:{\"c\":{\"locLegacy\":[0,25]}}}");
struct GeneratedQuery475 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery475::query = fromjson("{a:{\"$date\": 1500000}}");
struct GeneratedQuery476 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery476::query = fromjson("{\"d\":'You must be the change you wish to see in the world. anything'}");
struct GeneratedQuery477 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery477::query = fromjson("{\"a\":314159265001}");
struct GeneratedQuery478 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery478::query = fromjson("{\"c\":{\"$gte\":'I quit therapy because my analyst was trying to help me behind my back. anything'}}");    BSONObj GeneratedQuery478::projection = fromjson("{\"a\":1}");
struct GeneratedQuery479 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery479::query = fromjson("{\"arrayField\":{\"$size\":0}}");    BSONObj GeneratedQuery479::projection = fromjson("{\"arrayField.$\":1,_id:1}");
struct GeneratedQuery480 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery480::query = fromjson("{\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}");    BSONObj GeneratedQuery480::projection = fromjson("{\"\":1}");
struct GeneratedQuery481 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery481::query = fromjson("{\"$nor\":[{\"arrayField\":314159265011},{c:{\"$nin\":[1,'Usted puede hacer cualquier cosa, pero no todo.','You can do anything, but not everything.']}},{\"\":0},{\"b\":{\"$lt\":{\"$date\": -111100000}}}]}");
struct GeneratedQuery482 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery482::query = fromjson("{\"$or\":[{\"\":null},{\"arrayField\":{\"$elemMatch\":{\"\":{\"$not\":{\"$not\":{\"$gt\":'The richest man is not he who has the most, but he who needs the least. anything'}}}}}}]}");    BSONObj GeneratedQuery482::projection = fromjson("{\"b\":{$slice:2}}");
struct GeneratedQuery483 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery483::query = fromjson("{\"a\":false}");
struct GeneratedQuery484 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery484::query = fromjson("{\"a\":{\"$date\": 1202331498200}}");
struct GeneratedQuery485 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery485::query = fromjson("{\"arrayField\":{\"$date\": -111100000}}");
struct GeneratedQuery486 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery486::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery487 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery487::query = fromjson("{\"$and\":[{\"b\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}},{\"_id\":{\"$exists\":0,\"$not\":{\"$not\":{\"$exists\":true}},\"$mod\":[314159235,314159275],\"$ne\":''}},{\"arrayField\":['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,90]}},{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0.0]}},314159265018,'']}]}");    BSONObj GeneratedQuery487::projection = fromjson("{\"d\":1,\"c\":1,\"c\":1,\"c\":1,\"a\":1,\"d\":{$slice:0}}");
struct GeneratedQuery488 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery488::query = fromjson("{\"$or\":[{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery489 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery489::query = fromjson("{\"arrayField\":314159265000}");    BSONObj GeneratedQuery489::projection = fromjson("{d:1}");
struct GeneratedQuery490 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery490::query = fromjson("{\"arrayField\":null}");    BSONObj GeneratedQuery490::projection = fromjson("{\"b\":{$elemMatch:{\"$where\":'function myFunction() { var x = 1 + 2; }',d:{\"$lte\":[{\"arrayField\":[{\"locHaystack\":{ 'lng': 0, 'lat': 89.9},\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"a\":'You can do anything, but not everything.'}]}]}}}}");
struct GeneratedQuery491 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery491::query = fromjson("{\"c\":{\"$nin\":[314159265011,['',{\"locHaystack\":{ 'lng': 0.0, 'lat': 90}}],0]}}");
struct GeneratedQuery492 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery492::query = fromjson("{\"b\":0}");    BSONObj GeneratedQuery492::projection = fromjson("{\"\":{$slice:2}}");
struct GeneratedQuery493 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery493::query = fromjson("{_id:{\"$mod\":[314159265,314159205]}}");
struct GeneratedQuery494 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery494::query = fromjson("{\"b\":{\"$all\":['You must be the change you wish to see in the world. anything',{\"arrayField\":['You can do anything, but not everything.',{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-33.3]}},{\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[179.9,-89.9]}}]}]},[{\"arrayField\":[{}],\"a\":{\"locHaystack\":{ 'lng': 0, 'lat': -89.9}}}]],\"arrayField\":[314159265005],\"arrayField\":[{\"locHaystack\":{ 'lng': -180, 'lat': -33.3}}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[180.0,90.0]}},[null,{\"locHaystack\":[179.9,-90]},{\"c\":{\"arrayField\":['I quit therapy because my analyst was trying to help me behind my back. anything']}},2225073858072009000.99]]}}");
struct GeneratedQuery495 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery495::query = fromjson("{b:'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");
struct GeneratedQuery496 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery496::query = fromjson("{\"$nor\":[{\"b\":{\"$all\":[''],\"$not\":{\"$in\":['You can do anything, but not everything.']},\"$mod\":[314159265,314159205]}}]}");
struct GeneratedQuery497 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery497::query = fromjson("{\"$or\":[{\"_id\":{\"$not\":{\"$not\":{\"$not\":{\"$mod\":[314159265,314159275]}}},\"$all\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,-89.9]}},{\"$date\": 1202331498200}],\"$size\":NumberLong(314159265358979383),\"$exists\":0,\"$size\":NumberInt(-314159265)}}]}");
struct GeneratedQuery498 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery498::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery499 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery499::query = fromjson("{\"b\":{\"$gt\":0.00002225073858072014}}");
struct GeneratedQuery500 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery500::query = fromjson("{\"$nor\":[{\"\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}]}");
struct GeneratedQuery501 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery501::query = fromjson("{\"arrayField.c\":{\"$all\":['The richest man is not he who has the most, but he who needs the least. anything']}}");
struct GeneratedQuery502 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery502::query = fromjson("{\"$or\":[{\"arrayField.d.b.c\":{\"$not\":{\"$not\":{\"$not\":{\"$type\":14}}},\"$elemMatch\":{\"b\":{\"$regex\":\"/(a)|(b)/\"},\"arrayField\":314159265010,\"arrayField\":{\"$date\": 1500000},\"b\":{\"$mod\":[314159285,314159215]},_id:314159265019,\"a\":314159265015}}}]}");
struct GeneratedQuery503 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery503::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery504 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery504::query = fromjson("{\"arrayField\":{\"$nin\":[{\"$date\": 1500000},314159265014]}}");    BSONObj GeneratedQuery504::projection = fromjson("{\"\":1}");
struct GeneratedQuery505 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery505::query = fromjson("{\"$or\":[{d:0},{\"arrayField\":null},{d:314159265015}]}");
struct GeneratedQuery506 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery506::query = fromjson("{\"$or\":[{\"d\":true},{b:null}]}");
struct GeneratedQuery507 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery507::query = fromjson("{d:'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery508 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery508::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery509 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery509::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery510 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery510::query = fromjson("{a:314159265007}");
struct GeneratedQuery511 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery511::query = fromjson("{\"arrayField.b\":{\"$elemMatch\":{\"arrayField.c\":{\"$all\":[]}}},\"\":-314159265359}");    BSONObj GeneratedQuery511::projection = fromjson("{\"c\":1}");
struct GeneratedQuery512 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery512::query = fromjson("{\"_id\":[]}");
struct GeneratedQuery513 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery513::query = fromjson("{\"$and\":[{\"arrayField\":{\"$date\": 1202331498200}}]}");
struct GeneratedQuery514 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery514::query = fromjson("{\"a\":{\"$all\":[{\"arrayField\":[{},1],\"b\":null,\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"arrayField\":[[]]},[314159265019,{\"b\":'You can do anything, but not everything.'},'',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,33.3]}},'',{},'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',314159265003],{}]}}");    BSONObj GeneratedQuery514::projection = fromjson("{\"c\":{$elemMatch:{\"d\":-3.14159265359}}}");
struct GeneratedQuery515 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery515::query = fromjson("{\"\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");
struct GeneratedQuery516 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery516::query = fromjson("{\"$or\":[{\"c\":''},{\"c\":'You can do anything, but not everything.'},{\"d\":{\"$type\":127}},{\"c\":{\"$size\":NumberLong(314159265358979353)}},{b:{\"$mod\":[314159265,314159225]}}]}");    BSONObj GeneratedQuery516::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery517 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery517::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery518 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery518::query = fromjson("{\"b\":false}");
struct GeneratedQuery519 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery519::query = fromjson("{\"b\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}");
struct GeneratedQuery520 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery520::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery520::projection = fromjson("{\"a\":1}");
struct GeneratedQuery521 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery521::query = fromjson("{\"$nor\":[{d:{\"$date\": 1500000}},{\"arrayField\":'You can do anything, but not everything.'},{d:{\"$type\":-1}},{\"b\":{\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}]}");
struct GeneratedQuery522 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery522::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery523 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery523::query = fromjson("{\"d\":{\"$mod\":[314159235,314159225]}}");
struct GeneratedQuery524 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery524::query = fromjson("{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery525 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery525::query = fromjson("{\"arrayField.a\":{\"$size\":314159275}}");    BSONObj GeneratedQuery525::projection = fromjson("{\"c\":1,d:{$elemMatch:{\"c.b\":{\"$date\": -111100000},\"loc\":{\"$near\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}}},\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'},\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[0,0]},\"$maxDistance\":1797693134862315799999}},\"a\":314159265003}}}");
struct GeneratedQuery526 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery526::query = fromjson("{\"$nor\":[{c:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'sim'}},{\"_id\":1}]}");    BSONObj GeneratedQuery526::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery527 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery527::query = fromjson("{\"$nor\":[{\"arrayField\":1},{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}},{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}},{\"d\":true}]}");
struct GeneratedQuery528 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery528::query = fromjson("{\"arrayField.b.c\":{\"$elemMatch\":{\"c\":{\"$regex\":\"/(tang|tangerine|tan)/\"},\"b\":{\"$date\": 1500000}}}}");
struct GeneratedQuery529 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery529::query = fromjson("{\"a\":1}");    BSONObj GeneratedQuery529::projection = fromjson("{_id:1,\"d\":{$slice:1}}");
struct GeneratedQuery530 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery530::query = fromjson("{\"c\":{\"$gte\":314159265005},\"b\":'Usted puede hacer cualquier cosa, pero no todo.',\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery530::projection = fromjson("{b:1}");
struct GeneratedQuery531 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery531::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery532 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery532::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$date\": 1202331498200}},{\"\":{\"$regex\":\"/(a)|(b)/\"}},{b:true}]}");
struct GeneratedQuery533 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery533::query = fromjson("{\"a\":{\"$regex\":\"/^abc(\\d+)/\"}}");    BSONObj GeneratedQuery533::projection = fromjson("{\"c\":1}");
struct GeneratedQuery534 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery534::query = fromjson("{\"b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}");    BSONObj GeneratedQuery534::projection = fromjson("{\"d\":{$slice:10},\"_id\":1}");
struct GeneratedQuery535 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery535::query = fromjson("{d:null}");    BSONObj GeneratedQuery535::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery536 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery536::query = fromjson("{\"_id\":{\"$all\":['',{\"locHaystack\":[33.3,25]}]}}");
struct GeneratedQuery537 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery537::query = fromjson("{c:{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery538 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery538::query = fromjson("{\"$and\":[{\"_id\":{\"$not\":{\"$type\":2},\"$mod\":[314159295,314159295],\"$elemMatch\":{\"arrayField._id\":{\"$elemMatch\":{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}}},\"$exists\":true,\"$size\":314159205,\"$mod\":[314159205,314159205],\"$all\":[null]}},{\"\":{\"$exists\":true}},{\"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},{\"_id\":{\"$date\": 1202331498200}}]}");
struct GeneratedQuery539 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery539::query = fromjson("{\"arrayField.c.b\":{\"$size\":NumberInt(-314159265)}}");
struct GeneratedQuery540 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery540::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$mod\":[314159295,314159215]}}]}");
struct GeneratedQuery541 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery541::query = fromjson("{\"d\":false}");
struct GeneratedQuery542 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery542::query = fromjson("{a:{\"$lte\":'I quit therapy because my analyst was trying to help me behind my back. anything'},\"arrayField.d.c\":{\"$not\":{\"$ne\":314159265015}}}");    BSONObj GeneratedQuery542::projection = fromjson("{\"b\":1}");
struct GeneratedQuery543 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery543::query = fromjson("{a:{\"$mod\":[2147483647,2147483647]}}");    BSONObj GeneratedQuery543::projection = fromjson("{\"d\":1}");
struct GeneratedQuery544 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery544::query = fromjson("{\"b\":1}");
struct GeneratedQuery545 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery545::query = fromjson("{\"$or\":[{\"arrayField\":{\"$gt\":0.00002225073858072014}}]}");
struct GeneratedQuery546 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery546::query = fromjson("{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[0.0,90]}}}}");    BSONObj GeneratedQuery546::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery547 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery547::query = fromjson("{d:{\"$elemMatch\":{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }',\"arrayField\":3.14159265359}}}");    BSONObj GeneratedQuery547::projection = fromjson("{\"c\":1}");
struct GeneratedQuery548 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery548::query = fromjson("{\"arrayField._id\":{\"$size\":314159285}}");
struct GeneratedQuery549 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery549::query = fromjson("{\"b\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery550 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery550::query = fromjson("{\"d\":{\"$not\":{\"$not\":{\"$not\":{\"$not\":{\"$ne\":0}}}}}}");    BSONObj GeneratedQuery550::projection = fromjson("{\"a\":1}");
struct GeneratedQuery551 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery551::query = fromjson("{\"b\":{\"$regex\":\"/^abc/\"}}");    BSONObj GeneratedQuery551::projection = fromjson("{\"a\":1}");
struct GeneratedQuery552 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery552::query = fromjson("{\"\":314159265002}");    BSONObj GeneratedQuery552::projection = fromjson("{\"c\":1,\"d\":1}");
struct GeneratedQuery553 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery553::query = fromjson("{\"arrayField\":false}");    BSONObj GeneratedQuery553::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery554 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery554::query = fromjson("{\"d\":{\"$size\":NumberLong(314159265358979363)}}");
struct GeneratedQuery555 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery555::query = fromjson("{\"c\":{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");
struct GeneratedQuery556 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery556::query = fromjson("{\"a\":true}");
struct GeneratedQuery557 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery557::query = fromjson("{\"b\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery557::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery558 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery558::query = fromjson("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'s'}}");
struct GeneratedQuery559 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery559::query = fromjson("{\"$or\":[{\"$where\":'this.d != undefined'},{\"arrayField\":{\"locHaystack\":{ 'lng': -179.9, 'lat': 25}}},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},{\"c\":{\"$type\":16}}]}");    BSONObj GeneratedQuery559::projection = fromjson("{\"\":1}");
struct GeneratedQuery560 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery560::query = fromjson("{\"arrayField.c\":{\"$all\":[true,1]}}");
struct GeneratedQuery561 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery561::query = fromjson("{\"c.d._id.b\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery561::projection = fromjson("{\"c._id\":1}");
struct GeneratedQuery562 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery562::query = fromjson("{_id:{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");    BSONObj GeneratedQuery562::projection = fromjson("{a:{$slice:1}}");
struct GeneratedQuery563 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery563::query = fromjson("{\"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}");
struct GeneratedQuery564 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery564::query = fromjson("{\"$or\":[{\"b\":''}]}");
struct GeneratedQuery565 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery565::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery565::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery566 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery566::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery567 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery567::query = fromjson("{\"arrayField\":1}");
struct GeneratedQuery568 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery568::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery569 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery569::query = fromjson("{\"arrayField.b\":{\"$elemMatch\":{\"arrayField._id\":{\"$mod\":[314159245,314159245],\"$lte\":-3.14159265359,\"$not\":{\"$elemMatch\":{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}}}}}}");
struct GeneratedQuery570 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery570::query = fromjson("{\"$or\":[{\"b\":314159265007}]}");    BSONObj GeneratedQuery570::projection = fromjson("{\"b\":1,\"a\":1,c:1}");
struct GeneratedQuery571 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery571::query = fromjson("{\"$nor\":[{\"d\":{\"$mod\":[314159205,0]}},{\"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'}]}");
struct GeneratedQuery572 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery572::query = fromjson("{\"$nor\":[{\"arrayField\":'You can do anything, but not everything.'}]}");
struct GeneratedQuery573 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery573::query = fromjson("{\"$or\":[{\"c\":{\"$regex\":\"/(tang|tangerine|tan)/\"}},{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'s'}}]}");    BSONObj GeneratedQuery573::projection = fromjson("{\"\":{$elemMatch:{c:{\"$regex\":\"/^abc/m\"}}}}");
struct GeneratedQuery574 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery574::query = fromjson("{\"arrayField\":[null,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-90.0]}}]}");    BSONObj GeneratedQuery574::projection = fromjson("{\"b\":{$slice:1}}");
struct GeneratedQuery575 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery575::query = fromjson("{\"a\":{\"$date\": 1500000}}");
struct GeneratedQuery576 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery576::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$polygon\":[[0,-89.9]],\"$uniqueDocs\":1}},\"arrayField.a\":{\"$nin\":['I quit therapy because my analyst was trying to help me behind my back. anything']}}");
struct GeneratedQuery577 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery577::query = fromjson("{a:{\"$regex\":\"c a t #looks for cats\",\"$options\":'ismm'}}");
struct GeneratedQuery578 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery578::query = fromjson("{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}");    BSONObj GeneratedQuery578::projection = fromjson("{\"c\":1}");
struct GeneratedQuery579 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery579::query = fromjson("{\"$or\":[{\"arrayField\":{\"locHaystack\":{ 'lng': 0, 'lat': 90},\"b\":'',\"arrayField\":[{\"arrayField\":['Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything',''],\"_id\":{\"arrayField\":[1,2225073858072009000.99,{\"$date\": -111100000},'You can do anything, but not everything.']}}]}}]}");    BSONObj GeneratedQuery579::projection = fromjson("{\"d\":1}");
struct GeneratedQuery580 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery580::query = fromjson("{\"d\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'mi'}}");    BSONObj GeneratedQuery580::projection = fromjson("{\"a\":1}");
struct GeneratedQuery581 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery581::query = fromjson("{\"\":{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery581::projection = fromjson("{\"c\":1}");
struct GeneratedQuery582 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery582::query = fromjson("{_id:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery582::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery583 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery583::query = fromjson("{a:1}");
struct GeneratedQuery584 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery584::query = fromjson("{\"arrayField\":314159265001}");
struct GeneratedQuery585 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery585::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery586 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery586::query = fromjson("{d:{\"$regex\":\"/(a|bc)x+yz/\"}}");    BSONObj GeneratedQuery586::projection = fromjson("{\"arrayField.$\":1,\"c\":1}");
struct GeneratedQuery587 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery587::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$polygon\":[[-33.3,0],[-25,90.0],[25,90.0]],\"$uniqueDocs\":true}}}");
struct GeneratedQuery588 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery588::query = fromjson("{\"$nor\":[{c:{\"$gte\":true}}]}");
struct GeneratedQuery589 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery589::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery590 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery590::query = fromjson("{d:{\"$not\":{\"$not\":{\"$type\":18}}}}");
struct GeneratedQuery591 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery591::query = fromjson("{\"$and\":[{d:'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}]}");    BSONObj GeneratedQuery591::projection = fromjson("{b:1}");
struct GeneratedQuery592 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery592::query = fromjson("{\"a\":'Usted debe ser el cambio que deseas ver en el mundo.'}");
struct GeneratedQuery593 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery593::query = fromjson("{\"c\":0}");
struct GeneratedQuery594 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery594::query = fromjson("{\"\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything',{\"arrayField\":[]}]}");    BSONObj GeneratedQuery594::projection = fromjson("{\"b\":{$elemMatch:{\"c\":true,\"arrayField\":{\"$exists\":1,\"$mod\":[314159265,314159285]},\"d\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},\"_id\":true}}}");
struct GeneratedQuery595 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery595::query = fromjson("{c:{\"arrayField\":[]}}");
struct GeneratedQuery596 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery596::query = fromjson("{\"_id\":0}");
struct GeneratedQuery597 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery597::query = fromjson("{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery597::projection = fromjson("{\"c\":1}");
struct GeneratedQuery598 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery598::query = fromjson("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery599 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery599::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");    BSONObj GeneratedQuery599::projection = fromjson("{\"\":1}");
struct GeneratedQuery600 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery600::query = fromjson("{\"c\":{\"$mod\":[2147483647,314159245]},\"$where\":'function myFunction() { var x = 1 + 2; }',\"b\":314159265009,\"b\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery600::projection = fromjson("{\"b\":1}");
struct GeneratedQuery601 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery601::query = fromjson("{\"$or\":[{\"d\":[null,'Usted puede hacer cualquier cosa, pero no todo.','You can do anything, but not everything.',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90]}},0.00002225073858072014]},{\"arrayField\":0.00002225073858072014}]}");
struct GeneratedQuery602 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery602::query = fromjson("{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery602::projection = fromjson("{\"b\":1}");
struct GeneratedQuery603 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery603::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$not\":{\"$exists\":false}}},{\"c\":314159265017},{\"arrayField\":{\"$not\":{\"$nin\":[{\"$date\": 1500000},[{\"arrayField\":[{\"locHaystack\":[-180.0,-90.0],\"arrayField\":[{}]},{\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}]}],[''],'','You can do anything, but not everything.']}}},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{\"c\":{\"$date\": 1500000}}]}");
struct GeneratedQuery604 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery604::query = fromjson("{\"a\":{\"$size\":NumberInt(314159275)}}");
struct GeneratedQuery605 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery605::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$date\": 1391633433037}}]}");
struct GeneratedQuery606 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery606::query = fromjson("{\"a\":''}");    BSONObj GeneratedQuery606::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery607 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery607::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery608 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery608::query = fromjson("{\"$nor\":[{\"c\":{\"d\":{\"$date\": -111100000},\"locLegacy\":[33.3,0.0]}},{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [2,2],[3,3],[4,2],[2,2] ]]}}}},{a:true}]}");
struct GeneratedQuery609 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery609::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery610 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery610::query = fromjson("{\"a\":1}");
struct GeneratedQuery611 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery611::query = fromjson("{\"_id\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery612 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery612::query = fromjson("{\"\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");
struct GeneratedQuery613 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery613::query = fromjson("{\"$nor\":[{\"c\":false}]}");
struct GeneratedQuery614 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery614::query = fromjson("{\"$nor\":[{\"arrayField\":0}]}");    BSONObj GeneratedQuery614::projection = fromjson("{\"c\":1}");
struct GeneratedQuery615 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery615::query = fromjson("{b:{\"$gt\":'You can do anything, but not everything.'}}");
struct GeneratedQuery616 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery616::query = fromjson("{\"arrayField.c.c\":{\"$exists\":0,\"$gt\":{\"$date\": -111100000},\"$type\":18,\"$mod\":[314159215,0],\"$mod\":[314159295,314159225]}}");
struct GeneratedQuery617 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery617::query = fromjson("{\"arrayField.d.d\":{\"$all\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180.0,-89.9]}},'You can do anything, but not everything.']}}");    BSONObj GeneratedQuery617::projection = fromjson("{\"a\":{$elemMatch:{\"c\":{\"$mod\":[314159245,314159295]},\"arrayField\":false}},\"a\":1}");
struct GeneratedQuery618 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery618::query = fromjson("{c:314159265016}");
struct GeneratedQuery619 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery619::query = fromjson("{\"loc\":{\"$geoWithin\":{\"$box\":[[0.0,-90],[180,-90.0]]}}}");    BSONObj GeneratedQuery619::projection = fromjson("{\"a\":1}");
struct GeneratedQuery620 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery620::query = fromjson("{\"d\":314159265010}");
struct GeneratedQuery621 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery621::query = fromjson("{a:{\"$all\":[314159265000,0,{\"d\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},{}]}}");
struct GeneratedQuery622 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery622::query = fromjson("{b:314159265003}");
struct GeneratedQuery623 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery623::query = fromjson("{d:{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery623::projection = fromjson("{c:1}");
struct GeneratedQuery624 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery624::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery625 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery625::query = fromjson("{d:'You can do anything, but not everything.'}");
struct GeneratedQuery626 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery626::query = fromjson("{\"\":{\"$date\": 1202331498200}}");
struct GeneratedQuery627 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery627::query = fromjson("{\"arrayField\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-33.3]}}}");    BSONObj GeneratedQuery627::projection = fromjson("{\"b\":{$slice:10}}");
struct GeneratedQuery628 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery628::query = fromjson("{c:314159265014}");    BSONObj GeneratedQuery628::projection = fromjson("{b:1}");
struct GeneratedQuery629 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery629::query = fromjson("{\"d\":{\"$date\": 1500000}}");    BSONObj GeneratedQuery629::projection = fromjson("{\"d\":1,b:1}");
struct GeneratedQuery630 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery630::query = fromjson("{\"arrayField\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery630::projection = fromjson("{\"c\":1,\"d\":1}");
struct GeneratedQuery631 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery631::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery631::projection = fromjson("{\"c\":{$elemMatch:{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");
struct GeneratedQuery632 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery632::query = fromjson("{\"arrayField.b\":{\"$type\":13}}");
struct GeneratedQuery633 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery633::query = fromjson("{\"arrayField\":{\"$type\":14}}");    BSONObj GeneratedQuery633::projection = fromjson("{\"a\":1}");
struct GeneratedQuery634 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery634::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery634::projection = fromjson("{\"b\":1,\"b\":1}");
struct GeneratedQuery635 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery635::query = fromjson("{\"\":{\"$mod\":[2147483647,314159265]}}");
struct GeneratedQuery636 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery636::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery637 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery637::query = fromjson("{\"a\":{\"$not\":{\"$exists\":0}}}");
struct GeneratedQuery638 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery638::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery639 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery639::query = fromjson("{\"arrayField\":{\"$elemMatch\":{a:{\"$regex\":\"/^abc/\"},\"d\":{\"arrayField\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything']},d:false}}}");
struct GeneratedQuery640 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery640::query = fromjson("{\"$nor\":[{\"$where\":'this.d != undefined'}]}");
struct GeneratedQuery641 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery641::query = fromjson("{\"\":{\"$mod\":[314159225,314159245]}}");    BSONObj GeneratedQuery641::projection = fromjson("{\"a\":1}");
struct GeneratedQuery642 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery642::query = fromjson("{b:{\"$mod\":[314159275,2147483647],\"$not\":{\"$mod\":[314159235,314159295]}}}");    BSONObj GeneratedQuery642::projection = fromjson("{c:1}");
struct GeneratedQuery643 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery643::query = fromjson("{\"arrayField.d\":{\"$gt\":true}}");
struct GeneratedQuery644 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery644::query = fromjson("{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'i'},\"b\":{\"$type\":-1},\"arrayField\":['Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.']}");    BSONObj GeneratedQuery644::projection = fromjson("{\"c\":{$slice:1}}");
struct GeneratedQuery645 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery645::query = fromjson("{\"$nor\":[{\"a\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}]}");    BSONObj GeneratedQuery645::projection = fromjson("{\"arrayField.$\":1,b:1}");
struct GeneratedQuery646 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery646::query = fromjson("{\"_id\":{\"$gte\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'}}");
struct GeneratedQuery647 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery647::query = fromjson("{\"$or\":[{\"$where\":'this.d != undefined'},{\"loc\":{\"$geoWithin\":{\"$polygon\":[[180.0,0.0],[180.0,0.0],[33.3,90]],\"$uniqueDocs\":0}}}]}");    BSONObj GeneratedQuery647::projection = fromjson("{c:1}");
struct GeneratedQuery648 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery648::query = fromjson("{\"$nor\":[{\"b\":[{\"_id\":1},{\"locHaystack\":{ 'lng': -180, 'lat': -33.3}}]}]}");
struct GeneratedQuery649 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery649::query = fromjson("{\"$or\":[{\"d\":{\"$lte\":{\"$date\": 1391633433037}}}]}");
struct GeneratedQuery650 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery650::query = fromjson("{\"loc\":{\"$nearSphere\":[0,33.3]}}");    BSONObj GeneratedQuery650::projection = fromjson("{\"\":1}");
struct GeneratedQuery651 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery651::query = fromjson("{\"c\":{\"$exists\":314159265017}}");    BSONObj GeneratedQuery651::projection = fromjson("{\"d\":1}");
struct GeneratedQuery652 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery652::query = fromjson("{\"\":{\"$not\":{\"$gte\":true}}}");    BSONObj GeneratedQuery652::projection = fromjson("{a:1}");
struct GeneratedQuery653 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery653::query = fromjson("{\"$or\":[{\"a\":{\"$date\": -111100000}},{b:0},{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}]}");    BSONObj GeneratedQuery653::projection = fromjson("{\"\":1}");
struct GeneratedQuery654 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery654::query = fromjson("{_id:{\"$regex\":\"/^\\d?\\d(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\d\\d$/\"}}");
struct GeneratedQuery655 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery655::query = fromjson("{\"$nor\":[{\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}");    BSONObj GeneratedQuery655::projection = fromjson("{b:{$slice:2}}");
struct GeneratedQuery656 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery656::query = fromjson("{\"b\":{\"$type\":2}}");
struct GeneratedQuery657 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery657::query = fromjson("{c:314159265019}");    BSONObj GeneratedQuery657::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery658 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery658::query = fromjson("{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'ssmsimm'}}");
struct GeneratedQuery659 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery659::query = fromjson("{c:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery659::projection = fromjson("{\"b\":1}");
struct GeneratedQuery660 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery660::query = fromjson("{\"c\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");    BSONObj GeneratedQuery660::projection = fromjson("{a:1}");
struct GeneratedQuery661 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery661::query = fromjson("{\"c\":{\"$all\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',0]}}");    BSONObj GeneratedQuery661::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery662 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery662::query = fromjson("{\"arrayField.d\":{\"$gt\":{\"$date\": 1202331498200},\"$in\":[{\"arrayField\":[{\"$date\": 1500000}]},{\"$date\": 1500000},true,'',{\"$date\": 1391633433037},{\"arrayField\":[{\"d\":true},'You can do anything, but not everything.'],\"arrayField\":['Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything']},{\"arrayField\":[{\"c\":0}]}]}}");    BSONObj GeneratedQuery662::projection = fromjson("{\"a\":1,\"a\":{$slice:2},a:1}");
struct GeneratedQuery663 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery663::query = fromjson("{\"d\":{\"$exists\":true}}");    BSONObj GeneratedQuery663::projection = fromjson("{\"\":{$slice:2}}");
struct GeneratedQuery664 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery664::query = fromjson("{\"b\":false}");
struct GeneratedQuery665 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery665::query = fromjson("{\"loc\":{\"$nearSphere\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[-25,90]},\"$maxDistance\":3.14159265359}}}");    BSONObj GeneratedQuery665::projection = fromjson("{\"b\":1}");
struct GeneratedQuery666 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery666::query = fromjson("{\"d\":{\"$exists\":0}}");    BSONObj GeneratedQuery666::projection = fromjson("{a:1}");
struct GeneratedQuery667 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery667::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery668 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery668::query = fromjson("{a:'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}");
struct GeneratedQuery669 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery669::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery670 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery670::query = fromjson("{\"arrayField\":{\"$not\":{\"$exists\":false}}}");    BSONObj GeneratedQuery670::projection = fromjson("{\"d\":{$slice:2},\"\":1}");
struct GeneratedQuery671 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery671::query = fromjson("{\"b\":{\"$type\":14}}");
struct GeneratedQuery672 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery672::query = fromjson("{d:1}");
struct GeneratedQuery673 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery673::query = fromjson("{\"d\":{\"$not\":{\"$exists\":1},\"$mod\":[314159245,314159275]}}");    BSONObj GeneratedQuery673::projection = fromjson("{\"d\":1}");
struct GeneratedQuery674 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery674::query = fromjson("{b:{\"$type\":10,\"$not\":{\"$mod\":[314159245,314159285]}}}");    BSONObj GeneratedQuery674::projection = fromjson("{\"a\":1}");
struct GeneratedQuery675 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery675::query = fromjson("{\"arrayField.c\":{\"$elemMatch\":{\"b\":{\"$date\": 1202331498200}},\"$lt\":314159265014}}");
struct GeneratedQuery676 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery676::query = fromjson("{\"arrayField.c\":{\"$exists\":0}}");    BSONObj GeneratedQuery676::projection = fromjson("{d:1}");
struct GeneratedQuery677 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery677::query = fromjson("{\"_id\":{\"$exists\":1}}");    BSONObj GeneratedQuery677::projection = fromjson("{\"b\":1}");
struct GeneratedQuery678 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery678::query = fromjson("{\"arrayField\":[]}");
struct GeneratedQuery679 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery679::query = fromjson("{\"d\":{\"$exists\":0}}");    BSONObj GeneratedQuery679::projection = fromjson("{\"\":1}");
struct GeneratedQuery680 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery680::query = fromjson("{\"$and\":[{\"d\":''},{\"a\":{\"$regex\":\"/abc\\def/\"}}]}");
struct GeneratedQuery681 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery681::query = fromjson("{c:{\"$regex\":\"/^abc(\\d+)/\"}}");
struct GeneratedQuery682 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery682::query = fromjson("{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}");
struct GeneratedQuery683 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery683::query = fromjson("{\"$and\":[{\"\":''}]}");    BSONObj GeneratedQuery683::projection = fromjson("{\"b\":1,\"d\":1}");
struct GeneratedQuery684 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery684::query = fromjson("{\"arrayField\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}");
struct GeneratedQuery685 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery685::query = fromjson("{\"d\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery685::projection = fromjson("{\"a\":{$elemMatch:{c:{\"$regex\":\"/(a)|(b)/\"},\"arrayField\":{\"$all\":[null]},\"d\":{\"$regex\":\"/caseless/i\"}}}}");
struct GeneratedQuery686 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery686::query = fromjson("{\"arrayField\":{\"$date\": 1500000}}");
struct GeneratedQuery687 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery687::query = fromjson("{\"$or\":[{\"b\":{\"$mod\":[314159245,314159285]}},{\"a\":{\"$all\":['I quit therapy because my analyst was trying to help me behind my back. anything'],\"$exists\":1}},{\"\":{\"$regex\":\"/(a|bc)x+yz/\"}},{\"arrayField.d\":{\"$not\":{\"$size\":314159295}}}]}");
struct GeneratedQuery688 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery688::query = fromjson("{\"arrayField\":'Usted puede hacer cualquier cosa, pero no todo.'}");
struct GeneratedQuery689 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery689::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");    BSONObj GeneratedQuery689::projection = fromjson("{\"b\":1}");
struct GeneratedQuery690 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery690::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery691 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery691::query = fromjson("{\"\":'You can do anything, but not everything.'}");    BSONObj GeneratedQuery691::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery692 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery692::query = fromjson("{\"$and\":[{a:{\"$exists\":0}},{\"a\":-3.14159265359},{\"arrayField\":{\"$type\":4}}]}");
struct GeneratedQuery693 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery693::query = fromjson("{\"a\":{\"$date\": 1391633433037}}");
struct GeneratedQuery694 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery694::query = fromjson("{\"b\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery695 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery695::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery696 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery696::query = fromjson("{\"$and\":[{\"c\":-3.14159265859}]}");
struct GeneratedQuery697 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery697::query = fromjson("{\"c\":{\"$exists\":true}}");
struct GeneratedQuery698 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery698::query = fromjson("{\"$nor\":[{c:true}]}");    BSONObj GeneratedQuery698::projection = fromjson("{a:{$slice:100}}");
struct GeneratedQuery699 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery699::query = fromjson("{d:{\"$mod\":[314159275,314159235]}}");
struct GeneratedQuery700 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery700::query = fromjson("{a:{\"$exists\":{\"$date\": -111100000}}}");    BSONObj GeneratedQuery700::projection = fromjson("{\"c\":{$slice:10},\"d\":1}");
struct GeneratedQuery701 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery701::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery702 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery702::query = fromjson("{\"d\":{\"$exists\":1}}");
struct GeneratedQuery703 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery703::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery704 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery704::query = fromjson("{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'ss'}}");
struct GeneratedQuery705 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery705::query = fromjson("{\"c\":null}");
struct GeneratedQuery706 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery706::query = fromjson("{\"$or\":[{\"a\":{\"$date\": 1202331498200}},{\"arrayField.a\":{\"$type\":18}}]}");    BSONObj GeneratedQuery706::projection = fromjson("{\"b\":1}");
struct GeneratedQuery707 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery707::query = fromjson("{\"$or\":[{b:''},{\"d\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},{_id:'Usted debe ser el cambio que deseas ver en el mundo.'}]}");    BSONObj GeneratedQuery707::projection = fromjson("{a:1}");
struct GeneratedQuery708 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery708::query = fromjson("{a:''}");    BSONObj GeneratedQuery708::projection = fromjson("{\"arrayField.$\":1,d:1}");
struct GeneratedQuery709 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery709::query = fromjson("{\"arrayField\":{\"$all\":[{\"locHaystack\":{ 'lng': -25, 'lat': 25}},{\"c\":''},3.14159265359,{\"locHaystack\":{ 'lng': 25, 'lat': -25}},{\"locHaystack\":[-179.9,-25],\"locHaystack\":[0,-90],\"locLegacy\":[25,-89.9]},{\"arrayField\":[{\"arrayField\":['Usted puede hacer cualquier cosa, pero no todo.']}]},314159265003,'You miss 100 percent of the shots you never take. anything']}}");    BSONObj GeneratedQuery709::projection = fromjson("{\"a\":1,c:1}");
struct GeneratedQuery710 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery710::query = fromjson("{\"arrayField\":{\"locLegacy\":[0,-90.0]}}");
struct GeneratedQuery711 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery711::query = fromjson("{\"d\":{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery712 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery712::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery712::projection = fromjson("{d:1}");
struct GeneratedQuery713 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery713::query = fromjson("{b:''}");
struct GeneratedQuery714 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery714::query = fromjson("{\"b\":{\"$elemMatch\":{a:{\"$date\": 1391633433037},c:{\"$all\":[{\"locHaystack\":[0.0,89.9]},{\"a\":'The richest man is not he who has the most, but he who needs the least. anything'}]}}}}");
struct GeneratedQuery715 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery715::query = fromjson("{\"c\":{\"$size\":NumberInt(314159255)}}");
struct GeneratedQuery716 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery716::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$mod\":[314159295,314159265]}},{\"c.b\":'Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything'},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},{\"$where\":'function myFunction() { return this.d != undefined; }'}]}");
struct GeneratedQuery717 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery717::query = fromjson("{b:{\"$elemMatch\":{\"c.a\":true,\"$where\":'this.d != undefined'}}}");    BSONObj GeneratedQuery717::projection = fromjson("{\"b\":{$slice:1}}");
struct GeneratedQuery718 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery718::query = fromjson("{\"arrayField\":{\"_id\":'You can do anything, but not everything.'}}");    BSONObj GeneratedQuery718::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery719 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery719::query = fromjson("{\"arrayField.b\":{\"$not\":{\"$gte\":0},\"$not\":{\"$ne\":314159265014}}}");
struct GeneratedQuery720 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery720::query = fromjson("{\"arrayField\":{\"$not\":{\"$mod\":[314159255,314159265]}}}");
struct GeneratedQuery721 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery721::query = fromjson("{\"\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'i'}}");
struct GeneratedQuery722 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery722::query = fromjson("{\"\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'m'}}");
struct GeneratedQuery723 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery723::query = fromjson("{\"b\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}");    BSONObj GeneratedQuery723::projection = fromjson("{\"b\":1,\"b\":1}");
struct GeneratedQuery724 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery724::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery725 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery725::query = fromjson("{\"arrayField.c\":{\"$elemMatch\":{\"a\":'',\"c\":2225073858072009000.99,\"_id\":{\"$regex\":\"/\\Big(\\w\\w)i/\"},\"d\":{\"$regex\":\"/(a)|(b)/\"}}}}");
struct GeneratedQuery726 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery726::query = fromjson("{\"c\":{\"locHaystack\":{ 'lng': 179.9, 'lat': 0}}}");
struct GeneratedQuery727 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery727::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery728 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery728::query = fromjson("{\"arrayField\":{\"$not\":{\"$all\":[{\"arrayField\":[['',{\"_id\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[25,25]}}}],'You must be the change you wish to see in the world. anything']}]},\"$not\":{\"$type\":4},\"$not\":{\"$nin\":[[],314159265002]},\"$not\":{\"$type\":15},\"$size\":314159255}}");
struct GeneratedQuery729 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery729::query = fromjson("{b:{\"$date\": 1391633433037}}");
struct GeneratedQuery730 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery730::query = fromjson("{\"a\":{\"a\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,0]}}}}");
struct GeneratedQuery731 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery731::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery732 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery732::query = fromjson("{\"d\":314159265003}");
struct GeneratedQuery733 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery733::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return this.d != undefined; }'},{\"c\":{\"$not\":{\"$mod\":[314159265,314159245]}}},{b:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}},{\"d\":{\"$regex\":\"/^abc(\\d+)/\"}}]}");
struct GeneratedQuery734 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery734::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery735 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery735::query = fromjson("{\"arrayField\":{\"d\":'You miss 100 percent of the shots you never take. anything'}}");    BSONObj GeneratedQuery735::projection = fromjson("{\"b\":1}");
struct GeneratedQuery736 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery736::query = fromjson("{\"arrayField\":{\"$mod\":[314159295,314159215],\"$not\":{\"$not\":{\"$mod\":[314159285,314159295]}},\"$gt\":{\"$date\": 1391633433037}}}");
struct GeneratedQuery737 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery737::query = fromjson("{\"$nor\":[{\"a\":{\"$not\":{\"$all\":[{\"locLegacy\":[180.0,90.0]}]}}},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'}]}");
struct GeneratedQuery738 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery738::query = fromjson("{\"$and\":[{\"a\":{\"$type\":14}}]}");
struct GeneratedQuery739 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery739::query = fromjson("{\"arrayField.d\":{\"$size\":NumberLong(314159265358979383)}}");
struct GeneratedQuery740 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery740::query = fromjson("{\"b\":{\"$mod\":[314159215,314159285]}}");
struct GeneratedQuery741 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery741::query = fromjson("{\"loc\":{\"$nearSphere\":[179.9,-25],\"$maxDistance\":314159265017}}");
struct GeneratedQuery742 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery742::query = fromjson("{a:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery742::projection = fromjson("{\"d\":{$elemMatch:{\"d\":{\"$not\":{\"$mod\":[314159245,314159275]}},\"\":314159265009,c:{\"$lt\":2225073858072009000.99}}}}");
struct GeneratedQuery743 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery743::query = fromjson("{\"$or\":[{\"arrayField\":314159265005}]}");
struct GeneratedQuery744 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery744::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery745 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery745::query = fromjson("{\"\":{\"$type\":4}}");    BSONObj GeneratedQuery745::projection = fromjson("{\"d\":1}");
struct GeneratedQuery746 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery746::query = fromjson("{\"d\":{\"$gte\":'You can do anything, but not everything.'}}");    BSONObj GeneratedQuery746::projection = fromjson("{\"c\":1}");
struct GeneratedQuery747 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery747::query = fromjson("{a:{\"$mod\":[314159245,314159275]}}");
struct GeneratedQuery748 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery748::query = fromjson("{\"c\":{\"$not\":{\"$mod\":[314159275,314159275]}}}");
struct GeneratedQuery749 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery749::query = fromjson("{a:{\"$regex\":\"/(tang|tangerine|tan)/\"}}");
struct GeneratedQuery750 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery750::query = fromjson("{\"c\":314159265010}");
struct GeneratedQuery751 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery751::query = fromjson("{\"$nor\":[{d:{\"$in\":[false]}},{\"arrayField.c\":{\"$all\":[{\"_id\":'I quit therapy because my analyst was trying to help me behind my back. anything'}]}}]}");
struct GeneratedQuery752 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery752::query = fromjson("{\"arrayField\":{\"$date\": 1500000}}");
struct GeneratedQuery753 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery753::query = fromjson("{\"d\":314159265016}");
struct GeneratedQuery754 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery754::query = fromjson("{\"a\":{\"$exists\":1}}");
struct GeneratedQuery755 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery755::query = fromjson("{\"$nor\":[{\"arrayField.c\":{\"$size\":NumberInt(314159285)}}]}");    BSONObj GeneratedQuery755::projection = fromjson("{_id:{$slice:10},\"_id\":1}");
struct GeneratedQuery756 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery756::query = fromjson("{\"arrayField\":2225073858072009000.99}");    BSONObj GeneratedQuery756::projection = fromjson("{\"a\":1}");
struct GeneratedQuery757 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery757::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery757::projection = fromjson("{\"a\":1,\"b\":1}");
struct GeneratedQuery758 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery758::query = fromjson("{c:'You can do anything, but not everything.'}");
struct GeneratedQuery759 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery759::query = fromjson("{\"arrayField\":{\"$size\":314159215}}");
struct GeneratedQuery760 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery760::query = fromjson("{\"loc\":{\"$nearSphere\":[-25,0.0]}}");
struct GeneratedQuery761 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery761::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery761::projection = fromjson("{\"a\":1}");
struct GeneratedQuery762 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery762::query = fromjson("{\"$nor\":[{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{\"d\":{\"locHaystack\":[-179.9,-90.0]}}]}");    BSONObj GeneratedQuery762::projection = fromjson("{\"\":1}");
struct GeneratedQuery763 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery763::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery764 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery764::query = fromjson("{\"d\":1}");
struct GeneratedQuery765 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery765::query = fromjson("{\"arrayField\":{\"$mod\":[314159295,314159295]}}");
struct GeneratedQuery766 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery766::query = fromjson("{\"$nor\":[{\"\":{\"$in\":[-3.14159265359]}}]}");
struct GeneratedQuery767 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery767::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");
struct GeneratedQuery768 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery768::query = fromjson("{\"c\":{\"$not\":{\"$exists\":0}}}");
struct GeneratedQuery769 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery769::query = fromjson("{\"$or\":[{\"arrayField\":1},{\"d\":{\"$lte\":true}},{d:314159265000},{\"c\":{\"$regex\":\"/abc\\def/\"}},{\"_id\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}},{\"arrayField\":{\"$date\": 1500000}}]}");
struct GeneratedQuery770 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery770::query = fromjson("{\"_id\":null,\"$where\":'function myFunction() { return this.d != undefined; }',\"$where\":'function myFunction() { return this.d != undefined; }',d:{\"$lt\":314159265011}}");
struct GeneratedQuery771 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery771::query = fromjson("{\"a\":false}");
struct GeneratedQuery772 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery772::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery772::projection = fromjson("{b:{$slice:1}}");
struct GeneratedQuery773 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery773::query = fromjson("{\"b\":{\"$all\":[{\"arrayField\":[{}]}]}}");
struct GeneratedQuery774 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery774::query = fromjson("{\"$nor\":[{d:{\"$regex\":\"/^abc(\\d+)/\"}}]}");    BSONObj GeneratedQuery774::projection = fromjson("{\"b\":1}");
struct GeneratedQuery775 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery775::query = fromjson("{\"a\":0}");
struct GeneratedQuery776 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery776::query = fromjson("{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'m'}}");
struct GeneratedQuery777 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery777::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { var x = 1 + 2; }'}]}");
struct GeneratedQuery778 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery778::query = fromjson("{\"c\":{\"$exists\":true}}");
struct GeneratedQuery779 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery779::query = fromjson("{\"$nor\":[{\"a\":{\"$date\": 1202331498200}},{\"c\":null},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},{\"\":{\"$gte\":314159265010}}]}");
struct GeneratedQuery780 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery780::query = fromjson("{\"d\":{\"$in\":[{\"arrayField\":[null,{\"$date\": -111100000}]}]}}");    BSONObj GeneratedQuery780::projection = fromjson("{\"d\":1}");
struct GeneratedQuery781 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery781::query = fromjson("{\"b\":0}");    BSONObj GeneratedQuery781::projection = fromjson("{\"a\":1,\"d\":1}");
struct GeneratedQuery782 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery782::query = fromjson("{\"$nor\":[{\"arrayField.a\":{\"$size\":NumberLong(314159265358979353)}},{\"arrayField\":true},{\"a\":{\"$not\":{\"$lt\":''}}}]}");    BSONObj GeneratedQuery782::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery783 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery783::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }'}");
struct GeneratedQuery784 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery784::query = fromjson("{\"arrayField.c\":{\"$elemMatch\":{c:{\"$gte\":1}}}}");    BSONObj GeneratedQuery784::projection = fromjson("{\"c\":1}");
struct GeneratedQuery785 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery785::query = fromjson("{c:{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery785::projection = fromjson("{_id:1}");
struct GeneratedQuery786 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery786::query = fromjson("{\"a\":{\"$date\": -111100000}}");
struct GeneratedQuery787 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery787::query = fromjson("{\"b\":0.0}");
struct GeneratedQuery788 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery788::query = fromjson("{_id:'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");
struct GeneratedQuery789 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery789::query = fromjson("{\"$nor\":[{\"arrayField.a\":{\"$elemMatch\":{\"c.b\":'You miss 100 percent of the shots you never take. anything'}}},{a:'You can do anything, but not everything.'}]}");    BSONObj GeneratedQuery789::projection = fromjson("{\"a\":{$elemMatch:{\"arrayField\":{\"$date\": 1391633433037}}},d:1,\"d\":1}");
struct GeneratedQuery790 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery790::query = fromjson("{\"d\":{\"$size\":NumberLong(9223372036854775807)}}");    BSONObj GeneratedQuery790::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery791 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery791::query = fromjson("{\"c\":'To the man who only has a hammer, everything he encounters begins to look like a nail. anything'}");
struct GeneratedQuery792 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery792::query = fromjson("{a:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}");    BSONObj GeneratedQuery792::projection = fromjson("{b:1,\"a\":1}");
struct GeneratedQuery793 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery793::query = fromjson("{\"d\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything'}");
struct GeneratedQuery794 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery794::query = fromjson("{\"arrayField._id\":{\"$size\":NumberLong(314159265358979393)}}");
struct GeneratedQuery795 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery795::query = fromjson("{c:{\"$date\": -111100000}}");    BSONObj GeneratedQuery795::projection = fromjson("{c:1}");
struct GeneratedQuery796 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery796::query = fromjson("{\"arrayField\":'You can do anything, but not everything.'}");
struct GeneratedQuery797 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery797::query = fromjson("{\"arrayField.c\":{\"$lt\":''}}");
struct GeneratedQuery798 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery798::query = fromjson("{\"$and\":[{b:[314159265007]},{\"\":{\"$not\":{\"$mod\":[314159235,314159205]}}},{\"arrayField\":{\"$elemMatch\":{a:{\"$size\":314159255}}}},{\"_id\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'i'}},{\"$where\":'function myFunction() { return String(this.a || this.b || this.c || this.d).length > 9; }'},{\"$where\":'this.d != undefined'},{d:{\"$mod\":[314159265,314159245]}},{\"arrayField.b\":{\"$elemMatch\":{c:{\"$date\": -111100000}}}}]}");    BSONObj GeneratedQuery798::projection = fromjson("{d:1}");
struct GeneratedQuery799 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery799::query = fromjson("{\"c\":{\"$regex\":\"/(tang|tangerine|tan)/\"}}");
struct GeneratedQuery800 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery800::query = fromjson("{\"d\":0.00000000049406564841}");
struct GeneratedQuery801 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery801::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery801::projection = fromjson("{\"b\":1}");
struct GeneratedQuery802 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery802::query = fromjson("{\"b\":null,a:{\"$not\":{\"$not\":{\"$size\":NumberInt(0)}}}}");
struct GeneratedQuery803 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery803::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");    BSONObj GeneratedQuery803::projection = fromjson("{b:1}");
struct GeneratedQuery804 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery804::query = fromjson("{\"b\":314159265003}");
struct GeneratedQuery805 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery805::query = fromjson("{\"$or\":[{\"arrayField\":{\"$mod\":[314159275,314159225]}},{\"arrayField\":{\"$all\":[{\"arrayField\":[{\"$date\": -111100000}]}]}},{\"c.b\":{\"$not\":{\"$not\":{\"$mod\":[314159245,314159215]}}}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}]}");
struct GeneratedQuery806 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery806::query = fromjson("{\"_id.d\":{\"$mod\":[314159285,314159295]}}");
struct GeneratedQuery807 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery807::query = fromjson("{\"c\":{\"$type\":1}}");    BSONObj GeneratedQuery807::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery808 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery808::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery809 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery809::query = fromjson("{\"a\":{\"$mod\":[314159215,314159235]}}");    BSONObj GeneratedQuery809::projection = fromjson("{\"c\":1,\"d\":{$elemMatch:{\"b\":{\"$regex\":\"/abc\\def/\"}}}}");
struct GeneratedQuery810 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery810::query = fromjson("{\"d.b.c\":1}");    BSONObj GeneratedQuery810::projection = fromjson("{\"b\":1}");
struct GeneratedQuery811 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery811::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery812 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery812::query = fromjson("{\"\":{\"$date\": 1391633433037},\"_id\":{\"$regex\":\"/cat/\"},\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }',a:314159265001}");
struct GeneratedQuery813 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery813::query = fromjson("{\"$nor\":[{\"\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,-89.9]}}]]},{a:{\"$regex\":\"(a|bc)x+yz\",\"$options\":'ismms'}},{\"$where\":'function myFunction() { var x = 1 + 2; }'},{\"arrayField\":{\"$all\":[{\"arrayField\":[]},{\"arrayField\":[314159265016,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-33.3]}},{\"arrayField\":[{\"locLegacy\":[180,-33.3],\"loc\":{\"type\":\"Point\",\"coordinates\":[0.0,-89.9]}}]},0]},{\"c\":'Usted puede hacer cualquier cosa, pero no todo.'}]}},{b:{\"$exists\":1}}]}");    BSONObj GeneratedQuery813::projection = fromjson("{c:1,a:1}");
struct GeneratedQuery814 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery814::query = fromjson("{\"b\":{\"$exists\":0}}");    BSONObj GeneratedQuery814::projection = fromjson("{\"\":1}");
struct GeneratedQuery815 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery815::query = fromjson("{\"c\":{\"$type\":18,\"$type\":127,\"$not\":{\"$not\":{\"$exists\":0}},\"$exists\":1},b:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery816 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery816::query = fromjson("{\"arrayField\":314159265012}");
struct GeneratedQuery817 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery817::query = fromjson("{a:{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'s'}}");
struct GeneratedQuery818 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery818::query = fromjson("{\"d\":{\"$date\": -111100000}}");    BSONObj GeneratedQuery818::projection = fromjson("{a:1}");
struct GeneratedQuery819 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery819::query = fromjson("{\"c\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}");
struct GeneratedQuery820 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery820::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery821 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery821::query = fromjson("{\"d\":0.0}");
struct GeneratedQuery822 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery822::query = fromjson("{\"arrayField\":['',0.00002225073858072014,1]}");
struct GeneratedQuery823 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery823::query = fromjson("{d:{\"$regex\":\"/abc\\def/\"}}");
struct GeneratedQuery824 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery824::query = fromjson("{\"c\":{\"$in\":[-3.14159265359]}}");    BSONObj GeneratedQuery824::projection = fromjson("{\"\":1}");
struct GeneratedQuery825 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery825::query = fromjson("{\"arrayField.c._id\":{\"$type\":17,\"$not\":{\"$exists\":true},\"$size\":NumberInt(0)}}");
struct GeneratedQuery826 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery826::query = fromjson("{\"arrayField.b\":{\"$mod\":[2147483647,314159255]}}");
struct GeneratedQuery827 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery827::query = fromjson("{\"$nor\":[{\"b\":{\"$not\":{\"$not\":{\"$type\":2}}}}]}");
struct GeneratedQuery828 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery828::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery829 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery829::query = fromjson("{\"arrayField\":{\"$date\": 1202331498200}}");    BSONObj GeneratedQuery829::projection = fromjson("{b:1}");
struct GeneratedQuery830 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery830::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");
struct GeneratedQuery831 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery831::query = fromjson("{\"c\":{\"$date\": -111100000}}");
struct GeneratedQuery832 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery832::query = fromjson("{\"_id\":'Usted puede hacer cualquier cosa, pero no todo.'}");
struct GeneratedQuery833 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery833::query = fromjson("{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery834 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery834::query = fromjson("{\"$or\":[{\"arrayField\":0},{\"loc\":{\"$near\":[180,-33.3]}}]}");    BSONObj GeneratedQuery834::projection = fromjson("{\"d\":1,\"b\":{$slice:100},\"a\":1}");
struct GeneratedQuery835 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery835::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery835::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery836 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery836::query = fromjson("{\"_id\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery837 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery837::query = fromjson("{a:null}");    BSONObj GeneratedQuery837::projection = fromjson("{\"d\":1}");
struct GeneratedQuery838 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery838::query = fromjson("{\"a\":{\"$not\":{\"$mod\":[314159295,314159235]}}}");
struct GeneratedQuery839 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery839::query = fromjson("{\"arrayField\":{\"$gte\":314159265014,\"$mod\":[314159275,2147483647],\"$elemMatch\":{\"$where\":'(this.a || this.b || this.c || this.d) > 10'},\"$type\":17,\"$size\":NumberInt(314159205)}}");
struct GeneratedQuery840 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery840::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery840::projection = fromjson("{a:1,c:1}");
struct GeneratedQuery841 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery841::query = fromjson("{\"$and\":[{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}]}");
struct GeneratedQuery842 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery842::query = fromjson("{\"d\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery843 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery843::query = fromjson("{\"arrayField.d\":{\"$all\":[{\"$date\": 1391633433037},1]}}");    BSONObj GeneratedQuery843::projection = fromjson("{\"arrayField.$\":1,b:1,\"a\":1}");
struct GeneratedQuery844 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery844::query = fromjson("{c:{\"$date\": 1500000}}");
struct GeneratedQuery845 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery845::query = fromjson("{b:{\"$not\":{\"$elemMatch\":{a:[{\"a\":{\"_id\":''}},null],\"b\":{\"$regex\":\"/caseless/i\"}}}}}");    BSONObj GeneratedQuery845::projection = fromjson("{\"d\":1}");
struct GeneratedQuery846 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery846::query = fromjson("{\"$or\":[{\"d\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}},{\"arrayField.b\":{\"$all\":[{}]}},{\"arrayField\":{\"$size\":NumberLong(314159265358979323),\"$not\":{\"$not\":{\"$in\":[false,{\"_id\":'Usted debe ser el cambio que deseas ver en el mundo.',\"b\":{\"loc\":{\"type\":\"Point\",\"coordinates\":[180,-33.3]},\"locHaystack\":[33.3,-25]}},2225073858072009000.99,{\"loc\":{\"type\":\"Point\",\"coordinates\":[-179.9,-90.0]}}]}}}}]}");    BSONObj GeneratedQuery846::projection = fromjson("{d:1,\"c\":1}");
struct GeneratedQuery847 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery847::query = fromjson("{\"\":{\"$elemMatch\":{\"_id\":false,\"loc\":{\"$near\":[0,89.9],\"$maxDistance\":314159265015}}}}");
struct GeneratedQuery848 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery848::query = fromjson("{a:314159265008}");
struct GeneratedQuery849 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery849::query = fromjson("{\"arrayField.a\":{\"$elemMatch\":{\"arrayField\":314159265018,\"arrayField.d\":{\"$size\":NumberLong(314159265358979323)}}}}");
struct GeneratedQuery850 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery850::query = fromjson("{\"_id\":{\"$type\":11}}");    BSONObj GeneratedQuery850::projection = fromjson("{a:1}");
struct GeneratedQuery851 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery851::query = fromjson("{\"$or\":[{\"loc\":{\"$geoWithin\":{\"$geometry\":{\"type\":\"Point\",\"coordinates\":[180.0,90]}}}}]}");    BSONObj GeneratedQuery851::projection = fromjson("{\"c\":1}");
struct GeneratedQuery852 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery852::query = fromjson("{\"arrayField\":{\"$all\":[null,{\"$date\": 1500000},true]}}");
struct GeneratedQuery853 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery853::query = fromjson("{\"c\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas',\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");    BSONObj GeneratedQuery853::projection = fromjson("{\"arrayField.$\":1,b:1}");
struct GeneratedQuery854 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery854::query = fromjson("{\"$or\":[{\"d\":{\"$mod\":[314159205,314159235]}}]}");    BSONObj GeneratedQuery854::projection = fromjson("{\"b\":{$slice:2}}");
struct GeneratedQuery855 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery855::query = fromjson("{\"b\":{\"$all\":[{\"arrayField\":[]},'You can do anything, but not everything.']}}");
struct GeneratedQuery856 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery856::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$gt\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}}]}");
struct GeneratedQuery857 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery857::query = fromjson("{c:true}");
struct GeneratedQuery858 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery858::query = fromjson("{a:{\"$type\":11}}");
struct GeneratedQuery859 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery859::query = fromjson("{\"\":1}");
struct GeneratedQuery860 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery860::query = fromjson("{\"d\":0.00000000049406564841}");    BSONObj GeneratedQuery860::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery861 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery861::query = fromjson("{\"$nor\":[{\"c\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":''}}]}");    BSONObj GeneratedQuery861::projection = fromjson("{\"c\":1}");
struct GeneratedQuery862 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery862::query = fromjson("{\"a\":{\"$date\": 1500000}}");
struct GeneratedQuery863 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery863::query = fromjson("{\"\":{\"$not\":{\"$not\":{\"$size\":NumberInt(-2147483648)}},\"$nin\":['To the man who only has a hammer, everything he encounters begins to look like a nail. anything','Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away. anything',false],\"$not\":{\"$nin\":[314159265017,{\"$date\": 1391633433037}]},\"$mod\":[314159265,314159225],\"$nin\":[null],\"$in\":[null,'Usted puede hacer cualquier cosa, pero no todo.','You can do anything, but not everything.'],\"$exists\":{\"$date\": -111100000}}}");
struct GeneratedQuery864 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery864::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");
struct GeneratedQuery865 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery865::query = fromjson("{\"arrayField.c\":{\"$not\":{\"$size\":NumberLong(314159265358979383)}}}");
struct GeneratedQuery866 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery866::query = fromjson("{\"_id\":''}");    BSONObj GeneratedQuery866::projection = fromjson("{\"arrayField.$\":1,a:1}");
struct GeneratedQuery867 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery867::query = fromjson("{_id:false}");    BSONObj GeneratedQuery867::projection = fromjson("{\"c\":{$slice:1}}");
struct GeneratedQuery868 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery868::query = fromjson("{d:{\"$regex\":\"/cat/\"}}");    BSONObj GeneratedQuery868::projection = fromjson("{\"c\":{$slice:1}}");
struct GeneratedQuery869 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery869::query = fromjson("{\"arrayField.b.c\":{\"$all\":[{\"locHaystack\":[-33.3,0.0]},{\"arrayField\":[{\"locHaystack\":[0,25]},'']},{\"arrayField\":[{\"locHaystack\":[-179.9,33.3]},'You must be the change you wish to see in the world. anything']},{\"c\":{\"arrayField\":[{\"b\":{\"locLegacy\":[-25,90.0]},\"a\":{\"b\":'Courage is not the absence of fear, but rather the judgement that something else is more important than fear. anything',\"loc\":{\"type\":\"Point\",\"coordinates\":[0,-25]}}}]}},{\"b\":false}]}}");
struct GeneratedQuery870 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery870::query = fromjson("{\"b\":{\"$regex\":\"c a t #looks for cats\",\"$options\":'misi'}}");
struct GeneratedQuery871 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery871::query = fromjson("{\"arrayField.a\":{\"$all\":[{\"$date\": 1500000}]}}");    BSONObj GeneratedQuery871::projection = fromjson("{\"\":1,b:{$elemMatch:{\"c\":314159265005,\"arrayField\":''}}}");
struct GeneratedQuery872 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery872::query = fromjson("{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'im'}}");    BSONObj GeneratedQuery872::projection = fromjson("{b:1}");
struct GeneratedQuery873 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery873::query = fromjson("{c:{\"$not\":{\"$size\":NumberLong(314159265358979363)}}}");
struct GeneratedQuery874 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery874::query = fromjson("{\"a\":{\"$date\": -111100000}}");
struct GeneratedQuery875 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery875::query = fromjson("{a:{\"$type\":2}}");
struct GeneratedQuery876 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery876::query = fromjson("{a:{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery877 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery877::query = fromjson("{\"b\":{\"$mod\":[314159205,314159205]}}");
struct GeneratedQuery878 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery878::query = fromjson("{\"_id\":true}");    BSONObj GeneratedQuery878::projection = fromjson("{c:{$slice:0}}");
struct GeneratedQuery879 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery879::query = fromjson("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");    BSONObj GeneratedQuery879::projection = fromjson("{\"\":{$elemMatch:{\"arrayField\":{\"$date\": 1500000}}}}");
struct GeneratedQuery880 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery880::query = fromjson("{\"_id\":{\"$mod\":[314159205,314159235]}}");
struct GeneratedQuery881 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery881::query = fromjson("{\"b\":314159265018}");
struct GeneratedQuery882 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery882::query = fromjson("{\"d\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery883 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery883::query = fromjson("{b:'You can do anything, but not everything.'}");    BSONObj GeneratedQuery883::projection = fromjson("{\"c.b.c\":1,\"d\":1}");
struct GeneratedQuery884 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery884::query = fromjson("{_id:{\"$lt\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}}");
struct GeneratedQuery885 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery885::query = fromjson("{\"b\":{\"$size\":NumberLong(-314159265358979323)}}");    BSONObj GeneratedQuery885::projection = fromjson("{\"c\":1}");
struct GeneratedQuery886 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery886::query = fromjson("{\"$or\":[{\"d\":{\"$not\":{\"$not\":{\"$mod\":[314159225,314159205]}}}}]}");
struct GeneratedQuery887 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery887::query = fromjson("{\"$and\":[{\"d\":314159265013},{\"d\":{\"$type\":16}}]}");
struct GeneratedQuery888 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery888::query = fromjson("{\"c\":''}");    BSONObj GeneratedQuery888::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery889 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery889::query = fromjson("{\"b\":{\"$in\":[{\"arrayField\":[314159265001]},null]}}");
struct GeneratedQuery890 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery890::query = fromjson("{\"arrayField.a\":{\"$all\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,89.9]}}]}}");
struct GeneratedQuery891 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery891::query = fromjson("{\"arrayField.d\":{\"$size\":NumberLong(314159265358979373)}}");    BSONObj GeneratedQuery891::projection = fromjson("{\"a\":1}");
struct GeneratedQuery892 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery892::query = fromjson("{\"arrayField\":''}");    BSONObj GeneratedQuery892::projection = fromjson("{d:{$slice:1}}");
struct GeneratedQuery893 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery893::query = fromjson("{\"arrayField\":{\"$size\":314159235}}");    BSONObj GeneratedQuery893::projection = fromjson("{\"_id\":1,c:1}");
struct GeneratedQuery894 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery894::query = fromjson("{\"arrayField\":{\"$date\": 1391633433037}}");
struct GeneratedQuery895 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery895::query = fromjson("{\"\":314159265001}");
struct GeneratedQuery896 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery896::query = fromjson("{\"$where\":'function myFunction() { return this.d != undefined; }'}");
struct GeneratedQuery897 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery897::query = fromjson("{\"\":'Usted debe ser el cambio que deseas ver en el mundo.'}");
struct GeneratedQuery898 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery898::query = fromjson("{\"$or\":[{\"arrayField\":false},{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'},{d:'You can do anything, but not everything.'},{\"arrayField\":'Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas'},{\"a\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'im'}},{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'},{_id:{\"$mod\":[314159285,314159295]}}]}");    BSONObj GeneratedQuery898::projection = fromjson("{\"b.d\":{$elemMatch:{a:{\"$date\": 1391633433037},\"_id\":null}}}");
struct GeneratedQuery899 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery899::query = fromjson("{\"arrayField\":'You can do anything, but not everything.'}");
struct GeneratedQuery900 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery900::query = fromjson("{\"$or\":[{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}]}");
struct GeneratedQuery901 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery901::query = fromjson("{\"$or\":[{\"arrayField\":{\"$size\":NumberLong(314159265358979393)}},{\"arrayField\":{\"$date\": 1500000}},{\"arrayField.b\":{\"$exists\":0}},{b:1}]}");    BSONObj GeneratedQuery901::projection = fromjson("{\"c\":1}");
struct GeneratedQuery902 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery902::query = fromjson("{\"a\":{\"$regex\":\"/caseless/i\"}}");    BSONObj GeneratedQuery902::projection = fromjson("{\"d\":1}");
struct GeneratedQuery903 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery903::query = fromjson("{\"\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'ms'}}");    BSONObj GeneratedQuery903::projection = fromjson("{\"d\":1}");
struct GeneratedQuery904 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery904::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery905 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery905::query = fromjson("{\"\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":'msmm'}}");    BSONObj GeneratedQuery905::projection = fromjson("{\"a\":1}");
struct GeneratedQuery906 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery906::query = fromjson("{\"_id\":{\"arrayField\":[{}],\"locLegacy\":[0,-25],\"arrayField\":['']}}");
struct GeneratedQuery907 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery907::query = fromjson("{\"arrayField\":{\"$all\":['You must be the change you wish to see in the world. anything',{\"arrayField\":['Todo el mundo es un genio al menos una vez al ano. Los verdaderos genios simplemente tienen sus ideas brillantes mas juntas']},{\"arrayField\":[],\"b\":'Usted debe ser el cambio que deseas ver en el mundo.'}]}}");    BSONObj GeneratedQuery907::projection = fromjson("{\"a\":1}");
struct GeneratedQuery908 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery908::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$size\":NumberLong(314159265358979393)}}]}");    BSONObj GeneratedQuery908::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery909 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery909::query = fromjson("{\"\":{\"$date\": 1391633433037}}");
struct GeneratedQuery910 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery910::query = fromjson("{\"$or\":[{\"a\":{\"$elemMatch\":{\"d\":1797693134862315799999,\"d\":''},\"$mod\":[314159235,314159245],\"$elemMatch\":{\"c\":{\"$not\":{\"$exists\":-3.14159265000}},\"c\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything',\"d\":{\"$regex\":\"/\\d?[A-E]\\*/\"}}}}]}");    BSONObj GeneratedQuery910::projection = fromjson("{b:1}");
struct GeneratedQuery911 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery911::query = fromjson("{\"$or\":[{\"arrayField\":0}]}");
struct GeneratedQuery912 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery912::query = fromjson("{\"$or\":[{\"a\":false},{\"arrayField\":314159265000}]}");
struct GeneratedQuery913 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery913::query = fromjson("{\"arrayField\":{\"$date\": 1500000}}");
struct GeneratedQuery914 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery914::query = fromjson("{\"a\":{\"$exists\":false}}");
struct GeneratedQuery915 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery915::query = fromjson("{\"$where\":'(this.a || this.b || this.c || this.d) > 10'}");
struct GeneratedQuery916 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery916::query = fromjson("{b:1}");    BSONObj GeneratedQuery916::projection = fromjson("{\"\":1,\"c\":{$elemMatch:{\"arrayField\":{\"$size\":NumberLong(314159265358979363)},\"c\":true,\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }',\"$where\":'String(this.a || this.b || this.c || this.d).length > 9',d:[{\"arrayField\":['',{\"c\":null}]},'You can do anything, but not everything.'],\"b\":314159265010,\"loc\":{\"$near\":[33.3,25]}}},\"\":1}");
struct GeneratedQuery917 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery917::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");
struct GeneratedQuery918 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery918::query = fromjson("{\"c\":314159265011}");    BSONObj GeneratedQuery918::projection = fromjson("{\"d\":1}");
struct GeneratedQuery919 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery919::query = fromjson("{\"arrayField.d\":{\"$not\":{\"$not\":{\"$mod\":[314159255,314159275]}},\"$exists\":1,\"$type\":11,\"$size\":NumberLong(-314159265358979323)}}");    BSONObj GeneratedQuery919::projection = fromjson("{_id:1}");
struct GeneratedQuery920 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery920::query = fromjson("{\"arrayField\":{\"$elemMatch\":{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;',b:{\"$not\":{\"$not\":{\"$mod\":[2147483647,0]}},\"$elemMatch\":{\"\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''},_id:0,\"b\":'You can do anything, but not everything.',\"arrayField\":{\"$type\":2,\"$type\":18,\"$mod\":[314159275,0],\"$exists\":1},\"d\":{\"$regex\":\"/(a|bc)x+yz/\"},\"c\":{\"$not\":{\"$gt\":0}}},\"$lt\":'You can do anything, but not everything.'}}}}");    BSONObj GeneratedQuery920::projection = fromjson("{\"\":1,\"b\":1,\"c\":1}");
struct GeneratedQuery921 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery921::query = fromjson("{\"$or\":[{\"arrayField\":314159265007}]}");    BSONObj GeneratedQuery921::projection = fromjson("{\"b\":1}");
struct GeneratedQuery922 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery922::query = fromjson("{\"\":false}");
struct GeneratedQuery923 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery923::query = fromjson("{\"arrayField\":{\"$size\":NumberLong(314159265358979383)}}");
struct GeneratedQuery924 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery924::query = fromjson("{\"arrayField.a.a\":{\"$elemMatch\":{c:1,\"$where\":'String(this.a || this.b || this.c || this.d).length > 9',\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}}}");
struct GeneratedQuery925 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery925::query = fromjson("{\"_id\":{\"$regex\":\"/cat/\"}}");
struct GeneratedQuery926 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery926::query = fromjson("{\"$nor\":[{\"arrayField.d._id\":{\"$exists\":0}},{\"b\":[{\"$date\": 1391633433037},{\"locHaystack\":[-179.9,0],\"arrayField\":[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,89.9]},\"arrayField\":[null,false,{\"$date\": 1391633433037},{\"$date\": 1202331498200}]}]}]}]}");
struct GeneratedQuery927 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery927::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery927::projection = fromjson("{\"c\":1}");
struct GeneratedQuery928 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery928::query = fromjson("{\"arrayField\":0}");    BSONObj GeneratedQuery928::projection = fromjson("{\"arrayField.$\":1}");
struct GeneratedQuery929 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery929::query = fromjson("{\"arrayField\":{\"$size\":NumberInt(314159265)}}");
struct GeneratedQuery930 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery930::query = fromjson("{\"arrayField.a\":{\"$size\":NumberLong(-9223372036854775808)}}");
struct GeneratedQuery931 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery931::query = fromjson("{\"c\":{\"$elemMatch\":{\"b\":{\"$regex\":\"/cat/\"}}}}");    BSONObj GeneratedQuery931::projection = fromjson("{\"a\":1}");
struct GeneratedQuery932 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery932::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}");    BSONObj GeneratedQuery932::projection = fromjson("{\"a\":1}");
struct GeneratedQuery933 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery933::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery934 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery934::query = fromjson("{\"a\":{\"$regex\":\"c a t #looks for cats\",\"$options\":''}}");
struct GeneratedQuery935 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery935::query = fromjson("{\"arrayField\":true}");    BSONObj GeneratedQuery935::projection = fromjson("{\"\":1}");
struct GeneratedQuery936 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery936::query = fromjson("{\"$and\":[{\"arrayField\":1},{\"d\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.'}]}");
struct GeneratedQuery937 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery937::query = fromjson("{b:{\"$mod\":[314159215,314159275]}}");
struct GeneratedQuery938 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery938::query = fromjson("{\"$or\":[{\"c\":{\"$elemMatch\":{\"arrayField\":'You can do anything, but not everything.',c:{\"$regex\":\"(a|bc)x+yz\",\"$options\":''},\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}}},{\"d\":314159265003}]}");
struct GeneratedQuery939 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery939::query = fromjson("{\"$nor\":[{_id:0.0},{\"_id\":0}]}");    BSONObj GeneratedQuery939::projection = fromjson("{_id:1}");
struct GeneratedQuery940 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery940::query = fromjson("{\"$or\":[{\"d\":[{},'I quit therapy because my analyst was trying to help me behind my back. anything',314159265012]},{\"b\":false}]}");
struct GeneratedQuery941 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery941::query = fromjson("{\"_id\":{\"$regex\":\"(tang|tangerine|tan)\",\"$options\":'smimssmim'}}");    BSONObj GeneratedQuery941::projection = fromjson("{\"d\":1}");
struct GeneratedQuery942 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery942::query = fromjson("{\"\":314159265001}");
struct GeneratedQuery943 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery943::query = fromjson("{\"arrayField\":[{\"c\":null},0]}");
struct GeneratedQuery944 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery944::query = fromjson("{\"$or\":[{\"b\":{\"$regex\":\"/abc\\def/\"}}]}");
struct GeneratedQuery945 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery945::query = fromjson("{\"loc\":{\"$geoIntersects\":{\"$geometry\":{\"type\":\"LineString\",\"coordinates\":[[180,90],[179.9,33.3]]}}}}");
struct GeneratedQuery946 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery946::query = fromjson("{\"b\":{\"$exists\":0}}");
struct GeneratedQuery947 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery947::query = fromjson("{\"arrayField.d\":{\"$size\":NumberLong(314159265358979383)}}");
struct GeneratedQuery948 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery948::query = fromjson("{\"arrayField\":-3.14159265359}");
struct GeneratedQuery949 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery949::query = fromjson("{\"arrayField\":false}");    BSONObj GeneratedQuery949::projection = fromjson("{\"a\":{$elemMatch:{\"c\":{\"b\":'Echa de menos el 100 por ciento de los tiros que nunca toma.'},\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}}}");
struct GeneratedQuery950 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery950::query = fromjson("{\"b\":null}");
struct GeneratedQuery951 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery951::query = fromjson("{\"arrayField\":false}");    BSONObj GeneratedQuery951::projection = fromjson("{\"d\":1}");
struct GeneratedQuery952 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery952::query = fromjson("{\"a\":{\"$mod\":[314159235,314159215]}}");    BSONObj GeneratedQuery952::projection = fromjson("{\"a\":1,_id:1}");
struct GeneratedQuery953 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery953::query = fromjson("{\"b\":null}");
struct GeneratedQuery954 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery954::query = fromjson("{d:{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}");
struct GeneratedQuery955 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery955::query = fromjson("{\"arrayField\":314159265018}");
struct GeneratedQuery956 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery956::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery957 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery957::query = fromjson("{\"arrayField\":{\"arrayField\":[0]}}");
struct GeneratedQuery958 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery958::query = fromjson("{\"$or\":[{\"b\":{\"$regex\":\"/abc\\def/\"}},{d:{\"$not\":{\"$not\":{\"$mod\":[314159235,314159265]}}}}]}");
struct GeneratedQuery959 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery959::query = fromjson("{\"arrayField\":'Everyone is a genius at least once a year. The real geniuses simply have their bright ideas closer together. anything'}");
struct GeneratedQuery960 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery960::query = fromjson("{\"b\":314159265008}");
struct GeneratedQuery961 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery961::query = fromjson("{a:{\"$regex\":\"c a t #looks for cats\",\"$options\":'s'}}");    BSONObj GeneratedQuery961::projection = fromjson("{c:1}");
struct GeneratedQuery962 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery962::query = fromjson("{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}");    BSONObj GeneratedQuery962::projection = fromjson("{\"a\":1}");
struct GeneratedQuery963 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery963::query = fromjson("{\"c\":{\"$regex\":\"/(a)|(b)/\"}}");
struct GeneratedQuery964 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery964::query = fromjson("{\"a\":{\"$regex\":\"/caseless/i\"}}");
struct GeneratedQuery965 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery965::query = fromjson("{a:{\"$mod\":[314159205,314159235]}}");
struct GeneratedQuery966 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery966::query = fromjson("{a:{\"$regex\":\"/(tang|tangerine|tan)/\"}}");    BSONObj GeneratedQuery966::projection = fromjson("{c:1}");
struct GeneratedQuery967 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery967::query = fromjson("{\"arrayField\":'I quit therapy because my analyst was trying to help me behind my back. anything'}");
struct GeneratedQuery968 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery968::query = fromjson("{\"arrayField\":false}");
struct GeneratedQuery969 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery969::query = fromjson("{\"$where\":'this.d != undefined'}");
struct GeneratedQuery970 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery970::query = fromjson("{\"b\":314159265015}");    BSONObj GeneratedQuery970::projection = fromjson("{\"d\":1}");
struct GeneratedQuery971 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery971::query = fromjson("{\"arrayField\":0}");
struct GeneratedQuery972 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery972::query = fromjson("{a:{\"$nin\":[[{\"loc\":{\"type\":\"Point\",\"coordinates\":[33.3,25]}},'']]}}");    BSONObj GeneratedQuery972::projection = fromjson("{\"_id\":1}");
struct GeneratedQuery973 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery973::query = fromjson("{\"$nor\":[{\"$where\":'function myFunction() { return (String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99); }'}]}");    BSONObj GeneratedQuery973::projection = fromjson("{\"c\":1}");
struct GeneratedQuery974 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery974::query = fromjson("{_id:{\"$exists\":{\"$date\": 1202331498200},\"$elemMatch\":{\"arrayField.d\":{\"$gt\":true},\"a\":null,\"loc\":{\"$geoWithin\":{\"$polygon\":[[0.0,0.0],[180.0,-90],[180,90.0]],\"$uniqueDocs\":true}},\"$where\":'function myFunction() { return this.d != undefined; }',\"c\":{\"locLegacy\":[0,-89.9]}},\"$not\":{\"$size\":NumberLong(314159265358979343)}}}");
struct GeneratedQuery975 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery975::query = fromjson("{c:{\"$regex\":\"/^abc/m\"}}");
struct GeneratedQuery976 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery976::query = fromjson("{\"arrayField.c\":{\"$ne\":false}}");
struct GeneratedQuery977 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery977::query = fromjson("{\"b\":1}");
struct GeneratedQuery978 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery978::query = fromjson("{\"$nor\":[{\"arrayField\":{\"$elemMatch\":{\"c\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":'s'}}}},{\"arrayField.b\":{\"$elemMatch\":{\"arrayField\":{\"$date\": 1500000}}}},{\"_id\":'You must be the change you wish to see in the world. anything'},{\"a\":{\"$in\":[{\"arrayField\":[314159265007,{\"a\":[{\"$date\": -111100000}],\"b\":'You can do anything, but not everything.'},[{\"$date\": 1500000},314159265014],[{\"arrayField\":['Usted debe ser el cambio que deseas ver en el mundo.',{\"c\":[true,{\"b\":{\"arrayField\":[{\"arrayField\":[{\"d\":'You can do anything, but not everything.'},'You miss 100 percent of the shots you never take. anything',{\"c\":'You can do anything, but not everything.'}]}],\"arrayField\":[{\"locHaystack\":{ 'lng': 180.0, 'lat': -90.0}},'You can do anything, but not everything.']},\"arrayField\":[{\"a\":-314159265359}]},null]}]}]],\"d\":''},{\"arrayField\":[{\"arrayField\":[{\"d\":false},{\"$date\": -111100000},'',[-3.14159265359]]}]}]}},{\"c\":{\"$regex\":\"(s|t|y|n)\\..\",\"$options\":''}}]}");
struct GeneratedQuery979 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery979::query = fromjson("{_id:{\"$gt\":{\"$date\": 1202331498200}}}");
struct GeneratedQuery980 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery980::query = fromjson("{\"$where\":'String(this.a || this.b || this.c || this.d).charCodeAt(0) < 99;'}");    BSONObj GeneratedQuery980::projection = fromjson("{\"\":1}");
struct GeneratedQuery981 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery981::query = fromjson("{\"arrayField.a\":{\"$elemMatch\":{\"c\":0.00000000049406564841,\"$where\":'String(this.a || this.b || this.c || this.d).length > 9'}}}");
struct GeneratedQuery982 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery982::query = fromjson("{a:1}");
struct GeneratedQuery983 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery983::query = fromjson("{\"a\":{\"$regex\":\"(a|bc)x+yz\",\"$options\":''}}");
struct GeneratedQuery984 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery984::query = fromjson("{\"c\":true}");    BSONObj GeneratedQuery984::projection = fromjson("{a:1}");
struct GeneratedQuery985 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery985::query = fromjson("{\"d\":314159265011}");
struct GeneratedQuery986 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery986::query = fromjson("{\"_id\":{\"$regex\":\"/(a|bc)x+yz/\"}}");
struct GeneratedQuery987 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery987::query = fromjson("{\"arrayField\":'Usted puede hacer cualquier cosa, pero no todo.'}");
struct GeneratedQuery988 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery988::query = fromjson("{\"arrayField.c\":{\"$type\":14}}");
struct GeneratedQuery989 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery989::query = fromjson("{\"$where\":'function myFunction() { var x = 1 + 2; }',\"\":1,\"$where\":'this.d != undefined'}");
struct GeneratedQuery990 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery990::query = fromjson("{\"$where\":'function myFunction() { return (this.a || this.b || this.c || this.d) > 10; }'}");
struct GeneratedQuery991 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery991::query = fromjson("{b:{\"$date\": 1391633433037}}");    BSONObj GeneratedQuery991::projection = fromjson("{\"a\":1}");
struct GeneratedQuery992 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery992::query = fromjson("{\"\":'When hungry, eat your rice; when tired, close your eyes. Fools may laugh at me, but wise men will know what I mean. anything'}");
struct GeneratedQuery993 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery993::query = fromjson("{\"arrayField\":true}");
struct GeneratedQuery994 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery994::query = fromjson("{\"$nor\":[{\"c\":'You can do anything, but not everything.'}]}");    BSONObj GeneratedQuery994::projection = fromjson("{\"a\":1}");
struct GeneratedQuery995 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery995::query = fromjson("{\"c\":{\"$all\":[-314159265359],\"$nin\":[314159265012]}}");
struct GeneratedQuery996 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery996::query = fromjson("{\"c\":{\"$exists\":true,\"$elemMatch\":{d:314159265009}}}");
struct GeneratedQuery997 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery997::query = fromjson("{\"$nor\":[{\"b\":{\"$mod\":[314159265,314159255]}},{\"b\":314159265017}]}");
struct GeneratedQuery998 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return NULL; }      static BSONObj query;  }; BSONObj GeneratedQuery998::query = fromjson("{\"arrayField\":'',\"a.a\":{\"$size\":NumberInt(314159215)}}");
struct GeneratedQuery999 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery999::query = fromjson("{\"arrayField\":{\"$all\":[0.00002225073858072014,{\"arrayField\":[{\"arrayField\":[{\"arrayField\":[null]}]},{\"a\":{\"locLegacy\":[25,-90]}},null,{\"arrayField\":['You can do anything, but not everything.','',{\"loc\":{\"type\":\"Point\",\"coordinates\":[-180,-89.9]}},{\"_id\":'Cuando hambre, come el arroz, cuando esta cansado, cierra los ojos. Fools pueden reirse de mi, pero los sabios sabran a que me refiero.',\"loc\":{\"type\":\"Point\",\"coordinates\":[-33.3,25]}}]}]}]}}");    BSONObj GeneratedQuery999::projection = fromjson("{\"b\":1}");
struct GeneratedQuery1000 {      static BSONObj getQuery() { return query; }      static BSONObj* getProjection() { return &projection; }      static BSONObj query;      static BSONObj projection;  }; BSONObj GeneratedQuery1000::query = fromjson("{\"$where\":'this.d != undefined'}");    BSONObj GeneratedQuery1000::projection = fromjson("{\"b\":1}");


    class All : public Suite {
    public:
        All() : Suite( "GeneratedQueries" ) { }
        void setupTests() {
            add< InsertDocuments >();   // must be run before the generated queries
            add< GeneratedQueryRunner<GeneratedQuery1> >();
            add< GeneratedQueryRunner<GeneratedQuery2> >();
            add< GeneratedQueryRunner<GeneratedQuery3> >();
            add< GeneratedQueryRunner<GeneratedQuery4> >();
            add< GeneratedQueryRunner<GeneratedQuery5> >();
            add< GeneratedQueryRunner<GeneratedQuery6> >();
            add< GeneratedQueryRunner<GeneratedQuery7> >();
            add< GeneratedQueryRunner<GeneratedQuery8> >();
            add< GeneratedQueryRunner<GeneratedQuery9> >();
            add< GeneratedQueryRunner<GeneratedQuery10> >();
            add< GeneratedQueryRunner<GeneratedQuery11> >();
            add< GeneratedQueryRunner<GeneratedQuery12> >();
            add< GeneratedQueryRunner<GeneratedQuery13> >();
            add< GeneratedQueryRunner<GeneratedQuery14> >();
            add< GeneratedQueryRunner<GeneratedQuery15> >();
            add< GeneratedQueryRunner<GeneratedQuery16> >();
            add< GeneratedQueryRunner<GeneratedQuery17> >();
            add< GeneratedQueryRunner<GeneratedQuery18> >();
            add< GeneratedQueryRunner<GeneratedQuery19> >();
            add< GeneratedQueryRunner<GeneratedQuery20> >();
            add< GeneratedQueryRunner<GeneratedQuery21> >();
            add< GeneratedQueryRunner<GeneratedQuery22> >();
            add< GeneratedQueryRunner<GeneratedQuery23> >();
            add< GeneratedQueryRunner<GeneratedQuery24> >();
            add< GeneratedQueryRunner<GeneratedQuery25> >();
            add< GeneratedQueryRunner<GeneratedQuery26> >();
            add< GeneratedQueryRunner<GeneratedQuery27> >();
            add< GeneratedQueryRunner<GeneratedQuery28> >();
            add< GeneratedQueryRunner<GeneratedQuery29> >();
            add< GeneratedQueryRunner<GeneratedQuery30> >();
            add< GeneratedQueryRunner<GeneratedQuery31> >();
            add< GeneratedQueryRunner<GeneratedQuery32> >();
            add< GeneratedQueryRunner<GeneratedQuery33> >();
            add< GeneratedQueryRunner<GeneratedQuery34> >();
            add< GeneratedQueryRunner<GeneratedQuery35> >();
            add< GeneratedQueryRunner<GeneratedQuery36> >();
            add< GeneratedQueryRunner<GeneratedQuery37> >();
            add< GeneratedQueryRunner<GeneratedQuery38> >();
            add< GeneratedQueryRunner<GeneratedQuery39> >();
            add< GeneratedQueryRunner<GeneratedQuery40> >();
            add< GeneratedQueryRunner<GeneratedQuery41> >();
            add< GeneratedQueryRunner<GeneratedQuery42> >();
            add< GeneratedQueryRunner<GeneratedQuery43> >();
            add< GeneratedQueryRunner<GeneratedQuery44> >();
            add< GeneratedQueryRunner<GeneratedQuery45> >();
            add< GeneratedQueryRunner<GeneratedQuery46> >();
            add< GeneratedQueryRunner<GeneratedQuery47> >();
            add< GeneratedQueryRunner<GeneratedQuery48> >();
            add< GeneratedQueryRunner<GeneratedQuery49> >();
            add< GeneratedQueryRunner<GeneratedQuery50> >();
            add< GeneratedQueryRunner<GeneratedQuery51> >();
            add< GeneratedQueryRunner<GeneratedQuery52> >();
            add< GeneratedQueryRunner<GeneratedQuery53> >();
            add< GeneratedQueryRunner<GeneratedQuery54> >();
            add< GeneratedQueryRunner<GeneratedQuery55> >();
            add< GeneratedQueryRunner<GeneratedQuery56> >();
            add< GeneratedQueryRunner<GeneratedQuery57> >();
            add< GeneratedQueryRunner<GeneratedQuery58> >();
            add< GeneratedQueryRunner<GeneratedQuery59> >();
            add< GeneratedQueryRunner<GeneratedQuery60> >();
            add< GeneratedQueryRunner<GeneratedQuery61> >();
            add< GeneratedQueryRunner<GeneratedQuery62> >();
            add< GeneratedQueryRunner<GeneratedQuery63> >();
            add< GeneratedQueryRunner<GeneratedQuery64> >();
            add< GeneratedQueryRunner<GeneratedQuery65> >();
            add< GeneratedQueryRunner<GeneratedQuery66> >();
            add< GeneratedQueryRunner<GeneratedQuery67> >();
            add< GeneratedQueryRunner<GeneratedQuery68> >();
            add< GeneratedQueryRunner<GeneratedQuery69> >();
            add< GeneratedQueryRunner<GeneratedQuery70> >();
            add< GeneratedQueryRunner<GeneratedQuery71> >();
            add< GeneratedQueryRunner<GeneratedQuery72> >();
            add< GeneratedQueryRunner<GeneratedQuery73> >();
            add< GeneratedQueryRunner<GeneratedQuery74> >();
            add< GeneratedQueryRunner<GeneratedQuery75> >();
            add< GeneratedQueryRunner<GeneratedQuery76> >();
            add< GeneratedQueryRunner<GeneratedQuery77> >();
            add< GeneratedQueryRunner<GeneratedQuery78> >();
            add< GeneratedQueryRunner<GeneratedQuery79> >();
            add< GeneratedQueryRunner<GeneratedQuery80> >();
            add< GeneratedQueryRunner<GeneratedQuery81> >();
            add< GeneratedQueryRunner<GeneratedQuery82> >();
            add< GeneratedQueryRunner<GeneratedQuery83> >();
            add< GeneratedQueryRunner<GeneratedQuery84> >();
            add< GeneratedQueryRunner<GeneratedQuery85> >();
            add< GeneratedQueryRunner<GeneratedQuery86> >();
            add< GeneratedQueryRunner<GeneratedQuery87> >();
            add< GeneratedQueryRunner<GeneratedQuery88> >();
            add< GeneratedQueryRunner<GeneratedQuery89> >();
            add< GeneratedQueryRunner<GeneratedQuery90> >();
            add< GeneratedQueryRunner<GeneratedQuery91> >();
            add< GeneratedQueryRunner<GeneratedQuery92> >();
            add< GeneratedQueryRunner<GeneratedQuery93> >();
            add< GeneratedQueryRunner<GeneratedQuery94> >();
            add< GeneratedQueryRunner<GeneratedQuery95> >();
            add< GeneratedQueryRunner<GeneratedQuery96> >();
            add< GeneratedQueryRunner<GeneratedQuery97> >();
            add< GeneratedQueryRunner<GeneratedQuery98> >();
            add< GeneratedQueryRunner<GeneratedQuery99> >();
            add< GeneratedQueryRunner<GeneratedQuery100> >();
            add< GeneratedQueryRunner<GeneratedQuery101> >();
            add< GeneratedQueryRunner<GeneratedQuery102> >();
            add< GeneratedQueryRunner<GeneratedQuery103> >();
            add< GeneratedQueryRunner<GeneratedQuery104> >();
            add< GeneratedQueryRunner<GeneratedQuery105> >();
            add< GeneratedQueryRunner<GeneratedQuery106> >();
            add< GeneratedQueryRunner<GeneratedQuery107> >();
            add< GeneratedQueryRunner<GeneratedQuery108> >();
            add< GeneratedQueryRunner<GeneratedQuery109> >();
            add< GeneratedQueryRunner<GeneratedQuery110> >();
            add< GeneratedQueryRunner<GeneratedQuery111> >();
            add< GeneratedQueryRunner<GeneratedQuery112> >();
            add< GeneratedQueryRunner<GeneratedQuery113> >();
            add< GeneratedQueryRunner<GeneratedQuery114> >();
            add< GeneratedQueryRunner<GeneratedQuery115> >();
            add< GeneratedQueryRunner<GeneratedQuery116> >();
            add< GeneratedQueryRunner<GeneratedQuery117> >();
            add< GeneratedQueryRunner<GeneratedQuery118> >();
            add< GeneratedQueryRunner<GeneratedQuery119> >();
            add< GeneratedQueryRunner<GeneratedQuery120> >();
            add< GeneratedQueryRunner<GeneratedQuery121> >();
            add< GeneratedQueryRunner<GeneratedQuery122> >();
            add< GeneratedQueryRunner<GeneratedQuery123> >();
            add< GeneratedQueryRunner<GeneratedQuery124> >();
            add< GeneratedQueryRunner<GeneratedQuery125> >();
            add< GeneratedQueryRunner<GeneratedQuery126> >();
            add< GeneratedQueryRunner<GeneratedQuery127> >();
            add< GeneratedQueryRunner<GeneratedQuery128> >();
            add< GeneratedQueryRunner<GeneratedQuery129> >();
            add< GeneratedQueryRunner<GeneratedQuery130> >();
            add< GeneratedQueryRunner<GeneratedQuery131> >();
            add< GeneratedQueryRunner<GeneratedQuery132> >();
            add< GeneratedQueryRunner<GeneratedQuery133> >();
            add< GeneratedQueryRunner<GeneratedQuery134> >();
            add< GeneratedQueryRunner<GeneratedQuery135> >();
            add< GeneratedQueryRunner<GeneratedQuery136> >();
            add< GeneratedQueryRunner<GeneratedQuery137> >();
            add< GeneratedQueryRunner<GeneratedQuery138> >();
            add< GeneratedQueryRunner<GeneratedQuery139> >();
            add< GeneratedQueryRunner<GeneratedQuery140> >();
            add< GeneratedQueryRunner<GeneratedQuery141> >();
            add< GeneratedQueryRunner<GeneratedQuery142> >();
            add< GeneratedQueryRunner<GeneratedQuery143> >();
            add< GeneratedQueryRunner<GeneratedQuery144> >();
            add< GeneratedQueryRunner<GeneratedQuery145> >();
            add< GeneratedQueryRunner<GeneratedQuery146> >();
            add< GeneratedQueryRunner<GeneratedQuery147> >();
            add< GeneratedQueryRunner<GeneratedQuery148> >();
            add< GeneratedQueryRunner<GeneratedQuery149> >();
            add< GeneratedQueryRunner<GeneratedQuery150> >();
            add< GeneratedQueryRunner<GeneratedQuery151> >();
            add< GeneratedQueryRunner<GeneratedQuery152> >();
            add< GeneratedQueryRunner<GeneratedQuery153> >();
            add< GeneratedQueryRunner<GeneratedQuery154> >();
            add< GeneratedQueryRunner<GeneratedQuery155> >();
            add< GeneratedQueryRunner<GeneratedQuery156> >();
            add< GeneratedQueryRunner<GeneratedQuery157> >();
            add< GeneratedQueryRunner<GeneratedQuery158> >();
            add< GeneratedQueryRunner<GeneratedQuery159> >();
            add< GeneratedQueryRunner<GeneratedQuery160> >();
            add< GeneratedQueryRunner<GeneratedQuery161> >();
            add< GeneratedQueryRunner<GeneratedQuery162> >();
            add< GeneratedQueryRunner<GeneratedQuery163> >();
            add< GeneratedQueryRunner<GeneratedQuery164> >();
            add< GeneratedQueryRunner<GeneratedQuery165> >();
            add< GeneratedQueryRunner<GeneratedQuery166> >();
            add< GeneratedQueryRunner<GeneratedQuery167> >();
            add< GeneratedQueryRunner<GeneratedQuery168> >();
            add< GeneratedQueryRunner<GeneratedQuery169> >();
            add< GeneratedQueryRunner<GeneratedQuery170> >();
            add< GeneratedQueryRunner<GeneratedQuery171> >();
            add< GeneratedQueryRunner<GeneratedQuery172> >();
            add< GeneratedQueryRunner<GeneratedQuery173> >();
            add< GeneratedQueryRunner<GeneratedQuery174> >();
            add< GeneratedQueryRunner<GeneratedQuery175> >();
            add< GeneratedQueryRunner<GeneratedQuery176> >();
            add< GeneratedQueryRunner<GeneratedQuery177> >();
            add< GeneratedQueryRunner<GeneratedQuery178> >();
            add< GeneratedQueryRunner<GeneratedQuery179> >();
            add< GeneratedQueryRunner<GeneratedQuery180> >();
            add< GeneratedQueryRunner<GeneratedQuery181> >();
            add< GeneratedQueryRunner<GeneratedQuery182> >();
            add< GeneratedQueryRunner<GeneratedQuery183> >();
            add< GeneratedQueryRunner<GeneratedQuery184> >();
            add< GeneratedQueryRunner<GeneratedQuery185> >();
            add< GeneratedQueryRunner<GeneratedQuery186> >();
            add< GeneratedQueryRunner<GeneratedQuery187> >();
            add< GeneratedQueryRunner<GeneratedQuery188> >();
            add< GeneratedQueryRunner<GeneratedQuery189> >();
            add< GeneratedQueryRunner<GeneratedQuery190> >();
            add< GeneratedQueryRunner<GeneratedQuery191> >();
            add< GeneratedQueryRunner<GeneratedQuery192> >();
            add< GeneratedQueryRunner<GeneratedQuery193> >();
            add< GeneratedQueryRunner<GeneratedQuery194> >();
            add< GeneratedQueryRunner<GeneratedQuery195> >();
            add< GeneratedQueryRunner<GeneratedQuery196> >();
            add< GeneratedQueryRunner<GeneratedQuery197> >();
            add< GeneratedQueryRunner<GeneratedQuery198> >();
            add< GeneratedQueryRunner<GeneratedQuery199> >();
            add< GeneratedQueryRunner<GeneratedQuery200> >();
            add< GeneratedQueryRunner<GeneratedQuery201> >();
            add< GeneratedQueryRunner<GeneratedQuery202> >();
            add< GeneratedQueryRunner<GeneratedQuery203> >();
            add< GeneratedQueryRunner<GeneratedQuery204> >();
            add< GeneratedQueryRunner<GeneratedQuery205> >();
            add< GeneratedQueryRunner<GeneratedQuery206> >();
            add< GeneratedQueryRunner<GeneratedQuery207> >();
            add< GeneratedQueryRunner<GeneratedQuery208> >();
            add< GeneratedQueryRunner<GeneratedQuery209> >();
            add< GeneratedQueryRunner<GeneratedQuery210> >();
            add< GeneratedQueryRunner<GeneratedQuery211> >();
            add< GeneratedQueryRunner<GeneratedQuery212> >();
            add< GeneratedQueryRunner<GeneratedQuery213> >();
            add< GeneratedQueryRunner<GeneratedQuery214> >();
            add< GeneratedQueryRunner<GeneratedQuery215> >();
            add< GeneratedQueryRunner<GeneratedQuery216> >();
            add< GeneratedQueryRunner<GeneratedQuery217> >();
            add< GeneratedQueryRunner<GeneratedQuery218> >();
            add< GeneratedQueryRunner<GeneratedQuery219> >();
            add< GeneratedQueryRunner<GeneratedQuery220> >();
            add< GeneratedQueryRunner<GeneratedQuery221> >();
            add< GeneratedQueryRunner<GeneratedQuery222> >();
            add< GeneratedQueryRunner<GeneratedQuery223> >();
            add< GeneratedQueryRunner<GeneratedQuery224> >();
            add< GeneratedQueryRunner<GeneratedQuery225> >();
            add< GeneratedQueryRunner<GeneratedQuery226> >();
            add< GeneratedQueryRunner<GeneratedQuery227> >();
            add< GeneratedQueryRunner<GeneratedQuery228> >();
            add< GeneratedQueryRunner<GeneratedQuery229> >();
            add< GeneratedQueryRunner<GeneratedQuery230> >();
            add< GeneratedQueryRunner<GeneratedQuery231> >();
            add< GeneratedQueryRunner<GeneratedQuery232> >();
            add< GeneratedQueryRunner<GeneratedQuery233> >();
            add< GeneratedQueryRunner<GeneratedQuery234> >();
            add< GeneratedQueryRunner<GeneratedQuery235> >();
            add< GeneratedQueryRunner<GeneratedQuery236> >();
            add< GeneratedQueryRunner<GeneratedQuery237> >();
            add< GeneratedQueryRunner<GeneratedQuery238> >();
            add< GeneratedQueryRunner<GeneratedQuery239> >();
            add< GeneratedQueryRunner<GeneratedQuery240> >();
            add< GeneratedQueryRunner<GeneratedQuery241> >();
            add< GeneratedQueryRunner<GeneratedQuery242> >();
            add< GeneratedQueryRunner<GeneratedQuery243> >();
            add< GeneratedQueryRunner<GeneratedQuery244> >();
            add< GeneratedQueryRunner<GeneratedQuery245> >();
            add< GeneratedQueryRunner<GeneratedQuery246> >();
            add< GeneratedQueryRunner<GeneratedQuery247> >();
            add< GeneratedQueryRunner<GeneratedQuery248> >();
            add< GeneratedQueryRunner<GeneratedQuery249> >();
            add< GeneratedQueryRunner<GeneratedQuery250> >();
            add< GeneratedQueryRunner<GeneratedQuery251> >();
            add< GeneratedQueryRunner<GeneratedQuery252> >();
            add< GeneratedQueryRunner<GeneratedQuery253> >();
            add< GeneratedQueryRunner<GeneratedQuery254> >();
            add< GeneratedQueryRunner<GeneratedQuery255> >();
            add< GeneratedQueryRunner<GeneratedQuery256> >();
            add< GeneratedQueryRunner<GeneratedQuery257> >();
            add< GeneratedQueryRunner<GeneratedQuery258> >();
            add< GeneratedQueryRunner<GeneratedQuery259> >();
            add< GeneratedQueryRunner<GeneratedQuery260> >();
            add< GeneratedQueryRunner<GeneratedQuery261> >();
            add< GeneratedQueryRunner<GeneratedQuery262> >();
            add< GeneratedQueryRunner<GeneratedQuery263> >();
            add< GeneratedQueryRunner<GeneratedQuery264> >();
            add< GeneratedQueryRunner<GeneratedQuery265> >();
            add< GeneratedQueryRunner<GeneratedQuery266> >();
            add< GeneratedQueryRunner<GeneratedQuery267> >();
            add< GeneratedQueryRunner<GeneratedQuery268> >();
            add< GeneratedQueryRunner<GeneratedQuery269> >();
            add< GeneratedQueryRunner<GeneratedQuery270> >();
            add< GeneratedQueryRunner<GeneratedQuery271> >();
            add< GeneratedQueryRunner<GeneratedQuery272> >();
            add< GeneratedQueryRunner<GeneratedQuery273> >();
            add< GeneratedQueryRunner<GeneratedQuery274> >();
            add< GeneratedQueryRunner<GeneratedQuery275> >();
            add< GeneratedQueryRunner<GeneratedQuery276> >();
            add< GeneratedQueryRunner<GeneratedQuery277> >();
            add< GeneratedQueryRunner<GeneratedQuery278> >();
            add< GeneratedQueryRunner<GeneratedQuery279> >();
            add< GeneratedQueryRunner<GeneratedQuery280> >();
            add< GeneratedQueryRunner<GeneratedQuery281> >();
            add< GeneratedQueryRunner<GeneratedQuery282> >();
            add< GeneratedQueryRunner<GeneratedQuery283> >();
            add< GeneratedQueryRunner<GeneratedQuery284> >();
            add< GeneratedQueryRunner<GeneratedQuery285> >();
            add< GeneratedQueryRunner<GeneratedQuery286> >();
            add< GeneratedQueryRunner<GeneratedQuery287> >();
            add< GeneratedQueryRunner<GeneratedQuery288> >();
            add< GeneratedQueryRunner<GeneratedQuery289> >();
            add< GeneratedQueryRunner<GeneratedQuery290> >();
            add< GeneratedQueryRunner<GeneratedQuery291> >();
            add< GeneratedQueryRunner<GeneratedQuery292> >();
            add< GeneratedQueryRunner<GeneratedQuery293> >();
            add< GeneratedQueryRunner<GeneratedQuery294> >();
            add< GeneratedQueryRunner<GeneratedQuery295> >();
            add< GeneratedQueryRunner<GeneratedQuery296> >();
            add< GeneratedQueryRunner<GeneratedQuery297> >();
            add< GeneratedQueryRunner<GeneratedQuery298> >();
            add< GeneratedQueryRunner<GeneratedQuery299> >();
            add< GeneratedQueryRunner<GeneratedQuery300> >();
            add< GeneratedQueryRunner<GeneratedQuery301> >();
            add< GeneratedQueryRunner<GeneratedQuery302> >();
            add< GeneratedQueryRunner<GeneratedQuery303> >();
            add< GeneratedQueryRunner<GeneratedQuery304> >();
            add< GeneratedQueryRunner<GeneratedQuery305> >();
            add< GeneratedQueryRunner<GeneratedQuery306> >();
            add< GeneratedQueryRunner<GeneratedQuery307> >();
            add< GeneratedQueryRunner<GeneratedQuery308> >();
            add< GeneratedQueryRunner<GeneratedQuery309> >();
            add< GeneratedQueryRunner<GeneratedQuery310> >();
            add< GeneratedQueryRunner<GeneratedQuery311> >();
            add< GeneratedQueryRunner<GeneratedQuery312> >();
            add< GeneratedQueryRunner<GeneratedQuery313> >();
            add< GeneratedQueryRunner<GeneratedQuery314> >();
            add< GeneratedQueryRunner<GeneratedQuery315> >();
            add< GeneratedQueryRunner<GeneratedQuery316> >();
            add< GeneratedQueryRunner<GeneratedQuery317> >();
            add< GeneratedQueryRunner<GeneratedQuery318> >();
            add< GeneratedQueryRunner<GeneratedQuery319> >();
            add< GeneratedQueryRunner<GeneratedQuery320> >();
            add< GeneratedQueryRunner<GeneratedQuery321> >();
            add< GeneratedQueryRunner<GeneratedQuery322> >();
            add< GeneratedQueryRunner<GeneratedQuery323> >();
            add< GeneratedQueryRunner<GeneratedQuery324> >();
            add< GeneratedQueryRunner<GeneratedQuery325> >();
            add< GeneratedQueryRunner<GeneratedQuery326> >();
            add< GeneratedQueryRunner<GeneratedQuery327> >();
            add< GeneratedQueryRunner<GeneratedQuery328> >();
            add< GeneratedQueryRunner<GeneratedQuery329> >();
            add< GeneratedQueryRunner<GeneratedQuery330> >();
            add< GeneratedQueryRunner<GeneratedQuery331> >();
            add< GeneratedQueryRunner<GeneratedQuery332> >();
            add< GeneratedQueryRunner<GeneratedQuery333> >();
            add< GeneratedQueryRunner<GeneratedQuery334> >();
            add< GeneratedQueryRunner<GeneratedQuery335> >();
            add< GeneratedQueryRunner<GeneratedQuery336> >();
            add< GeneratedQueryRunner<GeneratedQuery337> >();
            add< GeneratedQueryRunner<GeneratedQuery338> >();
            add< GeneratedQueryRunner<GeneratedQuery339> >();
            add< GeneratedQueryRunner<GeneratedQuery340> >();
            add< GeneratedQueryRunner<GeneratedQuery341> >();
            add< GeneratedQueryRunner<GeneratedQuery342> >();
            add< GeneratedQueryRunner<GeneratedQuery343> >();
            add< GeneratedQueryRunner<GeneratedQuery344> >();
            add< GeneratedQueryRunner<GeneratedQuery345> >();
            add< GeneratedQueryRunner<GeneratedQuery346> >();
            add< GeneratedQueryRunner<GeneratedQuery347> >();
            add< GeneratedQueryRunner<GeneratedQuery348> >();
            add< GeneratedQueryRunner<GeneratedQuery349> >();
            add< GeneratedQueryRunner<GeneratedQuery350> >();
            add< GeneratedQueryRunner<GeneratedQuery351> >();
            add< GeneratedQueryRunner<GeneratedQuery352> >();
            add< GeneratedQueryRunner<GeneratedQuery353> >();
            add< GeneratedQueryRunner<GeneratedQuery354> >();
            add< GeneratedQueryRunner<GeneratedQuery355> >();
            add< GeneratedQueryRunner<GeneratedQuery356> >();
            add< GeneratedQueryRunner<GeneratedQuery357> >();
            add< GeneratedQueryRunner<GeneratedQuery358> >();
            add< GeneratedQueryRunner<GeneratedQuery359> >();
            add< GeneratedQueryRunner<GeneratedQuery360> >();
            add< GeneratedQueryRunner<GeneratedQuery361> >();
            add< GeneratedQueryRunner<GeneratedQuery362> >();
            add< GeneratedQueryRunner<GeneratedQuery363> >();
            add< GeneratedQueryRunner<GeneratedQuery364> >();
            add< GeneratedQueryRunner<GeneratedQuery365> >();
            add< GeneratedQueryRunner<GeneratedQuery366> >();
            add< GeneratedQueryRunner<GeneratedQuery367> >();
            add< GeneratedQueryRunner<GeneratedQuery368> >();
            add< GeneratedQueryRunner<GeneratedQuery369> >();
            add< GeneratedQueryRunner<GeneratedQuery370> >();
            add< GeneratedQueryRunner<GeneratedQuery371> >();
            add< GeneratedQueryRunner<GeneratedQuery372> >();
            add< GeneratedQueryRunner<GeneratedQuery373> >();
            add< GeneratedQueryRunner<GeneratedQuery374> >();
            add< GeneratedQueryRunner<GeneratedQuery375> >();
            add< GeneratedQueryRunner<GeneratedQuery376> >();
            add< GeneratedQueryRunner<GeneratedQuery377> >();
            add< GeneratedQueryRunner<GeneratedQuery378> >();
            add< GeneratedQueryRunner<GeneratedQuery379> >();
            add< GeneratedQueryRunner<GeneratedQuery380> >();
            add< GeneratedQueryRunner<GeneratedQuery381> >();
            add< GeneratedQueryRunner<GeneratedQuery382> >();
            add< GeneratedQueryRunner<GeneratedQuery383> >();
            add< GeneratedQueryRunner<GeneratedQuery384> >();
            add< GeneratedQueryRunner<GeneratedQuery385> >();
            add< GeneratedQueryRunner<GeneratedQuery386> >();
            add< GeneratedQueryRunner<GeneratedQuery387> >();
            add< GeneratedQueryRunner<GeneratedQuery388> >();
            add< GeneratedQueryRunner<GeneratedQuery389> >();
            add< GeneratedQueryRunner<GeneratedQuery390> >();
            add< GeneratedQueryRunner<GeneratedQuery391> >();
            add< GeneratedQueryRunner<GeneratedQuery392> >();
            add< GeneratedQueryRunner<GeneratedQuery393> >();
            add< GeneratedQueryRunner<GeneratedQuery394> >();
            add< GeneratedQueryRunner<GeneratedQuery395> >();
            add< GeneratedQueryRunner<GeneratedQuery396> >();
            add< GeneratedQueryRunner<GeneratedQuery397> >();
            add< GeneratedQueryRunner<GeneratedQuery398> >();
            add< GeneratedQueryRunner<GeneratedQuery399> >();
            add< GeneratedQueryRunner<GeneratedQuery400> >();
            add< GeneratedQueryRunner<GeneratedQuery401> >();
            add< GeneratedQueryRunner<GeneratedQuery402> >();
            add< GeneratedQueryRunner<GeneratedQuery403> >();
            add< GeneratedQueryRunner<GeneratedQuery404> >();
            add< GeneratedQueryRunner<GeneratedQuery405> >();
            add< GeneratedQueryRunner<GeneratedQuery406> >();
            add< GeneratedQueryRunner<GeneratedQuery407> >();
            add< GeneratedQueryRunner<GeneratedQuery408> >();
            add< GeneratedQueryRunner<GeneratedQuery409> >();
            add< GeneratedQueryRunner<GeneratedQuery410> >();
            add< GeneratedQueryRunner<GeneratedQuery411> >();
            add< GeneratedQueryRunner<GeneratedQuery412> >();
            add< GeneratedQueryRunner<GeneratedQuery413> >();
            add< GeneratedQueryRunner<GeneratedQuery414> >();
            add< GeneratedQueryRunner<GeneratedQuery415> >();
            add< GeneratedQueryRunner<GeneratedQuery416> >();
            add< GeneratedQueryRunner<GeneratedQuery417> >();
            add< GeneratedQueryRunner<GeneratedQuery418> >();
            add< GeneratedQueryRunner<GeneratedQuery419> >();
            add< GeneratedQueryRunner<GeneratedQuery420> >();
            add< GeneratedQueryRunner<GeneratedQuery421> >();
            add< GeneratedQueryRunner<GeneratedQuery422> >();
            add< GeneratedQueryRunner<GeneratedQuery423> >();
            add< GeneratedQueryRunner<GeneratedQuery424> >();
            add< GeneratedQueryRunner<GeneratedQuery425> >();
            add< GeneratedQueryRunner<GeneratedQuery426> >();
            add< GeneratedQueryRunner<GeneratedQuery427> >();
            add< GeneratedQueryRunner<GeneratedQuery428> >();
            add< GeneratedQueryRunner<GeneratedQuery429> >();
            add< GeneratedQueryRunner<GeneratedQuery430> >();
            add< GeneratedQueryRunner<GeneratedQuery431> >();
            add< GeneratedQueryRunner<GeneratedQuery432> >();
            add< GeneratedQueryRunner<GeneratedQuery433> >();
            add< GeneratedQueryRunner<GeneratedQuery434> >();
            add< GeneratedQueryRunner<GeneratedQuery435> >();
            add< GeneratedQueryRunner<GeneratedQuery436> >();
            add< GeneratedQueryRunner<GeneratedQuery437> >();
            add< GeneratedQueryRunner<GeneratedQuery438> >();
            add< GeneratedQueryRunner<GeneratedQuery439> >();
            add< GeneratedQueryRunner<GeneratedQuery440> >();
            add< GeneratedQueryRunner<GeneratedQuery441> >();
            add< GeneratedQueryRunner<GeneratedQuery442> >();
            add< GeneratedQueryRunner<GeneratedQuery443> >();
            add< GeneratedQueryRunner<GeneratedQuery444> >();
            add< GeneratedQueryRunner<GeneratedQuery445> >();
            add< GeneratedQueryRunner<GeneratedQuery446> >();
            add< GeneratedQueryRunner<GeneratedQuery447> >();
            add< GeneratedQueryRunner<GeneratedQuery448> >();
            add< GeneratedQueryRunner<GeneratedQuery449> >();
            add< GeneratedQueryRunner<GeneratedQuery450> >();
            add< GeneratedQueryRunner<GeneratedQuery451> >();
            add< GeneratedQueryRunner<GeneratedQuery452> >();
            add< GeneratedQueryRunner<GeneratedQuery453> >();
            add< GeneratedQueryRunner<GeneratedQuery454> >();
            add< GeneratedQueryRunner<GeneratedQuery455> >();
            add< GeneratedQueryRunner<GeneratedQuery456> >();
            add< GeneratedQueryRunner<GeneratedQuery457> >();
            add< GeneratedQueryRunner<GeneratedQuery458> >();
            add< GeneratedQueryRunner<GeneratedQuery459> >();
            add< GeneratedQueryRunner<GeneratedQuery460> >();
            add< GeneratedQueryRunner<GeneratedQuery461> >();
            add< GeneratedQueryRunner<GeneratedQuery462> >();
            add< GeneratedQueryRunner<GeneratedQuery463> >();
            add< GeneratedQueryRunner<GeneratedQuery464> >();
            add< GeneratedQueryRunner<GeneratedQuery465> >();
            add< GeneratedQueryRunner<GeneratedQuery466> >();
            add< GeneratedQueryRunner<GeneratedQuery467> >();
            add< GeneratedQueryRunner<GeneratedQuery468> >();
            add< GeneratedQueryRunner<GeneratedQuery469> >();
            add< GeneratedQueryRunner<GeneratedQuery470> >();
            add< GeneratedQueryRunner<GeneratedQuery471> >();
            add< GeneratedQueryRunner<GeneratedQuery472> >();
            add< GeneratedQueryRunner<GeneratedQuery473> >();
            add< GeneratedQueryRunner<GeneratedQuery474> >();
            add< GeneratedQueryRunner<GeneratedQuery475> >();
            add< GeneratedQueryRunner<GeneratedQuery476> >();
            add< GeneratedQueryRunner<GeneratedQuery477> >();
            add< GeneratedQueryRunner<GeneratedQuery478> >();
            add< GeneratedQueryRunner<GeneratedQuery479> >();
            add< GeneratedQueryRunner<GeneratedQuery480> >();
            add< GeneratedQueryRunner<GeneratedQuery481> >();
            add< GeneratedQueryRunner<GeneratedQuery482> >();
            add< GeneratedQueryRunner<GeneratedQuery483> >();
            add< GeneratedQueryRunner<GeneratedQuery484> >();
            add< GeneratedQueryRunner<GeneratedQuery485> >();
            add< GeneratedQueryRunner<GeneratedQuery486> >();
            add< GeneratedQueryRunner<GeneratedQuery487> >();
            add< GeneratedQueryRunner<GeneratedQuery488> >();
            add< GeneratedQueryRunner<GeneratedQuery489> >();
            add< GeneratedQueryRunner<GeneratedQuery490> >();
            add< GeneratedQueryRunner<GeneratedQuery491> >();
            add< GeneratedQueryRunner<GeneratedQuery492> >();
            add< GeneratedQueryRunner<GeneratedQuery493> >();
            add< GeneratedQueryRunner<GeneratedQuery494> >();
            add< GeneratedQueryRunner<GeneratedQuery495> >();
            add< GeneratedQueryRunner<GeneratedQuery496> >();
            add< GeneratedQueryRunner<GeneratedQuery497> >();
            add< GeneratedQueryRunner<GeneratedQuery498> >();
            add< GeneratedQueryRunner<GeneratedQuery499> >();
            add< GeneratedQueryRunner<GeneratedQuery500> >();
            add< GeneratedQueryRunner<GeneratedQuery501> >();
            add< GeneratedQueryRunner<GeneratedQuery502> >();
            add< GeneratedQueryRunner<GeneratedQuery503> >();
            add< GeneratedQueryRunner<GeneratedQuery504> >();
            add< GeneratedQueryRunner<GeneratedQuery505> >();
            add< GeneratedQueryRunner<GeneratedQuery506> >();
            add< GeneratedQueryRunner<GeneratedQuery507> >();
            add< GeneratedQueryRunner<GeneratedQuery508> >();
            add< GeneratedQueryRunner<GeneratedQuery509> >();
            add< GeneratedQueryRunner<GeneratedQuery510> >();
            add< GeneratedQueryRunner<GeneratedQuery511> >();
            add< GeneratedQueryRunner<GeneratedQuery512> >();
            add< GeneratedQueryRunner<GeneratedQuery513> >();
            add< GeneratedQueryRunner<GeneratedQuery514> >();
            add< GeneratedQueryRunner<GeneratedQuery515> >();
            add< GeneratedQueryRunner<GeneratedQuery516> >();
            add< GeneratedQueryRunner<GeneratedQuery517> >();
            add< GeneratedQueryRunner<GeneratedQuery518> >();
            add< GeneratedQueryRunner<GeneratedQuery519> >();
            add< GeneratedQueryRunner<GeneratedQuery520> >();
            add< GeneratedQueryRunner<GeneratedQuery521> >();
            add< GeneratedQueryRunner<GeneratedQuery522> >();
            add< GeneratedQueryRunner<GeneratedQuery523> >();
            add< GeneratedQueryRunner<GeneratedQuery524> >();
            add< GeneratedQueryRunner<GeneratedQuery525> >();
            add< GeneratedQueryRunner<GeneratedQuery526> >();
            add< GeneratedQueryRunner<GeneratedQuery527> >();
            add< GeneratedQueryRunner<GeneratedQuery528> >();
            add< GeneratedQueryRunner<GeneratedQuery529> >();
            add< GeneratedQueryRunner<GeneratedQuery530> >();
            add< GeneratedQueryRunner<GeneratedQuery531> >();
            add< GeneratedQueryRunner<GeneratedQuery532> >();
            add< GeneratedQueryRunner<GeneratedQuery533> >();
            add< GeneratedQueryRunner<GeneratedQuery534> >();
            add< GeneratedQueryRunner<GeneratedQuery535> >();
            add< GeneratedQueryRunner<GeneratedQuery536> >();
            add< GeneratedQueryRunner<GeneratedQuery537> >();
            add< GeneratedQueryRunner<GeneratedQuery538> >();
            add< GeneratedQueryRunner<GeneratedQuery539> >();
            add< GeneratedQueryRunner<GeneratedQuery540> >();
            add< GeneratedQueryRunner<GeneratedQuery541> >();
            add< GeneratedQueryRunner<GeneratedQuery542> >();
            add< GeneratedQueryRunner<GeneratedQuery543> >();
            add< GeneratedQueryRunner<GeneratedQuery544> >();
            add< GeneratedQueryRunner<GeneratedQuery545> >();
            add< GeneratedQueryRunner<GeneratedQuery546> >();
            add< GeneratedQueryRunner<GeneratedQuery547> >();
            add< GeneratedQueryRunner<GeneratedQuery548> >();
            add< GeneratedQueryRunner<GeneratedQuery549> >();
            add< GeneratedQueryRunner<GeneratedQuery550> >();
            add< GeneratedQueryRunner<GeneratedQuery551> >();
            add< GeneratedQueryRunner<GeneratedQuery552> >();
            add< GeneratedQueryRunner<GeneratedQuery553> >();
            add< GeneratedQueryRunner<GeneratedQuery554> >();
            add< GeneratedQueryRunner<GeneratedQuery555> >();
            add< GeneratedQueryRunner<GeneratedQuery556> >();
            add< GeneratedQueryRunner<GeneratedQuery557> >();
            add< GeneratedQueryRunner<GeneratedQuery558> >();
            add< GeneratedQueryRunner<GeneratedQuery559> >();
            add< GeneratedQueryRunner<GeneratedQuery560> >();
            add< GeneratedQueryRunner<GeneratedQuery561> >();
            add< GeneratedQueryRunner<GeneratedQuery562> >();
            add< GeneratedQueryRunner<GeneratedQuery563> >();
            add< GeneratedQueryRunner<GeneratedQuery564> >();
            add< GeneratedQueryRunner<GeneratedQuery565> >();
            add< GeneratedQueryRunner<GeneratedQuery566> >();
            add< GeneratedQueryRunner<GeneratedQuery567> >();
            add< GeneratedQueryRunner<GeneratedQuery568> >();
            add< GeneratedQueryRunner<GeneratedQuery569> >();
            add< GeneratedQueryRunner<GeneratedQuery570> >();
            add< GeneratedQueryRunner<GeneratedQuery571> >();
            add< GeneratedQueryRunner<GeneratedQuery572> >();
            add< GeneratedQueryRunner<GeneratedQuery573> >();
            add< GeneratedQueryRunner<GeneratedQuery574> >();
            add< GeneratedQueryRunner<GeneratedQuery575> >();
            add< GeneratedQueryRunner<GeneratedQuery576> >();
            add< GeneratedQueryRunner<GeneratedQuery577> >();
            add< GeneratedQueryRunner<GeneratedQuery578> >();
            add< GeneratedQueryRunner<GeneratedQuery579> >();
            add< GeneratedQueryRunner<GeneratedQuery580> >();
            add< GeneratedQueryRunner<GeneratedQuery581> >();
            add< GeneratedQueryRunner<GeneratedQuery582> >();
            add< GeneratedQueryRunner<GeneratedQuery583> >();
            add< GeneratedQueryRunner<GeneratedQuery584> >();
            add< GeneratedQueryRunner<GeneratedQuery585> >();
            add< GeneratedQueryRunner<GeneratedQuery586> >();
            add< GeneratedQueryRunner<GeneratedQuery587> >();
            add< GeneratedQueryRunner<GeneratedQuery588> >();
            add< GeneratedQueryRunner<GeneratedQuery589> >();
            add< GeneratedQueryRunner<GeneratedQuery590> >();
            add< GeneratedQueryRunner<GeneratedQuery591> >();
            add< GeneratedQueryRunner<GeneratedQuery592> >();
            add< GeneratedQueryRunner<GeneratedQuery593> >();
            add< GeneratedQueryRunner<GeneratedQuery594> >();
            add< GeneratedQueryRunner<GeneratedQuery595> >();
            add< GeneratedQueryRunner<GeneratedQuery596> >();
            add< GeneratedQueryRunner<GeneratedQuery597> >();
            add< GeneratedQueryRunner<GeneratedQuery598> >();
            add< GeneratedQueryRunner<GeneratedQuery599> >();
            add< GeneratedQueryRunner<GeneratedQuery600> >();
            add< GeneratedQueryRunner<GeneratedQuery601> >();
            add< GeneratedQueryRunner<GeneratedQuery602> >();
            add< GeneratedQueryRunner<GeneratedQuery603> >();
            add< GeneratedQueryRunner<GeneratedQuery604> >();
            add< GeneratedQueryRunner<GeneratedQuery605> >();
            add< GeneratedQueryRunner<GeneratedQuery606> >();
            add< GeneratedQueryRunner<GeneratedQuery607> >();
            add< GeneratedQueryRunner<GeneratedQuery608> >();
            add< GeneratedQueryRunner<GeneratedQuery609> >();
            add< GeneratedQueryRunner<GeneratedQuery610> >();
            add< GeneratedQueryRunner<GeneratedQuery611> >();
            add< GeneratedQueryRunner<GeneratedQuery612> >();
            add< GeneratedQueryRunner<GeneratedQuery613> >();
            add< GeneratedQueryRunner<GeneratedQuery614> >();
            add< GeneratedQueryRunner<GeneratedQuery615> >();
            add< GeneratedQueryRunner<GeneratedQuery616> >();
            add< GeneratedQueryRunner<GeneratedQuery617> >();
            add< GeneratedQueryRunner<GeneratedQuery618> >();
            add< GeneratedQueryRunner<GeneratedQuery619> >();
            add< GeneratedQueryRunner<GeneratedQuery620> >();
            add< GeneratedQueryRunner<GeneratedQuery621> >();
            add< GeneratedQueryRunner<GeneratedQuery622> >();
            add< GeneratedQueryRunner<GeneratedQuery623> >();
            add< GeneratedQueryRunner<GeneratedQuery624> >();
            add< GeneratedQueryRunner<GeneratedQuery625> >();
            add< GeneratedQueryRunner<GeneratedQuery626> >();
            add< GeneratedQueryRunner<GeneratedQuery627> >();
            add< GeneratedQueryRunner<GeneratedQuery628> >();
            add< GeneratedQueryRunner<GeneratedQuery629> >();
            add< GeneratedQueryRunner<GeneratedQuery630> >();
            add< GeneratedQueryRunner<GeneratedQuery631> >();
            add< GeneratedQueryRunner<GeneratedQuery632> >();
            add< GeneratedQueryRunner<GeneratedQuery633> >();
            add< GeneratedQueryRunner<GeneratedQuery634> >();
            add< GeneratedQueryRunner<GeneratedQuery635> >();
            add< GeneratedQueryRunner<GeneratedQuery636> >();
            add< GeneratedQueryRunner<GeneratedQuery637> >();
            add< GeneratedQueryRunner<GeneratedQuery638> >();
            add< GeneratedQueryRunner<GeneratedQuery639> >();
            add< GeneratedQueryRunner<GeneratedQuery640> >();
            add< GeneratedQueryRunner<GeneratedQuery641> >();
            add< GeneratedQueryRunner<GeneratedQuery642> >();
            add< GeneratedQueryRunner<GeneratedQuery643> >();
            add< GeneratedQueryRunner<GeneratedQuery644> >();
            add< GeneratedQueryRunner<GeneratedQuery645> >();
            add< GeneratedQueryRunner<GeneratedQuery646> >();
            add< GeneratedQueryRunner<GeneratedQuery647> >();
            add< GeneratedQueryRunner<GeneratedQuery648> >();
            add< GeneratedQueryRunner<GeneratedQuery649> >();
            add< GeneratedQueryRunner<GeneratedQuery650> >();
            add< GeneratedQueryRunner<GeneratedQuery651> >();
            add< GeneratedQueryRunner<GeneratedQuery652> >();
            add< GeneratedQueryRunner<GeneratedQuery653> >();
            add< GeneratedQueryRunner<GeneratedQuery654> >();
            add< GeneratedQueryRunner<GeneratedQuery655> >();
            add< GeneratedQueryRunner<GeneratedQuery656> >();
            add< GeneratedQueryRunner<GeneratedQuery657> >();
            add< GeneratedQueryRunner<GeneratedQuery658> >();
            add< GeneratedQueryRunner<GeneratedQuery659> >();
            add< GeneratedQueryRunner<GeneratedQuery660> >();
            add< GeneratedQueryRunner<GeneratedQuery661> >();
            add< GeneratedQueryRunner<GeneratedQuery662> >();
            add< GeneratedQueryRunner<GeneratedQuery663> >();
            add< GeneratedQueryRunner<GeneratedQuery664> >();
            add< GeneratedQueryRunner<GeneratedQuery665> >();
            add< GeneratedQueryRunner<GeneratedQuery666> >();
            add< GeneratedQueryRunner<GeneratedQuery667> >();
            add< GeneratedQueryRunner<GeneratedQuery668> >();
            add< GeneratedQueryRunner<GeneratedQuery669> >();
            add< GeneratedQueryRunner<GeneratedQuery670> >();
            add< GeneratedQueryRunner<GeneratedQuery671> >();
            add< GeneratedQueryRunner<GeneratedQuery672> >();
            add< GeneratedQueryRunner<GeneratedQuery673> >();
            add< GeneratedQueryRunner<GeneratedQuery674> >();
            add< GeneratedQueryRunner<GeneratedQuery675> >();
            add< GeneratedQueryRunner<GeneratedQuery676> >();
            add< GeneratedQueryRunner<GeneratedQuery677> >();
            add< GeneratedQueryRunner<GeneratedQuery678> >();
            add< GeneratedQueryRunner<GeneratedQuery679> >();
            add< GeneratedQueryRunner<GeneratedQuery680> >();
            add< GeneratedQueryRunner<GeneratedQuery681> >();
            add< GeneratedQueryRunner<GeneratedQuery682> >();
            add< GeneratedQueryRunner<GeneratedQuery683> >();
            add< GeneratedQueryRunner<GeneratedQuery684> >();
            add< GeneratedQueryRunner<GeneratedQuery685> >();
            add< GeneratedQueryRunner<GeneratedQuery686> >();
            add< GeneratedQueryRunner<GeneratedQuery687> >();
            add< GeneratedQueryRunner<GeneratedQuery688> >();
            add< GeneratedQueryRunner<GeneratedQuery689> >();
            add< GeneratedQueryRunner<GeneratedQuery690> >();
            add< GeneratedQueryRunner<GeneratedQuery691> >();
            add< GeneratedQueryRunner<GeneratedQuery692> >();
            add< GeneratedQueryRunner<GeneratedQuery693> >();
            add< GeneratedQueryRunner<GeneratedQuery694> >();
            add< GeneratedQueryRunner<GeneratedQuery695> >();
            add< GeneratedQueryRunner<GeneratedQuery696> >();
            add< GeneratedQueryRunner<GeneratedQuery697> >();
            add< GeneratedQueryRunner<GeneratedQuery698> >();
            add< GeneratedQueryRunner<GeneratedQuery699> >();
            add< GeneratedQueryRunner<GeneratedQuery700> >();
            add< GeneratedQueryRunner<GeneratedQuery701> >();
            add< GeneratedQueryRunner<GeneratedQuery702> >();
            add< GeneratedQueryRunner<GeneratedQuery703> >();
            add< GeneratedQueryRunner<GeneratedQuery704> >();
            add< GeneratedQueryRunner<GeneratedQuery705> >();
            add< GeneratedQueryRunner<GeneratedQuery706> >();
            add< GeneratedQueryRunner<GeneratedQuery707> >();
            add< GeneratedQueryRunner<GeneratedQuery708> >();
            add< GeneratedQueryRunner<GeneratedQuery709> >();
            add< GeneratedQueryRunner<GeneratedQuery710> >();
            add< GeneratedQueryRunner<GeneratedQuery711> >();
            add< GeneratedQueryRunner<GeneratedQuery712> >();
            add< GeneratedQueryRunner<GeneratedQuery713> >();
            add< GeneratedQueryRunner<GeneratedQuery714> >();
            add< GeneratedQueryRunner<GeneratedQuery715> >();
            add< GeneratedQueryRunner<GeneratedQuery716> >();
            add< GeneratedQueryRunner<GeneratedQuery717> >();
            add< GeneratedQueryRunner<GeneratedQuery718> >();
            add< GeneratedQueryRunner<GeneratedQuery719> >();
            add< GeneratedQueryRunner<GeneratedQuery720> >();
            add< GeneratedQueryRunner<GeneratedQuery721> >();
            add< GeneratedQueryRunner<GeneratedQuery722> >();
            add< GeneratedQueryRunner<GeneratedQuery723> >();
            add< GeneratedQueryRunner<GeneratedQuery724> >();
            add< GeneratedQueryRunner<GeneratedQuery725> >();
            add< GeneratedQueryRunner<GeneratedQuery726> >();
            add< GeneratedQueryRunner<GeneratedQuery727> >();
            add< GeneratedQueryRunner<GeneratedQuery728> >();
            add< GeneratedQueryRunner<GeneratedQuery729> >();
            add< GeneratedQueryRunner<GeneratedQuery730> >();
            add< GeneratedQueryRunner<GeneratedQuery731> >();
            add< GeneratedQueryRunner<GeneratedQuery732> >();
            add< GeneratedQueryRunner<GeneratedQuery733> >();
            add< GeneratedQueryRunner<GeneratedQuery734> >();
            add< GeneratedQueryRunner<GeneratedQuery735> >();
            add< GeneratedQueryRunner<GeneratedQuery736> >();
            add< GeneratedQueryRunner<GeneratedQuery737> >();
            add< GeneratedQueryRunner<GeneratedQuery738> >();
            add< GeneratedQueryRunner<GeneratedQuery739> >();
            add< GeneratedQueryRunner<GeneratedQuery740> >();
            add< GeneratedQueryRunner<GeneratedQuery741> >();
            add< GeneratedQueryRunner<GeneratedQuery742> >();
            add< GeneratedQueryRunner<GeneratedQuery743> >();
            add< GeneratedQueryRunner<GeneratedQuery744> >();
            add< GeneratedQueryRunner<GeneratedQuery745> >();
            add< GeneratedQueryRunner<GeneratedQuery746> >();
            add< GeneratedQueryRunner<GeneratedQuery747> >();
            add< GeneratedQueryRunner<GeneratedQuery748> >();
            add< GeneratedQueryRunner<GeneratedQuery749> >();
            add< GeneratedQueryRunner<GeneratedQuery750> >();
            add< GeneratedQueryRunner<GeneratedQuery751> >();
            add< GeneratedQueryRunner<GeneratedQuery752> >();
            add< GeneratedQueryRunner<GeneratedQuery753> >();
            add< GeneratedQueryRunner<GeneratedQuery754> >();
            add< GeneratedQueryRunner<GeneratedQuery755> >();
            add< GeneratedQueryRunner<GeneratedQuery756> >();
            add< GeneratedQueryRunner<GeneratedQuery757> >();
            add< GeneratedQueryRunner<GeneratedQuery758> >();
            add< GeneratedQueryRunner<GeneratedQuery759> >();
            add< GeneratedQueryRunner<GeneratedQuery760> >();
            add< GeneratedQueryRunner<GeneratedQuery761> >();
            add< GeneratedQueryRunner<GeneratedQuery762> >();
            add< GeneratedQueryRunner<GeneratedQuery763> >();
            add< GeneratedQueryRunner<GeneratedQuery764> >();
            add< GeneratedQueryRunner<GeneratedQuery765> >();
            add< GeneratedQueryRunner<GeneratedQuery766> >();
            add< GeneratedQueryRunner<GeneratedQuery767> >();
            add< GeneratedQueryRunner<GeneratedQuery768> >();
            add< GeneratedQueryRunner<GeneratedQuery769> >();
            add< GeneratedQueryRunner<GeneratedQuery770> >();
            add< GeneratedQueryRunner<GeneratedQuery771> >();
            add< GeneratedQueryRunner<GeneratedQuery772> >();
            add< GeneratedQueryRunner<GeneratedQuery773> >();
            add< GeneratedQueryRunner<GeneratedQuery774> >();
            add< GeneratedQueryRunner<GeneratedQuery775> >();
            add< GeneratedQueryRunner<GeneratedQuery776> >();
            add< GeneratedQueryRunner<GeneratedQuery777> >();
            add< GeneratedQueryRunner<GeneratedQuery778> >();
            add< GeneratedQueryRunner<GeneratedQuery779> >();
            add< GeneratedQueryRunner<GeneratedQuery780> >();
            add< GeneratedQueryRunner<GeneratedQuery781> >();
            add< GeneratedQueryRunner<GeneratedQuery782> >();
            add< GeneratedQueryRunner<GeneratedQuery783> >();
            add< GeneratedQueryRunner<GeneratedQuery784> >();
            add< GeneratedQueryRunner<GeneratedQuery785> >();
            add< GeneratedQueryRunner<GeneratedQuery786> >();
            add< GeneratedQueryRunner<GeneratedQuery787> >();
            add< GeneratedQueryRunner<GeneratedQuery788> >();
            add< GeneratedQueryRunner<GeneratedQuery789> >();
            add< GeneratedQueryRunner<GeneratedQuery790> >();
            add< GeneratedQueryRunner<GeneratedQuery791> >();
            add< GeneratedQueryRunner<GeneratedQuery792> >();
            add< GeneratedQueryRunner<GeneratedQuery793> >();
            add< GeneratedQueryRunner<GeneratedQuery794> >();
            add< GeneratedQueryRunner<GeneratedQuery795> >();
            add< GeneratedQueryRunner<GeneratedQuery796> >();
            add< GeneratedQueryRunner<GeneratedQuery797> >();
            add< GeneratedQueryRunner<GeneratedQuery798> >();
            add< GeneratedQueryRunner<GeneratedQuery799> >();
            add< GeneratedQueryRunner<GeneratedQuery800> >();
            add< GeneratedQueryRunner<GeneratedQuery801> >();
            add< GeneratedQueryRunner<GeneratedQuery802> >();
            add< GeneratedQueryRunner<GeneratedQuery803> >();
            add< GeneratedQueryRunner<GeneratedQuery804> >();
            add< GeneratedQueryRunner<GeneratedQuery805> >();
            add< GeneratedQueryRunner<GeneratedQuery806> >();
            add< GeneratedQueryRunner<GeneratedQuery807> >();
            add< GeneratedQueryRunner<GeneratedQuery808> >();
            add< GeneratedQueryRunner<GeneratedQuery809> >();
            add< GeneratedQueryRunner<GeneratedQuery810> >();
            add< GeneratedQueryRunner<GeneratedQuery811> >();
            add< GeneratedQueryRunner<GeneratedQuery812> >();
            add< GeneratedQueryRunner<GeneratedQuery813> >();
            add< GeneratedQueryRunner<GeneratedQuery814> >();
            add< GeneratedQueryRunner<GeneratedQuery815> >();
            add< GeneratedQueryRunner<GeneratedQuery816> >();
            add< GeneratedQueryRunner<GeneratedQuery817> >();
            add< GeneratedQueryRunner<GeneratedQuery818> >();
            add< GeneratedQueryRunner<GeneratedQuery819> >();
            add< GeneratedQueryRunner<GeneratedQuery820> >();
            add< GeneratedQueryRunner<GeneratedQuery821> >();
            add< GeneratedQueryRunner<GeneratedQuery822> >();
            add< GeneratedQueryRunner<GeneratedQuery823> >();
            add< GeneratedQueryRunner<GeneratedQuery824> >();
            add< GeneratedQueryRunner<GeneratedQuery825> >();
            add< GeneratedQueryRunner<GeneratedQuery826> >();
            add< GeneratedQueryRunner<GeneratedQuery827> >();
            add< GeneratedQueryRunner<GeneratedQuery828> >();
            add< GeneratedQueryRunner<GeneratedQuery829> >();
            add< GeneratedQueryRunner<GeneratedQuery830> >();
            add< GeneratedQueryRunner<GeneratedQuery831> >();
            add< GeneratedQueryRunner<GeneratedQuery832> >();
            add< GeneratedQueryRunner<GeneratedQuery833> >();
            add< GeneratedQueryRunner<GeneratedQuery834> >();
            add< GeneratedQueryRunner<GeneratedQuery835> >();
            add< GeneratedQueryRunner<GeneratedQuery836> >();
            add< GeneratedQueryRunner<GeneratedQuery837> >();
            add< GeneratedQueryRunner<GeneratedQuery838> >();
            add< GeneratedQueryRunner<GeneratedQuery839> >();
            add< GeneratedQueryRunner<GeneratedQuery840> >();
            add< GeneratedQueryRunner<GeneratedQuery841> >();
            add< GeneratedQueryRunner<GeneratedQuery842> >();
            add< GeneratedQueryRunner<GeneratedQuery843> >();
            add< GeneratedQueryRunner<GeneratedQuery844> >();
            add< GeneratedQueryRunner<GeneratedQuery845> >();
            add< GeneratedQueryRunner<GeneratedQuery846> >();
            add< GeneratedQueryRunner<GeneratedQuery847> >();
            add< GeneratedQueryRunner<GeneratedQuery848> >();
            add< GeneratedQueryRunner<GeneratedQuery849> >();
            add< GeneratedQueryRunner<GeneratedQuery850> >();
            add< GeneratedQueryRunner<GeneratedQuery851> >();
            add< GeneratedQueryRunner<GeneratedQuery852> >();
            add< GeneratedQueryRunner<GeneratedQuery853> >();
            add< GeneratedQueryRunner<GeneratedQuery854> >();
            add< GeneratedQueryRunner<GeneratedQuery855> >();
            add< GeneratedQueryRunner<GeneratedQuery856> >();
            add< GeneratedQueryRunner<GeneratedQuery857> >();
            add< GeneratedQueryRunner<GeneratedQuery858> >();
            add< GeneratedQueryRunner<GeneratedQuery859> >();
            add< GeneratedQueryRunner<GeneratedQuery860> >();
            add< GeneratedQueryRunner<GeneratedQuery861> >();
            add< GeneratedQueryRunner<GeneratedQuery862> >();
            add< GeneratedQueryRunner<GeneratedQuery863> >();
            add< GeneratedQueryRunner<GeneratedQuery864> >();
            add< GeneratedQueryRunner<GeneratedQuery865> >();
            add< GeneratedQueryRunner<GeneratedQuery866> >();
            add< GeneratedQueryRunner<GeneratedQuery867> >();
            add< GeneratedQueryRunner<GeneratedQuery868> >();
            add< GeneratedQueryRunner<GeneratedQuery869> >();
            add< GeneratedQueryRunner<GeneratedQuery870> >();
            add< GeneratedQueryRunner<GeneratedQuery871> >();
            add< GeneratedQueryRunner<GeneratedQuery872> >();
            add< GeneratedQueryRunner<GeneratedQuery873> >();
            add< GeneratedQueryRunner<GeneratedQuery874> >();
            add< GeneratedQueryRunner<GeneratedQuery875> >();
            add< GeneratedQueryRunner<GeneratedQuery876> >();
            add< GeneratedQueryRunner<GeneratedQuery877> >();
            add< GeneratedQueryRunner<GeneratedQuery878> >();
            add< GeneratedQueryRunner<GeneratedQuery879> >();
            add< GeneratedQueryRunner<GeneratedQuery880> >();
            add< GeneratedQueryRunner<GeneratedQuery881> >();
            add< GeneratedQueryRunner<GeneratedQuery882> >();
            add< GeneratedQueryRunner<GeneratedQuery883> >();
            add< GeneratedQueryRunner<GeneratedQuery884> >();
            add< GeneratedQueryRunner<GeneratedQuery885> >();
            add< GeneratedQueryRunner<GeneratedQuery886> >();
            add< GeneratedQueryRunner<GeneratedQuery887> >();
            add< GeneratedQueryRunner<GeneratedQuery888> >();
            add< GeneratedQueryRunner<GeneratedQuery889> >();
            add< GeneratedQueryRunner<GeneratedQuery890> >();
            add< GeneratedQueryRunner<GeneratedQuery891> >();
            add< GeneratedQueryRunner<GeneratedQuery892> >();
            add< GeneratedQueryRunner<GeneratedQuery893> >();
            add< GeneratedQueryRunner<GeneratedQuery894> >();
            add< GeneratedQueryRunner<GeneratedQuery895> >();
            add< GeneratedQueryRunner<GeneratedQuery896> >();
            add< GeneratedQueryRunner<GeneratedQuery897> >();
            add< GeneratedQueryRunner<GeneratedQuery898> >();
            add< GeneratedQueryRunner<GeneratedQuery899> >();
            add< GeneratedQueryRunner<GeneratedQuery900> >();
            add< GeneratedQueryRunner<GeneratedQuery901> >();
            add< GeneratedQueryRunner<GeneratedQuery902> >();
            add< GeneratedQueryRunner<GeneratedQuery903> >();
            add< GeneratedQueryRunner<GeneratedQuery904> >();
            add< GeneratedQueryRunner<GeneratedQuery905> >();
            add< GeneratedQueryRunner<GeneratedQuery906> >();
            add< GeneratedQueryRunner<GeneratedQuery907> >();
            add< GeneratedQueryRunner<GeneratedQuery908> >();
            add< GeneratedQueryRunner<GeneratedQuery909> >();
            add< GeneratedQueryRunner<GeneratedQuery910> >();
            add< GeneratedQueryRunner<GeneratedQuery911> >();
            add< GeneratedQueryRunner<GeneratedQuery912> >();
            add< GeneratedQueryRunner<GeneratedQuery913> >();
            add< GeneratedQueryRunner<GeneratedQuery914> >();
            add< GeneratedQueryRunner<GeneratedQuery915> >();
            add< GeneratedQueryRunner<GeneratedQuery916> >();
            add< GeneratedQueryRunner<GeneratedQuery917> >();
            add< GeneratedQueryRunner<GeneratedQuery918> >();
            add< GeneratedQueryRunner<GeneratedQuery919> >();
            add< GeneratedQueryRunner<GeneratedQuery920> >();
            add< GeneratedQueryRunner<GeneratedQuery921> >();
            add< GeneratedQueryRunner<GeneratedQuery922> >();
            add< GeneratedQueryRunner<GeneratedQuery923> >();
            add< GeneratedQueryRunner<GeneratedQuery924> >();
            add< GeneratedQueryRunner<GeneratedQuery925> >();
            add< GeneratedQueryRunner<GeneratedQuery926> >();
            add< GeneratedQueryRunner<GeneratedQuery927> >();
            add< GeneratedQueryRunner<GeneratedQuery928> >();
            add< GeneratedQueryRunner<GeneratedQuery929> >();
            add< GeneratedQueryRunner<GeneratedQuery930> >();
            add< GeneratedQueryRunner<GeneratedQuery931> >();
            add< GeneratedQueryRunner<GeneratedQuery932> >();
            add< GeneratedQueryRunner<GeneratedQuery933> >();
            add< GeneratedQueryRunner<GeneratedQuery934> >();
            add< GeneratedQueryRunner<GeneratedQuery935> >();
            add< GeneratedQueryRunner<GeneratedQuery936> >();
            add< GeneratedQueryRunner<GeneratedQuery937> >();
            add< GeneratedQueryRunner<GeneratedQuery938> >();
            add< GeneratedQueryRunner<GeneratedQuery939> >();
            add< GeneratedQueryRunner<GeneratedQuery940> >();
            add< GeneratedQueryRunner<GeneratedQuery941> >();
            add< GeneratedQueryRunner<GeneratedQuery942> >();
            add< GeneratedQueryRunner<GeneratedQuery943> >();
            add< GeneratedQueryRunner<GeneratedQuery944> >();
            add< GeneratedQueryRunner<GeneratedQuery945> >();
            add< GeneratedQueryRunner<GeneratedQuery946> >();
            add< GeneratedQueryRunner<GeneratedQuery947> >();
            add< GeneratedQueryRunner<GeneratedQuery948> >();
            add< GeneratedQueryRunner<GeneratedQuery949> >();
            add< GeneratedQueryRunner<GeneratedQuery950> >();
            add< GeneratedQueryRunner<GeneratedQuery951> >();
            add< GeneratedQueryRunner<GeneratedQuery952> >();
            add< GeneratedQueryRunner<GeneratedQuery953> >();
            add< GeneratedQueryRunner<GeneratedQuery954> >();
            add< GeneratedQueryRunner<GeneratedQuery955> >();
            add< GeneratedQueryRunner<GeneratedQuery956> >();
            add< GeneratedQueryRunner<GeneratedQuery957> >();
            add< GeneratedQueryRunner<GeneratedQuery958> >();
            add< GeneratedQueryRunner<GeneratedQuery959> >();
            add< GeneratedQueryRunner<GeneratedQuery960> >();
            add< GeneratedQueryRunner<GeneratedQuery961> >();
            add< GeneratedQueryRunner<GeneratedQuery962> >();
            add< GeneratedQueryRunner<GeneratedQuery963> >();
            add< GeneratedQueryRunner<GeneratedQuery964> >();
            add< GeneratedQueryRunner<GeneratedQuery965> >();
            add< GeneratedQueryRunner<GeneratedQuery966> >();
            add< GeneratedQueryRunner<GeneratedQuery967> >();
            add< GeneratedQueryRunner<GeneratedQuery968> >();
            add< GeneratedQueryRunner<GeneratedQuery969> >();
            add< GeneratedQueryRunner<GeneratedQuery970> >();
            add< GeneratedQueryRunner<GeneratedQuery971> >();
            add< GeneratedQueryRunner<GeneratedQuery972> >();
            add< GeneratedQueryRunner<GeneratedQuery973> >();
            add< GeneratedQueryRunner<GeneratedQuery974> >();
            add< GeneratedQueryRunner<GeneratedQuery975> >();
            add< GeneratedQueryRunner<GeneratedQuery976> >();
            add< GeneratedQueryRunner<GeneratedQuery977> >();
            add< GeneratedQueryRunner<GeneratedQuery978> >();
            add< GeneratedQueryRunner<GeneratedQuery979> >();
            add< GeneratedQueryRunner<GeneratedQuery980> >();
            add< GeneratedQueryRunner<GeneratedQuery981> >();
            add< GeneratedQueryRunner<GeneratedQuery982> >();
            add< GeneratedQueryRunner<GeneratedQuery983> >();
            add< GeneratedQueryRunner<GeneratedQuery984> >();
            add< GeneratedQueryRunner<GeneratedQuery985> >();
            add< GeneratedQueryRunner<GeneratedQuery986> >();
            add< GeneratedQueryRunner<GeneratedQuery987> >();
            add< GeneratedQueryRunner<GeneratedQuery988> >();
            add< GeneratedQueryRunner<GeneratedQuery989> >();
            add< GeneratedQueryRunner<GeneratedQuery990> >();
            add< GeneratedQueryRunner<GeneratedQuery991> >();
            add< GeneratedQueryRunner<GeneratedQuery992> >();
            add< GeneratedQueryRunner<GeneratedQuery993> >();
            add< GeneratedQueryRunner<GeneratedQuery994> >();
            add< GeneratedQueryRunner<GeneratedQuery995> >();
            add< GeneratedQueryRunner<GeneratedQuery996> >();
            add< GeneratedQueryRunner<GeneratedQuery997> >();
            add< GeneratedQueryRunner<GeneratedQuery998> >();
            add< GeneratedQueryRunner<GeneratedQuery999> >();
            add< GeneratedQueryRunner<GeneratedQuery1000> >();
        }
    } myall;

}
